// This file was generated based on '(multiple files)'.
// WARNING: Changes might be lost if you edit this file directly.

#include <_root.FuseControlsNav-a8c01cdb.h>
#include <_root.FuseControlsPan-1146454c.h>
#include <_root.FuseControlsPri-3832896e.h>
#include <_root.FuseControlsPri-38e137c8.h>
#include <_root.FuseControlsPri-3bbae333.h>
#include <_root.FuseControlsPri-5e35c2db.h>
#include <_root.FuseControlsPri-6b573bdb.h>
#include <_root.FuseControlsPri-7b4ecfe6.h>
#include <_root.FuseControlsPri-8507d6ea.h>
#include <_root.FuseControlsPri-accbb5bd.h>
#include <_root.FuseControlsPri-ca138e33.h>
#include <_root.FuseControlsPri-ce42971.h>
#include <_root.FuseControlsPri-d52a5a11.h>
#include <_root.FuseControlsPri-d9ada289.h>
#include <_root.FuseControlsPri-e9d2ee5b.h>
#include <_root.FuseControlsScr-18c1b8f6.h>
#include <_root.FuseControlsScr-48813899.h>
#include <_root.FuseControlsScr-60808f6d.h>
#include <_root.FuseControlsScr-f1bcb258.h>
#include <Android.Base.Wrappers.JWrapper.h>
#include <Android.Base.Wrappers-88f7a41f.h>
#include <Fuse.Android.Controls.WebView.h>
#include <Fuse.Animations.Animator.h>
#include <Fuse.Animations.Change-1.h>
#include <Fuse.Animations.Easing.h>
#include <Fuse.Animations.Keyframe.h>
#include <Fuse.Animations.Move.h>
#include <Fuse.Animations.Scale.h>
#include <Fuse.Animations.TrackAnimator.h>
#include <Fuse.Animations.Trans-997c8373.h>
#include <Fuse.AppBase.h>
#include <Fuse.Binding.h>
#include <Fuse.Controls.AutoCap-526a856d.h>
#include <Fuse.Controls.AutoCorrectHint.h>
#include <Fuse.Controls.BackButton.h>
#include <Fuse.Controls.BottomB-f0a90651.h>
#include <Fuse.Controls.BottomF-14cf09.h>
#include <Fuse.Controls.Buffere-2ce2abf.h>
#include <Fuse.Controls.Button.h>
#include <Fuse.Controls.Button.Template.h>
#include <Fuse.Controls.Button.Template1.h>
#include <Fuse.Controls.Button.Template2.h>
#include <Fuse.Controls.ButtonBase.h>
#include <Fuse.Controls.Circle.h>
#include <Fuse.Controls.ClientPanel.h>
#include <Fuse.Controls.Container.h>
#include <Fuse.Controls.ContentControl.h>
#include <Fuse.Controls.Control.h>
#include <Fuse.Controls.Default-2aa05aed.h>
#include <Fuse.Controls.DockPanel.h>
#include <Fuse.Controls.EdgeNav-829b3f5e.h>
#include <Fuse.Controls.EdgeNavigator.h>
#include <Fuse.Controls.Element-32c554a5.h>
#include <Fuse.Controls.Ellipse.h>
#include <Fuse.Controls.Extensions.h>
#include <Fuse.Controls.Fallbac-cc306b75.h>
#include <Fuse.Controls.FileVideoSource.h>
#include <Fuse.Controls.FillRule.h>
#include <Fuse.Controls.FitMode.h>
#include <Fuse.Controls.FreezeDrawable.h>
#include <Fuse.Controls.Graphic-a81f3443.h>
#include <Fuse.Controls.Graphic-a9e50d2e.h>
#include <Fuse.Controls.GraphicsView.h>
#include <Fuse.Controls.Grid.h>
#include <Fuse.Controls.HTML.h>
#include <Fuse.Controls.Image.h>
#include <Fuse.Controls.ImageElementDraw.h>
#include <Fuse.Controls.INativeViewRoot.h>
#include <Fuse.Controls.IProxyH-158e5dc.h>
#include <Fuse.Controls.IProxyHost.h>
#include <Fuse.Controls.ISourceReceiver.h>
#include <Fuse.Controls.ITextEditControl.h>
#include <Fuse.Controls.ITextRenderer.h>
#include <Fuse.Controls.IWebView.h>
#include <Fuse.Controls.JavaScriptCall.h>
#include <Fuse.Controls.Keyfram-45465401.h>
#include <Fuse.Controls.LayoutControl.h>
#include <Fuse.Controls.LoadHtmlCall.h>
#include <Fuse.Controls.MobileT-379acadf.h>
#include <Fuse.Controls.MobileT-6fc61ba9.h>
#include <Fuse.Controls.MobileTextEdit.h>
#include <Fuse.Controls.MultiLayout.h>
#include <Fuse.Controls.MultiLayoutPanel.h>
#include <Fuse.Controls.Native.-11768b55.h>
#include <Fuse.Controls.Native.-144a8301.h>
#include <Fuse.Controls.Native.-20f6897.h>
#include <Fuse.Controls.Native.-3800373f.h>
#include <Fuse.Controls.Native.-454aa827.h>
#include <Fuse.Controls.Native.-51b6e8e5.h>
#include <Fuse.Controls.Native.-56f4c151.h>
#include <Fuse.Controls.Native.-5999be91.h>
#include <Fuse.Controls.Native.-5b6a09a7.h>
#include <Fuse.Controls.Native.-65e8a589.h>
#include <Fuse.Controls.Native.-737f180b.h>
#include <Fuse.Controls.Native.-92d9dd5d.h>
#include <Fuse.Controls.Native.-9abb3393.h>
#include <Fuse.Controls.Native.-a0a2bb3d.h>
#include <Fuse.Controls.Native.-a5b5d1b.h>
#include <Fuse.Controls.Native.-ada75d53.h>
#include <Fuse.Controls.Native.-ae84b26e.h>
#include <Fuse.Controls.Native.-b1307a12.h>
#include <Fuse.Controls.Native.-b2e724e6.h>
#include <Fuse.Controls.Native.-b47aa7c0.h>
#include <Fuse.Controls.Native.-ba5282a0.h>
#include <Fuse.Controls.Native.-bda9e869.h>
#include <Fuse.Controls.Native.-be81896e.h>
#include <Fuse.Controls.Native.-c20be635.h>
#include <Fuse.Controls.Native.-c67cabe.h>
#include <Fuse.Controls.Native.-ca2427b3.h>
#include <Fuse.Controls.Native.-cb7bb609.h>
#include <Fuse.Controls.Native.-d04e9e71.h>
#include <Fuse.Controls.Native.-dcf1df13.h>
#include <Fuse.Controls.Native.-e48daf2f.h>
#include <Fuse.Controls.Native.-e502cdf1.h>
#include <Fuse.Controls.Native.-f43d469d.h>
#include <Fuse.Controls.Native.-f67615b8.h>
#include <Fuse.Controls.Native.-f8b7cf50.h>
#include <Fuse.Controls.Native.-fbe3e9f9.h>
#include <Fuse.Controls.Native.ITextEdit.h>
#include <Fuse.Controls.Native.ITextView.h>
#include <Fuse.Controls.Native.IView.h>
#include <Fuse.Controls.Native.IViewHost.h>
#include <Fuse.Controls.NativeV-69528fb8.h>
#include <Fuse.Controls.NativeV-7619342.h>
#include <Fuse.Controls.NativeV-dd06d507.h>
#include <Fuse.Controls.NativeViewHost.h>
#include <Fuse.Controls.Navigat-11660598.h>
#include <Fuse.Controls.Navigat-1f9018a.h>
#include <Fuse.Controls.Navigat-2fbffbd2.h>
#include <Fuse.Controls.Navigat-325d320d.h>
#include <Fuse.Controls.Navigat-340a5907.h>
#include <Fuse.Controls.Navigat-3abd94bc.h>
#include <Fuse.Controls.Navigat-4da4086.h>
#include <Fuse.Controls.Navigat-70e90308.h>
#include <Fuse.Controls.Navigat-72feefa7.h>
#include <Fuse.Controls.Navigat-831df711.h>
#include <Fuse.Controls.Navigat-8b5bc4f.h>
#include <Fuse.Controls.Navigat-8c78e52a.h>
#include <Fuse.Controls.Navigat-9705f33a.h>
#include <Fuse.Controls.Navigat-9f619694.h>
#include <Fuse.Controls.Navigat-d377da72.h>
#include <Fuse.Controls.Navigat-d5b6859a.h>
#include <Fuse.Controls.Navigat-d9c18741.h>
#include <Fuse.Controls.Navigat-dfe8cc6e.h>
#include <Fuse.Controls.Navigat-e43a213c.h>
#include <Fuse.Controls.Navigat-fe23abf3.h>
#include <Fuse.Controls.NavigationBar.h>
#include <Fuse.Controls.Navigator.h>
#include <Fuse.Controls.NavigatorSwipe.h>
#include <Fuse.Controls.Number.h>
#include <Fuse.Controls.Page.h>
#include <Fuse.Controls.PageControl.h>
#include <Fuse.Controls.PageFreeze.h>
#include <Fuse.Controls.PageInd-b9aff4dc.h>
#include <Fuse.Controls.PageIndicator.h>
#include <Fuse.Controls.PageIndicatorDot.h>
#include <Fuse.Controls.PageView.h>
#include <Fuse.Controls.Panel.h>
#include <Fuse.Controls.Path.h>
#include <Fuse.Controls.PathScaleMode.h>
#include <Fuse.Controls.PathShape.h>
#include <Fuse.Controls.Placeholder.h>
#include <Fuse.Controls.Primiti-9017cc31.h>
#include <Fuse.Controls.RangeControl.h>
#include <Fuse.Controls.RangeControl2D.h>
#include <Fuse.Controls.Rectangle.h>
#include <Fuse.Controls.RegularPolygon.h>
#include <Fuse.Controls.RemoveType.h>
#include <Fuse.Controls.ReuseType.h>
#include <Fuse.Controls.RightFr-bdb2888a.h>
#include <Fuse.Controls.Router_-99c7a92d.h>
#include <Fuse.Controls.ScrollDirections.h>
#include <Fuse.Controls.ScrollP-640a7167.h>
#include <Fuse.Controls.ScrollP-f741d328.h>
#include <Fuse.Controls.ScrollV-56310436.h>
#include <Fuse.Controls.ScrollV-8441b02b.h>
#include <Fuse.Controls.ScrollV-9171ed6c.h>
#include <Fuse.Controls.ScrollV-b691622.h>
#include <Fuse.Controls.ScrollV-ccfff02c.h>
#include <Fuse.Controls.ScrollView.h>
#include <Fuse.Controls.ScrollViewBase.h>
#include <Fuse.Controls.Shadow.-722079e.h>
#include <Fuse.Controls.Shadow.h>
#include <Fuse.Controls.Shape.h>
#include <Fuse.Controls.Shape.Watcher.h>
#include <Fuse.Controls.SingleV-2af5ef98.h>
#include <Fuse.Controls.SingleV-744211cd.h>
#include <Fuse.Controls.SingleV-9df3d9e5.h>
#include <Fuse.Controls.SingleViewHost.h>
#include <Fuse.Controls.Slider.h>
#include <Fuse.Controls.Slider.Template.h>
#include <Fuse.Controls.Slider.Template1.h>
#include <Fuse.Controls.Slider.Template2.h>
#include <Fuse.Controls.StackPanel.h>
#include <Fuse.Controls.Star.h>
#include <Fuse.Controls.StatusB-d3f2d898.h>
#include <Fuse.Controls.Switch.h>
#include <Fuse.Controls.Switch.Template.h>
#include <Fuse.Controls.Switch.Template1.h>
#include <Fuse.Controls.Switch.Template2.h>
#include <Fuse.Controls.Text.h>
#include <Fuse.Controls.TextAlignment.h>
#include <Fuse.Controls.TextBlock.h>
#include <Fuse.Controls.TextBox.h>
#include <Fuse.Controls.TextCon-f0b9bb41.h>
#include <Fuse.Controls.TextCon-fc687c10.h>
#include <Fuse.Controls.TextControl.h>
#include <Fuse.Controls.TextEdit.h>
#include <Fuse.Controls.TextEditRenderer.h>
#include <Fuse.Controls.TextInp-90db19ac.h>
#include <Fuse.Controls.TextInp-cfb86f57.h>
#include <Fuse.Controls.TextInp-e41606bc.h>
#include <Fuse.Controls.TextInp-fdd74153.h>
#include <Fuse.Controls.TextInput.h>
#include <Fuse.Controls.TextInputControl.h>
#include <Fuse.Controls.TextInputHint.h>
#include <Fuse.Controls.TextTruncation.h>
#include <Fuse.Controls.TextView.h>
#include <Fuse.Controls.TextWrapping.h>
#include <Fuse.Controls.ToggleControl.h>
#include <Fuse.Controls.TopFram-291f3101.h>
#include <Fuse.Controls.TreeRen-26cd82a8.h>
#include <Fuse.Controls.TreeRen-789810ec.h>
#include <Fuse.Controls.TreeRenderer.h>
#include <Fuse.Controls.URISche-2ed3a615.h>
#include <Fuse.Controls.UrlVideoSource.h>
#include <Fuse.Controls.Video.h>
#include <Fuse.Controls.VideoIm-b5ceac8f.h>
#include <Fuse.Controls.VideoSource.h>
#include <Fuse.Controls.Viewbox.h>
#include <Fuse.Controls.WebView.h>
#include <Fuse.Controls.WrapPanel.h>
#include <Fuse.Diagnostics.h>
#include <Fuse.DrawContext.h>
#include <Fuse.Drawing.Antialiasing.h>
#include <Fuse.Drawing.Brush.h>
#include <Fuse.Drawing.DynamicBrush.h>
#include <Fuse.Drawing.ISolidColor.h>
#include <Fuse.Drawing.PathGeom-7b27d133.h>
#include <Fuse.Drawing.PathGeometry.h>
#include <Fuse.Drawing.PathGeom-f2414b16.h>
#include <Fuse.Drawing.Primitiv-8e6a7ca2.h>
#include <Fuse.Drawing.Primitives.Circle.h>
#include <Fuse.Drawing.Primitives.Wedge.h>
#include <Fuse.Drawing.RendererContext.h>
#include <Fuse.Drawing.ResampleMode.h>
#include <Fuse.Drawing.SolidColor.h>
#include <Fuse.Drawing.StaticSolidColor.h>
#include <Fuse.Drawing.Stroke.h>
#include <Fuse.Drawing.WindingRules.h>
#include <Fuse.Effects.DropShadow.h>
#include <Fuse.Elements.Alignment.h>
#include <Fuse.Elements.AlignmentHelpers.h>
#include <Fuse.Elements.BoxSizing.h>
#include <Fuse.Elements.Element.h>
#include <Fuse.Elements.Element-bd497d56.h>
#include <Fuse.Elements.HitTestMode.h>
#include <Fuse.Elements.Interna-78588865.h>
#include <Fuse.Elements.ITreeRenderer.h>
#include <Fuse.Elements.LayoutM-516f33ff.h>
#include <Fuse.Elements.StretchDirection.h>
#include <Fuse.Elements.StretchMode.h>
#include <Fuse.Elements.StretchSizing.h>
#include <Fuse.Elements.Visibility.h>
#include <Fuse.FastMatrix.h>
#include <Fuse.FastProperty2.h>
#include <Fuse.Font.h>
#include <Fuse.FramebufferPool.h>
#include <Fuse.FrustumViewport.h>
#include <Fuse.Gestures.KeepFocusInView.h>
#include <Fuse.Gestures.LinearR-c00ebdcf.h>
#include <Fuse.Gestures.Scroller.h>
#include <Fuse.Gestures.Swiped.h>
#include <Fuse.Gestures.SwipedHow.h>
#include <Fuse.Gestures.SwipeDirection.h>
#include <Fuse.Gestures.SwipeGesture.h>
#include <Fuse.Gestures.SwipeType.h>
#include <Fuse.Gestures.SwipingAnimation.h>
#include <Fuse.Gestures.Tapped.h>
#include <Fuse.Gestures.TappedArgs.h>
#include <Fuse.Gestures.TappedHandler.h>
#include <Fuse.Gestures.WhilePressed.h>
#include <Fuse.HitTestContext.h>
#include <Fuse.ICommonViewport.h>
#include <Fuse.IFrustum.h>
#include <Fuse.ILoading.h>
#include <Fuse.ILoadingStatic.h>
#include <Fuse.Input.Focus.h>
#include <Fuse.Input.FocusDelegator.h>
#include <Fuse.Input.FocusNavig-66c283ba.h>
#include <Fuse.Input.PointerEventArgs.h>
#include <Fuse.Internal.Drawing-d2380448.h>
#include <Fuse.Internal.DrawManager.h>
#include <Fuse.Internal.IImageC-c450902.h>
#include <Fuse.Internal.ImageContainer.h>
#include <Fuse.Internal.SizingContainer.h>
#include <Fuse.InvalidateLayoutReason.h>
#include <Fuse.IRenderViewport.h>
#include <Fuse.ITranslationMode.h>
#include <Fuse.IViewport.h>
#include <Fuse.Json.h>
#include <Fuse.Layer.h>
#include <Fuse.LayoutDependent.h>
#include <Fuse.LayoutParams.h>
#include <Fuse.LayoutPriority.h>
#include <Fuse.LayoutRole.h>
#include <Fuse.Layouts.Column.h>
#include <Fuse.Layouts.Dock.h>
#include <Fuse.Layouts.DockLayout.h>
#include <Fuse.Layouts.FlowDirection.h>
#include <Fuse.Layouts.GridChildOrder.h>
#include <Fuse.Layouts.GridLayout.h>
#include <Fuse.Layouts.Layout.h>
#include <Fuse.Layouts.Layouts.h>
#include <Fuse.Layouts.Orientation.h>
#include <Fuse.Layouts.Row.h>
#include <Fuse.Layouts.StackLayout.h>
#include <Fuse.Layouts.StackLayoutMode.h>
#include <Fuse.Layouts.WrapLayout.h>
#include <Fuse.Marshal.h>
#include <Fuse.Motion.MotionConfig.h>
#include <Fuse.Motion.ScrollViewMotion.h>
#include <Fuse.Navigation.Activ-5bc1c951.h>
#include <Fuse.Navigation.Activ-7d976650.h>
#include <Fuse.Navigation.Allow-1def7c6f.h>
#include <Fuse.Navigation.EdgeNavigation.h>
#include <Fuse.Navigation.EndSeekArgs.h>
#include <Fuse.Navigation.Enter-a69250fd.h>
#include <Fuse.Navigation.Expli-27e79c7b.h>
#include <Fuse.Navigation.Histo-b65f239b.h>
#include <Fuse.Navigation.IBase-84e3f965.h>
#include <Fuse.Navigation.INavigation.h>
#include <Fuse.Navigation.IRouterOutlet.h>
#include <Fuse.Navigation.Linea-8f82d0a2.h>
#include <Fuse.Navigation.ModifyRouteHow.h>
#include <Fuse.Navigation.Navig-11678f15.h>
#include <Fuse.Navigation.Navig-32ba495d.h>
#include <Fuse.Navigation.Navig-3e3f6fb9.h>
#include <Fuse.Navigation.Navig-4be788bd.h>
#include <Fuse.Navigation.Navigation.h>
#include <Fuse.Navigation.NavigationArgs.h>
#include <Fuse.Navigation.NavigationEdge.h>
#include <Fuse.Navigation.NavigationMode.h>
#include <Fuse.Navigation.Navig-b94564f6.h>
#include <Fuse.Navigation.Navig-c3ed68c1.h>
#include <Fuse.Navigation.Navig-f3bd6778.h>
#include <Fuse.Navigation.OutletType.h>
#include <Fuse.Navigation.Route-2abd492c.h>
#include <Fuse.Navigation.Router.h>
#include <Fuse.Navigation.RouterModify.h>
#include <Fuse.Navigation.Routi-30764b7e.h>
#include <Fuse.Navigation.RoutingResult.h>
#include <Fuse.Navigation.Struc-153e70a0.h>
#include <Fuse.Navigation.SwipeDirection.h>
#include <Fuse.Navigation.SwipeNavigate.h>
#include <Fuse.Navigation.UpdateSeekArgs.h>
#include <Fuse.Navigation.Visua-b74e2778.h>
#include <Fuse.Navigation.Visua-f5708ad5.h>
#include <Fuse.Node.h>
#include <Fuse.NodeGroupBase.h>
#include <Fuse.OrthographicFrustum.h>
#include <Fuse.Platform.ApplicationState.h>
#include <Fuse.Platform.Lifecycle.h>
#include <Fuse.Platform.SystemU-2024c55a.h>
#include <Fuse.Platform.SystemUI.h>
#include <Fuse.Properties.h>
#include <Fuse.PropertyHandle.h>
#include <Fuse.Reactive.BindingMode.h>
#include <Fuse.Reactive.Constan-264ec80.h>
#include <Fuse.Reactive.Constant.h>
#include <Fuse.Reactive.DataBinding.h>
#include <Fuse.Reactive.IExpression.h>
#include <Fuse.Reactive.Property.h>
#include <Fuse.Reactive.This.h>
#include <Fuse.Resources.ImageS-355caaa1.h>
#include <Fuse.Resources.ImageS-a985306c.h>
#include <Fuse.Resources.ImageS-d58bb329.h>
#include <Fuse.Resources.ImageSource.h>
#include <Fuse.Resources.MemoryPolicy.h>
#include <Fuse.Scripting.BoolChangedArgs.h>
#include <Fuse.Scripting.Context.h>
#include <Fuse.Scripting.Double-14a48a40.h>
#include <Fuse.Scripting.ExecutionThread.h>
#include <Fuse.Scripting.IEvent-434826af.h>
#include <Fuse.Scripting.ScriptClass.h>
#include <Fuse.Scripting.ScriptMember.h>
#include <Fuse.Scripting.ScriptMethod-1.h>
#include <Fuse.Scripting.String-a37c2db8.h>
#include <Fuse.Time.h>
#include <Fuse.Translation.h>
#include <Fuse.TranslationModes.h>
#include <Fuse.Triggers.Actions.Toggle.h>
#include <Fuse.Triggers.Actions-b3c1f4a1.h>
#include <Fuse.Triggers.Actions-b5190bae.h>
#include <Fuse.Triggers.Actions-fcab7e57.h>
#include <Fuse.Triggers.BusyTask.h>
#include <Fuse.Triggers.BusyTaskActivity.h>
#include <Fuse.Triggers.BusyTaskMatch.h>
#include <Fuse.Triggers.Progres-182f6b55.h>
#include <Fuse.Triggers.Transition.h>
#include <Fuse.Triggers.Trigger.h>
#include <Fuse.Triggers.WhileBool.h>
#include <Fuse.Triggers.WhileDisabled.h>
#include <Fuse.Triggers.WhileFocused.h>
#include <Fuse.Triggers.WhileFocusWithin.h>
#include <Fuse.UpdateManager.h>
#include <Fuse.UpdateStage.h>
#include <Fuse.ViewportHelpers.h>
#include <Fuse.Visual.h>
#include <Fuse.VisualBounds.h>
#include <Fuse.VisualContext.h>
#include <Java.Object.h>
#include <jni.h>
#include <Uno.Action.h>
#include <Uno.Action-1.h>
#include <Uno.Action-3.h>
#include <Uno.ArgumentException.h>
#include <Uno.Bool.h>
#include <Uno.Buffer.h>
#include <Uno.Collections.Dicti-d1699346.h>
#include <Uno.Collections.Dictionary-2.h>
#include <Uno.Collections.Enume-8ddd045.h>
#include <Uno.Collections.ICollection-1.h>
#include <Uno.Collections.IEnumerator.h>
#include <Uno.Collections.IEnumerator-1.h>
#include <Uno.Collections.IList-1.h>
#include <Uno.Collections.KeyValuePair-2.h>
#include <Uno.Collections.List-1.h>
#include <Uno.Collections.Obser-ca008b9a.h>
#include <Uno.Color.h>
#include <Uno.Compiler.ExportTa-39be7c2b.h>
#include <Uno.Delegate.h>
#include <Uno.Diagnostics.Debug.h>
#include <Uno.Diagnostics.Debug-5d778620.h>
#include <Uno.Double.h>
#include <Uno.EventArgs.h>
#include <Uno.EventHandler.h>
#include <Uno.EventHandler-1.h>
#include <Uno.Exception.h>
#include <Uno.Float.h>
#include <Uno.Float2.h>
#include <Uno.Float3.h>
#include <Uno.Float4.h>
#include <Uno.Float4x4.h>
#include <Uno.Func-2.h>
#include <Uno.Geometry.Ray.h>
#include <Uno.Graphics.BlendOperand.h>
#include <Uno.Graphics.BufferUsage.h>
#include <Uno.Graphics.Framebuffer.h>
#include <Uno.Graphics.PolygonFace.h>
#include <Uno.Graphics.SamplerState.h>
#include <Uno.Graphics.Texture2D.h>
#include <Uno.Graphics.VertexAt-4a875e1d.h>
#include <Uno.Graphics.VertexBuffer.h>
#include <Uno.IDisposable.h>
#include <Uno.Int.h>
#include <Uno.Int2.h>
#include <Uno.Math.h>
#include <Uno.Matrix.h>
#include <Uno.Object.h>
#include <Uno.Predicate-1.h>
#include <Uno.Rect.h>
#include <Uno.Recti.h>
#include <Uno.Runtime.Implement-6e9df330.h>
#include <Uno.Runtime.Implement-81e7ab4c.h>
#include <Uno.String.h>
#include <Uno.Type.h>
#include <Uno.UInt.h>
#include <Uno.UX.FileSource.h>
#include <Uno.UX.IPropertyListener.h>
#include <Uno.UX.NameTable.h>
#include <Uno.UX.Property.h>
#include <Uno.UX.Property-1.h>
#include <Uno.UX.PropertyAccessor.h>
#include <Uno.UX.PropertyObject.h>
#include <Uno.UX.Selector.h>
#include <Uno.UX.Size.h>
#include <Uno.UX.Size2.h>
#include <Uno.UX.Template.h>
#include <Uno.UX.Unit.h>
#include <Uno.UX.ValueChangedArgs-1.h>
#include <Uno.UX.ValueChangedHandler-1.h>
#include <Uno.Vector.h>
#include <Uno/JNIHelper.h>
static uString* STRINGS[178];
static uType* TYPES[162];

namespace g{
namespace Fuse{
namespace Controls{

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// private sealed class MobileTextEdit.AndroidTemplate :1456
// {
static void MobileTextEdit__AndroidTemplate_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::MobileTextEdit_typeof(), offsetof(::g::Fuse::Controls::MobileTextEdit__AndroidTemplate, _parent), uFieldFlagsWeak);
}

::g::Uno::UX::Template_type* MobileTextEdit__AndroidTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(MobileTextEdit__AndroidTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.MobileTextEdit.AndroidTemplate", options);
    type->fp_build_ = MobileTextEdit__AndroidTemplate_build;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))MobileTextEdit__AndroidTemplate__New1_fn;
    return type;
}

// public AndroidTemplate(Fuse.Controls.MobileTextEdit parent) :1461
void MobileTextEdit__AndroidTemplate__ctor_1_fn(MobileTextEdit__AndroidTemplate* __this, ::g::Fuse::Controls::MobileTextEdit* parent)
{
    __this->ctor_1(parent);
}

// public override sealed extern object New() :1466
void MobileTextEdit__AndroidTemplate__New1_fn(MobileTextEdit__AndroidTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit.AndroidTemplate", "New()");
    return *__retval = ::g::Fuse::Controls::Native::Android::TextEdit::New6((uObject*)__this->_parent, uPtr(__this->_parent)->_isMultiline1), void();
}

// public AndroidTemplate New(Fuse.Controls.MobileTextEdit parent) :1461
void MobileTextEdit__AndroidTemplate__New2_fn(::g::Fuse::Controls::MobileTextEdit* parent, MobileTextEdit__AndroidTemplate** __retval)
{
    *__retval = MobileTextEdit__AndroidTemplate::New2(parent);
}

// public AndroidTemplate(Fuse.Controls.MobileTextEdit parent) [instance] :1461
void MobileTextEdit__AndroidTemplate::ctor_1(::g::Fuse::Controls::MobileTextEdit* parent)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    _parent = parent;
}

// public AndroidTemplate New(Fuse.Controls.MobileTextEdit parent) [static] :1461
MobileTextEdit__AndroidTemplate* MobileTextEdit__AndroidTemplate::New2(::g::Fuse::Controls::MobileTextEdit* parent)
{
    MobileTextEdit__AndroidTemplate* obj1 = (MobileTextEdit__AndroidTemplate*)uNew(MobileTextEdit__AndroidTemplate_typeof());
    obj1->ctor_1(parent);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum AutoCapitalizationHint :861
uEnumType* AutoCapitalizationHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.AutoCapitalizationHint", ::g::Uno::Int_typeof(), 4);
    type->SetLiterals(
        "None", 0LL,
        "Characters", 1LL,
        "Words", 2LL,
        "Sentences", 3LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum AutoCorrectHint :854
uEnumType* AutoCorrectHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.AutoCorrectHint", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Default", 0LL,
        "Disabled", 1LL,
        "Enabled", 2LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class BackButton :19
// {
// static BackButton() :12
static void BackButton__cctor_4_fn(uType* __type)
{
    BackButton::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
    BackButton::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    BackButton::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[2/*"btn"*/]);
}

static void BackButton_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[2] = uString::Const("btn");
    ::STRINGS[3] = uString::Const("Back");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[2] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/], offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(104,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::BackButton, __g_nametable1), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::BackButton, temp_Value_inst), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::BackButton::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::BackButton::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::BackButton::__selector1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)BackButton__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* BackButton_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ButtonBase_typeof();
    options.FieldCount = 109;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(BackButton);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.BackButton", options);
    type->fp_build_ = BackButton_build;
    type->fp_ctor_ = (void*)BackButton__New5_fn;
    type->fp_cctor_ = BackButton__cctor_4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public BackButton() :16
void BackButton__ctor_8_fn(BackButton* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :20
void BackButton__InitializeUX_fn(BackButton* __this)
{
    __this->InitializeUX();
}

// public BackButton New() :16
void BackButton__New5_fn(BackButton** __retval)
{
    *__retval = BackButton::New5();
}

uSStrong<uArray*> BackButton::__g_static_nametable1_;
::g::Uno::UX::Selector BackButton::__selector0_;
::g::Uno::UX::Selector BackButton::__selector1_;

// public BackButton() [instance] :16
void BackButton::ctor_8()
{
    uStackFrame __("Fuse.Controls.BackButton", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :20
void BackButton::InitializeUX()
{
    uStackFrame __("Fuse.Controls.BackButton", "InitializeUX()");
    ::g::Fuse::Reactive::Constant* temp1 = ::g::Fuse::Reactive::Constant::New1(this);
    ::g::Fuse::Controls::Text* temp = ::g::Fuse::Controls::Text::New3();
    temp_Value_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_Value_Property::New1(temp, BackButton::__selector0());
    ::g::Fuse::Reactive::Property* temp2 = ::g::Fuse::Reactive::Property::New1(temp1, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text::Singleton());
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(NULL, BackButton::__g_static_nametable1());
    ::g::Fuse::Controls::Rectangle* temp3 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Reactive::DataBinding* temp4 = ::g::Fuse::Reactive::DataBinding::New1(temp_Value_inst, (uObject*)temp2, __g_nametable1, 3);
    Text(::STRINGS[3/*"Back"*/]);
    Name(BackButton::__selector1());
    temp3->Color(::g::Uno::Float4__New2(0.8666667f, 0.8666667f, 0.8666667f, 1.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp3->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    temp->Alignment(10);
    temp->Margin(::g::Uno::Float4__New2(5.0f, 5.0f, 5.0f, 5.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Bindings()), ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp4);
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp3);
}

// public BackButton New() [static] :16
BackButton* BackButton::New5()
{
    BackButton* obj1 = (BackButton*)uNew(BackButton_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno
// -----------------------------------------------------------------------------------------------------------

// public sealed class BottomBarBackground :33
// {
static void BottomBarBackground_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(98);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)BottomBarBackground__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* BottomBarBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::BottomFrameBackground_typeof();
    options.FieldCount = 98;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(BottomBarBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.BottomBarBackground", options);
    type->fp_build_ = BottomBarBackground_build;
    type->fp_ctor_ = (void*)BottomBarBackground__New3_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated BottomBarBackground() :33
void BottomBarBackground__ctor_6_fn(BottomBarBackground* __this)
{
    __this->ctor_6();
}

// public generated BottomBarBackground New() :33
void BottomBarBackground__New3_fn(BottomBarBackground** __retval)
{
    *__retval = BottomBarBackground::New3();
}

// public generated BottomBarBackground() [instance] :33
void BottomBarBackground::ctor_6()
{
    ctor_5();
}

// public generated BottomBarBackground New() [static] :33
BottomBarBackground* BottomBarBackground::New3()
{
    BottomBarBackground* obj1 = (BottomBarBackground*)uNew(BottomBarBackground_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno
// -----------------------------------------------------------------------------------------------------------

// public class BottomFrameBackground :36
// {
static void BottomFrameBackground_build(uType* type)
{
    ::TYPES[3] = ::g::Uno::EventHandler1_typeof()->MakeType(::g::Fuse::Platform::SystemUIWillResizeEventArgs_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(95,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::BottomFrameBackground, _height1), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::BottomFrameBackground, _includesKeyboard), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::BottomFrameBackground, _keyboardVisibleThreshold), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_IncludesKeyboard", NULL, (void*)BottomFrameBackground__get_IncludesKeyboard_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IncludesKeyboard", NULL, (void*)BottomFrameBackground__set_IncludesKeyboard_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_KeyboardVisibleThreshold", NULL, (void*)BottomFrameBackground__get_KeyboardVisibleThreshold_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_KeyboardVisibleThreshold", NULL, (void*)BottomFrameBackground__set_KeyboardVisibleThreshold_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)BottomFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* BottomFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 98;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(BottomFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.BottomFrameBackground", options);
    type->fp_build_ = BottomFrameBackground_build;
    type->fp_ctor_ = (void*)BottomFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))BottomFrameBackground__GetContentSize_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))BottomFrameBackground__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))BottomFrameBackground__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated BottomFrameBackground() :36
void BottomFrameBackground__ctor_5_fn(BottomFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :108
void BottomFrameBackground__GetContentSize_fn(BottomFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Uno::Float2__New2(lp_.HasX() ? lp_.X() : 0.0f, __this->_height1 / uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint()), void();
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public bool get_IncludesKeyboard() :44
void BottomFrameBackground__get_IncludesKeyboard_fn(BottomFrameBackground* __this, bool* __retval)
{
    *__retval = __this->IncludesKeyboard();
}

// public void set_IncludesKeyboard(bool value) :45
void BottomFrameBackground__set_IncludesKeyboard_fn(BottomFrameBackground* __this, bool* value)
{
    __this->IncludesKeyboard(*value);
}

// public float get_KeyboardVisibleThreshold() :58
void BottomFrameBackground__get_KeyboardVisibleThreshold_fn(BottomFrameBackground* __this, float* __retval)
{
    *__retval = __this->KeyboardVisibleThreshold();
}

// public void set_KeyboardVisibleThreshold(float value) :59
void BottomFrameBackground__set_KeyboardVisibleThreshold_fn(BottomFrameBackground* __this, float* value)
{
    __this->KeyboardVisibleThreshold(*value);
}

// public generated BottomFrameBackground New() :36
void BottomFrameBackground__New2_fn(BottomFrameBackground** __retval)
{
    *__retval = BottomFrameBackground::New2();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) :89
void BottomFrameBackground__OnFrameResized_fn(BottomFrameBackground* __this, uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    __this->OnFrameResized(sender, args);
}

// protected override sealed void OnRooted() :69
void BottomFrameBackground__OnRooted_fn(BottomFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_height1 = ::g::Fuse::Platform::SystemUI::BottomFrame().Size().Y;
    ::g::Fuse::Platform::SystemUI::add_BottomFrameWillResize(uDelegate::New(::TYPES[3/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)BottomFrameBackground__OnFrameResized_fn, __this));
}

// protected override sealed void OnUnrooted() :79
void BottomFrameBackground__OnUnrooted_fn(BottomFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_BottomFrameWillResize(uDelegate::New(::TYPES[3/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)BottomFrameBackground__OnFrameResized_fn, __this));
}

// public generated BottomFrameBackground() [instance] :36
void BottomFrameBackground::ctor_5()
{
    _includesKeyboard = true;
    _keyboardVisibleThreshold = 150.0f;
    ctor_4();
}

// public bool get_IncludesKeyboard() [instance] :44
bool BottomFrameBackground::IncludesKeyboard()
{
    return _includesKeyboard;
}

// public void set_IncludesKeyboard(bool value) [instance] :45
void BottomFrameBackground::IncludesKeyboard(bool value)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "set_IncludesKeyboard(bool)");

    if (_includesKeyboard != value)
    {
        _includesKeyboard = value;
        InvalidateLayout(2);
    }
}

// public float get_KeyboardVisibleThreshold() [instance] :58
float BottomFrameBackground::KeyboardVisibleThreshold()
{
    return _keyboardVisibleThreshold;
}

// public void set_KeyboardVisibleThreshold(float value) [instance] :59
void BottomFrameBackground::KeyboardVisibleThreshold(float value)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "set_KeyboardVisibleThreshold(float)");

    if (_keyboardVisibleThreshold != value)
    {
        _keyboardVisibleThreshold = value;
        InvalidateLayout(2);
    }
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) [instance] :89
void BottomFrameBackground::OnFrameResized(uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    uStackFrame __("Fuse.Controls.BottomFrameBackground", "OnFrameResized(object,Fuse.Platform.SystemUIWillResizeEventArgs)");
    float newHeight = uPtr(args)->EndFrame().Size().Y;

    if (IncludesKeyboard() || (newHeight < KeyboardVisibleThreshold()))
    {
        _height1 = newHeight;
        InvalidateLayout(2);
    }
}

// public generated BottomFrameBackground New() [static] :36
BottomFrameBackground* BottomFrameBackground::New2()
{
    BottomFrameBackground* obj1 = (BottomFrameBackground*)uNew(BottomFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// internal abstract interface BufferedWebViewCall :428
// {
uInterfaceType* BufferedWebViewCall_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.BufferedWebViewCall", 0, 0);
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class Button :94
// {
// static Button() :154
static void Button__cctor_4_fn(uType* __type)
{
    Button::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
}

static void Button_build(uType* type)
{
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(104,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::Button, __g_nametable1), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::Button::__g_static_nametable1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* Button_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ButtonBase_typeof();
    options.FieldCount = 106;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Button);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.Button", options);
    type->fp_build_ = Button_build;
    type->fp_ctor_ = (void*)Button__New5_fn;
    type->fp_cctor_ = Button__cctor_4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Button() :158
void Button__ctor_8_fn(Button* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :162
void Button__InitializeUX_fn(Button* __this)
{
    __this->InitializeUX();
}

// public Button New() :158
void Button__New5_fn(Button** __retval)
{
    *__retval = Button::New5();
}

uSStrong<uArray*> Button::__g_static_nametable1_;

// public Button() [instance] :158
void Button::ctor_8()
{
    uStackFrame __("Fuse.Controls.Button", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :162
void Button::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Button", "InitializeUX()");
    Button__Template* GraphicsAppearance = Button__Template::New2(this, this);
    Button__Template1* AndroidAppearance = Button__Template1::New2(this, this);
    Button__Template2* iOSAppearance = Button__Template2::New2(this, this);
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(NULL, Button::__g_static_nametable1());
    HitTestMode(6);
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// public Button New() [static] :158
Button* Button::New5()
{
    Button* obj1 = (Button*)uNew(Button_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public class ButtonBase :125
// {
static void ButtonBase_build(uType* type)
{
    ::STRINGS[4] = uString::Const("Text");
    ::TYPES[5] = ::g::Fuse::Controls::Native::ILabelView_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::ButtonBase, _text), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)ButtonBase__New4_fn, 0, true, type, 0),
        new uFunction("SetText", NULL, (void*)ButtonBase__SetText_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Text", NULL, (void*)ButtonBase__get_Text_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Text", NULL, (void*)ButtonBase__set_Text_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

::g::Fuse::Controls::Control_type* ButtonBase_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(ButtonBase);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.ButtonBase", options);
    type->fp_build_ = ButtonBase_build;
    type->fp_ctor_ = (void*)ButtonBase__New4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))ButtonBase__PushPropertiesToNativeView_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ButtonBase() :125
void ButtonBase__ctor_7_fn(ButtonBase* __this)
{
    __this->ctor_7();
}

// private Fuse.Controls.Native.ILabelView get_LabelView() :149
void ButtonBase__get_LabelView_fn(ButtonBase* __this, uObject** __retval)
{
    *__retval = __this->LabelView();
}

// public generated ButtonBase New() :125
void ButtonBase__New4_fn(ButtonBase** __retval)
{
    *__retval = ButtonBase::New4();
}

// protected override sealed void PushPropertiesToNativeView() :152
void ButtonBase__PushPropertiesToNativeView_fn(ButtonBase* __this)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    uObject* l = __this->LabelView();

    if (l != NULL)
        ::g::Fuse::Controls::Native::ILabelView::Text(uInterface(uPtr(l), ::TYPES[5/*Fuse.Controls.Native.ILabelView*/]), __this->Text());
}

// public void SetText(string value, Uno.UX.IPropertyListener origin) :135
void ButtonBase__SetText_fn(ButtonBase* __this, uString* value, uObject* origin)
{
    __this->SetText(value, origin);
}

// public string get_Text() :131
void ButtonBase__get_Text_fn(ButtonBase* __this, uString** __retval)
{
    *__retval = __this->Text();
}

// public void set_Text(string value) :132
void ButtonBase__set_Text_fn(ButtonBase* __this, uString* value)
{
    __this->Text(value);
}

// public generated ButtonBase() [instance] :125
void ButtonBase::ctor_7()
{
    ctor_6();
}

// private Fuse.Controls.Native.ILabelView get_LabelView() [instance] :149
uObject* ButtonBase::LabelView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[5/*Fuse.Controls.Native.ILabelView*/]);
}

// public void SetText(string value, Uno.UX.IPropertyListener origin) [instance] :135
void ButtonBase::SetText(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "SetText(string,Uno.UX.IPropertyListener)");

    if (::g::Uno::String::op_Inequality(value, _text))
    {
        _text = value;
        OnPropertyChanged1(::g::Uno::UX::Selector__op_Implicit(::STRINGS[4/*"Text"*/]), origin);
        uObject* l = LabelView();

        if (l != NULL)
            ::g::Fuse::Controls::Native::ILabelView::Text(uInterface(uPtr(l), ::TYPES[5/*Fuse.Controls.Native.ILabelView*/]), value);
    }
}

// public string get_Text() [instance] :131
uString* ButtonBase::Text()
{
    return _text;
}

// public void set_Text(string value) [instance] :132
void ButtonBase::Text(uString* value)
{
    uStackFrame __("Fuse.Controls.ButtonBase", "set_Text(string)");
    SetText(value, NULL);
}

// public generated ButtonBase New() [static] :125
ButtonBase* ButtonBase::New4()
{
    ButtonBase* obj1 = (ButtonBase*)uNew(ButtonBase_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Circle :60
// {
static void Circle_build(uType* type)
{
    ::STRINGS[5] = uString::Const("EndAngle");
    ::STRINGS[6] = uString::Const("LengthAngle");
    ::STRINGS[7] = uString::Const("StartAngle");
    ::TYPES[6] = ::g::Fuse::Controls::Native::ICircleView_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14));
    type->SetFields(100,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Circle, _endAngle), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Circle, _hasAngle), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Circle, _hasLengthAngle), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Circle, _lengthAngle), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Circle, _startAngle), 0);
    type->Reflection.SetFunctions(13,
        new uFunction("get_EndAngle", NULL, (void*)Circle__get_EndAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_EndAngle", NULL, (void*)Circle__set_EndAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_EndAngleDegrees", NULL, (void*)Circle__get_EndAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_EndAngleDegrees", NULL, (void*)Circle__set_EndAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LengthAngle", NULL, (void*)Circle__get_LengthAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LengthAngle", NULL, (void*)Circle__set_LengthAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LengthAngleDegrees", NULL, (void*)Circle__get_LengthAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LengthAngleDegrees", NULL, (void*)Circle__set_LengthAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)Circle__New3_fn, 0, true, type, 0),
        new uFunction("get_StartAngle", NULL, (void*)Circle__get_StartAngle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_StartAngle", NULL, (void*)Circle__set_StartAngle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_StartAngleDegrees", NULL, (void*)Circle__get_StartAngleDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_StartAngleDegrees", NULL, (void*)Circle__set_StartAngleDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Controls::Shape_type* Circle_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Circle);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Circle", options);
    type->fp_build_ = Circle_build;
    type->fp_ctor_ = (void*)Circle__New3_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Circle__CreateNativeView_fn;
    type->fp_DrawFill = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Brush*))Circle__DrawFill_fn;
    type->fp_DrawStroke = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Stroke*))Circle__DrawStroke_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Circle__OnHitTestLocalVisual_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Circle__PushPropertiesToNativeView_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Circle() :60
void Circle__ctor_7_fn(Circle* __this)
{
    __this->ctor_7();
}

// internal static bool AngleInRange(float angle, float start, float end) :176
void Circle__AngleInRange_fn(float* angle, float* start, float* end, bool* __retval)
{
    *__retval = Circle::AngleInRange(*angle, *start, *end);
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :194
void Circle__CreateNativeView_fn(Circle* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Circle", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Circle::New3(), void();
}

// protected override sealed void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :240
void Circle__DrawFill_fn(Circle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
    uStackFrame __("Fuse.Controls.Circle", "DrawFill(Fuse.DrawContext,Fuse.Drawing.Brush)");
    float startAngle = __this->StartAngle();
    float endAngle = __this->EffectiveEndAngle();

    if (__this->UseAngle())
        uPtr(::g::Fuse::Drawing::Primitives::Wedge::Singleton())->Fill(dc, __this, __this->Radius(), fill, __this->Center(), startAngle, endAngle, __this->Smoothness());
    else
        uPtr(::g::Fuse::Drawing::Primitives::Circle::Singleton())->Fill(dc, __this, __this->Radius(), fill, __this->Center(), __this->Smoothness());
}

// protected override sealed void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :253
void Circle__DrawStroke_fn(Circle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
    uStackFrame __("Fuse.Controls.Circle", "DrawStroke(Fuse.DrawContext,Fuse.Drawing.Stroke)");
    float startAngle = __this->StartAngle();
    float endAngle = __this->EffectiveEndAngle();

    if (__this->UseAngle())
        uPtr(::g::Fuse::Drawing::Primitives::Wedge::Singleton())->Stroke(dc, __this, __this->Radius(), stroke, __this->Center(), startAngle, endAngle, __this->Smoothness());
    else
        uPtr(::g::Fuse::Drawing::Primitives::Circle::Singleton())->Stroke(dc, __this, __this->Radius(), stroke, __this->Center(), __this->Smoothness());
}

// internal float get_EffectiveEndAngle() :165
void Circle__get_EffectiveEndAngle_fn(Circle* __this, float* __retval)
{
    *__retval = __this->EffectiveEndAngle();
}

// internal float get_EffectiveEndAngleDegrees() :173
void Circle__get_EffectiveEndAngleDegrees_fn(Circle* __this, float* __retval)
{
    *__retval = __this->EffectiveEndAngleDegrees();
}

// public float get_EndAngle() :94
void Circle__get_EndAngle_fn(Circle* __this, float* __retval)
{
    *__retval = __this->EndAngle();
}

// public void set_EndAngle(float value) :95
void Circle__set_EndAngle_fn(Circle* __this, float* value)
{
    __this->EndAngle(*value);
}

// public float get_EndAngleDegrees() :152
void Circle__get_EndAngleDegrees_fn(Circle* __this, float* __retval)
{
    *__retval = __this->EndAngleDegrees();
}

// public void set_EndAngleDegrees(float value) :153
void Circle__set_EndAngleDegrees_fn(Circle* __this, float* value)
{
    __this->EndAngleDegrees(*value);
}

// public float get_LengthAngle() :130
void Circle__get_LengthAngle_fn(Circle* __this, float* __retval)
{
    *__retval = __this->LengthAngle();
}

// public void set_LengthAngle(float value) :131
void Circle__set_LengthAngle_fn(Circle* __this, float* value)
{
    __this->LengthAngle(*value);
}

// public float get_LengthAngleDegrees() :159
void Circle__get_LengthAngleDegrees_fn(Circle* __this, float* __retval)
{
    *__retval = __this->LengthAngleDegrees();
}

// public void set_LengthAngleDegrees(float value) :160
void Circle__set_LengthAngleDegrees_fn(Circle* __this, float* value)
{
    __this->LengthAngleDegrees(*value);
}

// private Fuse.Controls.Native.ICircleView get_NativeCircle() :191
void Circle__get_NativeCircle_fn(Circle* __this, uObject** __retval)
{
    *__retval = __this->NativeCircle();
}

// public generated Circle New() :60
void Circle__New3_fn(Circle** __retval)
{
    *__retval = Circle::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :266
void Circle__OnHitTestLocalVisual_fn(Circle* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Circle", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);

    if (!__this->HasFills() || (::g::Uno::Vector::Distance(uPtr(htc)->LocalPoint(), __this->Center()) > __this->Radius()))
        return;

    if (__this->UseAngle())
    {
        ::g::Uno::Float2 off = ::g::Uno::Float2__op_Subtraction2(uPtr(htc)->LocalPoint(), __this->Center());
        float localAngle = ::g::Uno::Math::Atan22(off.Y, off.X);

        if (!Circle::AngleInRange(localAngle, __this->StartAngle(), __this->EffectiveEndAngle()))
            return;
    }

    uPtr(htc)->Hit(__this);
}

// protected override sealed void PushPropertiesToNativeView() :207
void Circle__PushPropertiesToNativeView_fn(Circle* __this)
{
    uStackFrame __("Fuse.Controls.Circle", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Shape__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeCircle();
}

// internal float get_Radius() :64
void Circle__get_Radius_fn(Circle* __this, float* __retval)
{
    *__retval = __this->Radius();
}

// public float get_StartAngle() :76
void Circle__get_StartAngle_fn(Circle* __this, float* __retval)
{
    *__retval = __this->StartAngle();
}

// public void set_StartAngle(float value) :77
void Circle__set_StartAngle_fn(Circle* __this, float* value)
{
    __this->StartAngle(*value);
}

// public float get_StartAngleDegrees() :146
void Circle__get_StartAngleDegrees_fn(Circle* __this, float* __retval)
{
    *__retval = __this->StartAngleDegrees();
}

// public void set_StartAngleDegrees(float value) :147
void Circle__set_StartAngleDegrees_fn(Circle* __this, float* value)
{
    __this->StartAngleDegrees(*value);
}

// private void UpdateNativeCircle() :213
void Circle__UpdateNativeCircle_fn(Circle* __this)
{
    __this->UpdateNativeCircle();
}

// internal bool get_UseAngle() :110
void Circle__get_UseAngle_fn(Circle* __this, bool* __retval)
{
    *__retval = __this->UseAngle();
}

// public generated Circle() [instance] :60
void Circle::ctor_7()
{
    ctor_6();
}

// internal float get_EffectiveEndAngle() [instance] :165
float Circle::EffectiveEndAngle()
{
    return _hasLengthAngle ? _startAngle + _lengthAngle : _endAngle;
}

// internal float get_EffectiveEndAngleDegrees() [instance] :173
float Circle::EffectiveEndAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(EffectiveEndAngle());
}

// public float get_EndAngle() [instance] :94
float Circle::EndAngle()
{
    return _endAngle;
}

// public void set_EndAngle(float value) [instance] :95
void Circle::EndAngle(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_EndAngle(float)");

    if (_endAngle == value)
        return;

    _endAngle = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[5/*"EndAngle"*/]));
    UpdateNativeCircle();
}

// public float get_EndAngleDegrees() [instance] :152
float Circle::EndAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_endAngle);
}

// public void set_EndAngleDegrees(float value) [instance] :153
void Circle::EndAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_EndAngleDegrees(float)");
    EndAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// public float get_LengthAngle() [instance] :130
float Circle::LengthAngle()
{
    return _lengthAngle;
}

// public void set_LengthAngle(float value) [instance] :131
void Circle::LengthAngle(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_LengthAngle(float)");

    if (_hasLengthAngle && (_lengthAngle == value))
        return;

    _lengthAngle = value;
    _hasLengthAngle = true;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[6/*"LengthAngle"*/]));
}

// public float get_LengthAngleDegrees() [instance] :159
float Circle::LengthAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_lengthAngle);
}

// public void set_LengthAngleDegrees(float value) [instance] :160
void Circle::LengthAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_LengthAngleDegrees(float)");
    LengthAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// private Fuse.Controls.Native.ICircleView get_NativeCircle() [instance] :191
uObject* Circle::NativeCircle()
{
    return uAs<uObject*>(NativeView(), ::TYPES[6/*Fuse.Controls.Native.ICircleView*/]);
}

// internal float get_Radius() [instance] :64
float Circle::Radius()
{
    return ::g::Uno::Math::Min1(ContentSize().X, ContentSize().Y) * 0.5f;
}

// public float get_StartAngle() [instance] :76
float Circle::StartAngle()
{
    return _startAngle;
}

// public void set_StartAngle(float value) [instance] :77
void Circle::StartAngle(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_StartAngle(float)");

    if (_hasAngle && (_startAngle == value))
        return;

    _startAngle = value;
    _hasAngle = true;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[7/*"StartAngle"*/]));
    UpdateNativeCircle();
}

// public float get_StartAngleDegrees() [instance] :146
float Circle::StartAngleDegrees()
{
    return ::g::Uno::Math::RadiansToDegrees1(_startAngle);
}

// public void set_StartAngleDegrees(float value) [instance] :147
void Circle::StartAngleDegrees(float value)
{
    uStackFrame __("Fuse.Controls.Circle", "set_StartAngleDegrees(float)");
    StartAngle(::g::Uno::Math::DegreesToRadians1(value));
}

// private void UpdateNativeCircle() [instance] :213
void Circle::UpdateNativeCircle()
{
    uStackFrame __("Fuse.Controls.Circle", "UpdateNativeCircle()");
    uObject* nc = NativeCircle();

    if (nc != NULL)
    {
        ::g::Fuse::Controls::Native::ICircleView::UseAngle(uInterface(uPtr(nc), ::TYPES[6/*Fuse.Controls.Native.ICircleView*/]), UseAngle());
        ::g::Fuse::Controls::Native::ICircleView::StartAngleDegrees(uInterface(nc, ::TYPES[6/*Fuse.Controls.Native.ICircleView*/]), StartAngleDegrees());
        ::g::Fuse::Controls::Native::ICircleView::EndAngleDegrees(uInterface(nc, ::TYPES[6/*Fuse.Controls.Native.ICircleView*/]), EndAngleDegrees());
        ::g::Fuse::Controls::Native::ICircleView::EffectiveEndAngleDegrees(uInterface(nc, ::TYPES[6/*Fuse.Controls.Native.ICircleView*/]), EffectiveEndAngleDegrees());
    }
}

// internal bool get_UseAngle() [instance] :110
bool Circle::UseAngle()
{
    if (!_hasAngle)
        return false;

    if (_hasLengthAngle && (_lengthAngle >= 6.28318548f))
        return false;

    return true;
}

// internal static bool AngleInRange(float angle, float start, float end) [static] :176
bool Circle::AngleInRange(float angle, float start, float end)
{
    angle = ::g::Uno::Math::Mod1(angle, 6.28318548f);
    float pStartAngle = ::g::Uno::Math::Mod1(start, 6.28318548f);
    float pEndAngle = ::g::Uno::Math::Mod1(end, 6.28318548f);

    if (pStartAngle > pEndAngle)
        return (angle > pStartAngle) || (angle < pEndAngle);
    else
        return (angle > pStartAngle) && (angle < pEndAngle);
}

// public generated Circle New() [static] :60
Circle* Circle::New3()
{
    Circle* obj1 = (Circle*)uNew(Circle_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public partial class ClientPanel :33
// {
// static ClientPanel() :8
static void ClientPanel__cctor_4_fn(uType* __type)
{
}

static void ClientPanel_build(uType* type)
{
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(104);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ClientPanel__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* ClientPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::DockPanel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(ClientPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.ClientPanel", options);
    type->fp_build_ = ClientPanel_build;
    type->fp_ctor_ = (void*)ClientPanel__New5_fn;
    type->fp_cctor_ = ClientPanel__cctor_4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ClientPanel() :12
void ClientPanel__ctor_8_fn(ClientPanel* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :16
void ClientPanel__InitializeUX_fn(ClientPanel* __this)
{
    __this->InitializeUX();
}

// public ClientPanel New() :12
void ClientPanel__New5_fn(ClientPanel** __retval)
{
    *__retval = ClientPanel::New5();
}

// public ClientPanel() [instance] :12
void ClientPanel::ctor_8()
{
    uStackFrame __("Fuse.Controls.ClientPanel", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :16
void ClientPanel::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ClientPanel", "InitializeUX()");
    ::g::Fuse::Controls::TopFrameBackground* temp = ::g::Fuse::Controls::TopFrameBackground::New2();
    ::g::Fuse::Controls::BottomFrameBackground* temp1 = ::g::Fuse::Controls::BottomFrameBackground::New2();
    ::g::Fuse::Controls::DockPanel::SetDock(temp, 2);
    ::g::Fuse::Controls::DockPanel::SetDock(temp1, 3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp1);
}

// public ClientPanel New() [static] :12
ClientPanel* ClientPanel::New5()
{
    ClientPanel* obj1 = (ClientPanel*)uNew(ClientPanel_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class Container :74
// {
static void Container_build(uType* type)
{
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[7] = ::g::Uno::Collections::ObservableList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[8] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::Container, _subtree), 0,
        ::TYPES[7/*Uno.Collections.ObservableList<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Container, _subtreeNodes), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)Container__New4_fn, 0, true, type, 0),
        new uFunction("get_Subtree", NULL, (void*)Container__get_Subtree_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("set_Subtree", NULL, (void*)Container__set_Subtree_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_SubtreeNodes", NULL, (void*)Container__get_SubtreeNodes_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), 0));
}

::g::Fuse::Controls::Control_type* Container_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Container);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.Container", options);
    type->fp_build_ = Container_build;
    type->fp_ctor_ = (void*)Container__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Container() :74
void Container__ctor_7_fn(Container* __this)
{
    __this->ctor_7();
}

// private void AddNodes() :118
void Container__AddNodes_fn(Container* __this)
{
    __this->AddNodes();
}

// public generated Container New() :74
void Container__New4_fn(Container** __retval)
{
    *__retval = Container::New4();
}

// private void OnNodeAdded(Fuse.Node n) :108
void Container__OnNodeAdded_fn(Container* __this, ::g::Fuse::Node* n)
{
    __this->OnNodeAdded(n);
}

// private void OnNodeRemoved(Fuse.Node n) :113
void Container__OnNodeRemoved_fn(Container* __this, ::g::Fuse::Node* n)
{
    __this->OnNodeRemoved(n);
}

// private void RemoveNodes() :125
void Container__RemoveNodes_fn(Container* __this)
{
    __this->RemoveNodes();
}

// public Fuse.Visual get_Subtree() :80
void Container__get_Subtree_fn(Container* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Subtree();
}

// public void set_Subtree(Fuse.Visual value) :81
void Container__set_Subtree_fn(Container* __this, ::g::Fuse::Visual* value)
{
    __this->Subtree(value);
}

// public Uno.Collections.IList<Fuse.Node> get_SubtreeNodes() :99
void Container__get_SubtreeNodes_fn(Container* __this, uObject** __retval)
{
    *__retval = __this->SubtreeNodes();
}

// public generated Container() [instance] :74
void Container::ctor_7()
{
    ctor_6();
}

// private void AddNodes() [instance] :118
void Container::AddNodes()
{
    uStackFrame __("Fuse.Controls.Container", "AddNodes()");
    ::g::Fuse::Node* ret2;

    if (_subtreeNodes != NULL)

        for (int i = 0; i < uPtr(_subtreeNodes)->Count(); i++)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), (::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(_subtreeNodes), uCRef<int>(i), &ret2), ret2));
}

// private void OnNodeAdded(Fuse.Node n) [instance] :108
void Container::OnNodeAdded(::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Container", "OnNodeAdded(Fuse.Node)");

    if (_subtree != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), n);
}

// private void OnNodeRemoved(Fuse.Node n) [instance] :113
void Container::OnNodeRemoved(::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Container", "OnNodeRemoved(Fuse.Node)");
    bool ret3;

    if (_subtree != NULL)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), n, &ret3);
}

// private void RemoveNodes() [instance] :125
void Container::RemoveNodes()
{
    uStackFrame __("Fuse.Controls.Container", "RemoveNodes()");
    bool ret4;
    ::g::Fuse::Node* ret5;

    if (_subtreeNodes != NULL)

        for (int i = 0; i < uPtr(_subtreeNodes)->Count(); i++)
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_subtree)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), (::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(_subtreeNodes), uCRef<int>(i), &ret5), ret5), &ret4);
}

// public Fuse.Visual get_Subtree() [instance] :80
::g::Fuse::Visual* Container::Subtree()
{
    return _subtree;
}

// public void set_Subtree(Fuse.Visual value) [instance] :81
void Container::Subtree(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.Container", "set_Subtree(Fuse.Visual)");

    if (_subtree != value)
    {
        if (_subtree != NULL)
            RemoveNodes();

        _subtree = value;

        if (_subtree != NULL)
            AddNodes();
    }
}

// public Uno.Collections.IList<Fuse.Node> get_SubtreeNodes() [instance] :99
uObject* Container::SubtreeNodes()
{
    uStackFrame __("Fuse.Controls.Container", "get_SubtreeNodes()");

    if (_subtreeNodes == NULL)
        _subtreeNodes = ((::g::Uno::Collections::ObservableList*)::g::Uno::Collections::ObservableList::New1(::TYPES[7/*Uno.Collections.ObservableList<Fuse.Node>*/], uDelegate::New(::TYPES[8/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeAdded_fn, this), uDelegate::New(::TYPES[8/*Uno.Action<Fuse.Node>*/], (void*)Container__OnNodeRemoved_fn, this)));

    return (uObject*)_subtreeNodes;
}

// public generated Container New() [static] :74
Container* Container::New4()
{
    Container* obj1 = (Container*)uNew(Container_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls/0.47.7/$.uno
// ----------------------------------------------------------------------------------------

// public class ContentControl :158
// {
static void ContentControl_build(uType* type)
{
    ::STRINGS[8] = uString::Const(" (ContentControl) can only have one visual child");
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ContentControl_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ContentControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ContentControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ContentControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ContentControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ContentControl_type, interface14));
    type->SetFields(95);
    type->Reflection.SetFunctions(3,
        new uFunction("get_Content", NULL, (void*)ContentControl__get_Content_fn, 0, false, ::TYPES[10/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Content", NULL, (void*)ContentControl__set_Content_fn, 0, false, uVoid_typeof(), 1, ::TYPES[10/*Fuse.Elements.Element*/]),
        new uFunction(".ctor", NULL, (void*)ContentControl__New2_fn, 0, true, type, 0));
}

ContentControl_type* ContentControl_typeof()
{
    static uSStrong<ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 95;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(ContentControl);
    options.TypeSize = sizeof(ContentControl_type);
    type = (ContentControl_type*)uClassType::New("Fuse.Controls.ContentControl", options);
    type->fp_build_ = ContentControl_build;
    type->fp_ctor_ = (void*)ContentControl__New2_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))ContentControl__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))ContentControl__GetContentSize_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ContentControl__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ContentControl__OnChildRemoved_fn;
    type->fp_OnContentChanged = ContentControl__OnContentChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ContentControl() :158
void ContentControl__ctor_5_fn(ContentControl* __this)
{
    __this->ctor_5();
}

// protected override void ArrangePaddingBox(Fuse.LayoutParams lp) :207
void ContentControl__ArrangePaddingBox_fn(ContentControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.ContentControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind1;
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Content() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind1 = __this->Padding(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), (ind2 = __this->Padding(), ::g::Uno::Float2__New2(ind2.Z, ind2.W))));
        uPtr(__this->Content())->ArrangeMarginBox((ind3 = __this->Padding(), ::g::Uno::Float2__New2(ind3.X, ind3.Y)), nlp);
    }
}

// public Fuse.Elements.Element get_Content() :162
void ContentControl__get_Content_fn(ContentControl* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Content();
}

// public void set_Content(Fuse.Elements.Element value) :166
void ContentControl__set_Content_fn(ContentControl* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Content(value);
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :200
void ContentControl__GetContentSize_fn(ContentControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.ContentControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Content() != NULL)
        return *__retval = uPtr(__this->Content())->GetMarginSize(lp_), void();

    return *__retval = ::g::Uno::Float2__New1(0.0f), void();
}

// public generated ContentControl New() :158
void ContentControl__New2_fn(ContentControl** __retval)
{
    *__retval = ContentControl::New2();
}

// protected override void OnChildAdded(Fuse.Node n) :181
void ContentControl__OnChildAdded_fn(ContentControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Elements::Element__OnChildAdded_fn(__this, n);

    if (uIs(n, ::TYPES[9/*Fuse.Visual*/]))
    {
        if (__this->ZOrderChildCount() > 1)
            U_THROW(::g::Uno::Exception::New2(::g::Uno::String::op_Addition(__this, ::STRINGS[8/*" (ContentCo...*/])));

        __this->OnContentChanged();
    }
}

// protected override void OnChildRemoved(Fuse.Node n) :194
void ContentControl__OnChildRemoved_fn(ContentControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Elements::Element__OnChildRemoved_fn(__this, n);

    if (uIs(n, ::TYPES[9/*Fuse.Visual*/]))
        __this->OnContentChanged();
}

// protected virtual void OnContentChanged() :176
void ContentControl__OnContentChanged_fn(ContentControl* __this)
{
    uStackFrame __("Fuse.Controls.ContentControl", "OnContentChanged()");
    __this->InvalidateLayout(2);
}

// public generated ContentControl() [instance] :158
void ContentControl::ctor_5()
{
    ctor_4();
}

// public Fuse.Elements.Element get_Content() [instance] :162
::g::Fuse::Elements::Element* ContentControl::Content()
{
    return uAs< ::g::Fuse::Elements::Element*>(FirstVisualChild(), ::TYPES[10/*Fuse.Elements.Element*/]);
}

// public void set_Content(Fuse.Elements.Element value) [instance] :166
void ContentControl::Content(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.ContentControl", "set_Content(Fuse.Elements.Element)");
    bool ret5;

    if (Content() != value)
    {
        if (Content() != NULL)
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), Content(), &ret5);

        if (value != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), value);
    }
}

// public generated ContentControl New() [static] :158
ContentControl* ContentControl::New2()
{
    ContentControl* obj4 = (ContentControl*)uNew(ContentControl_typeof());
    obj4->ctor_5();
    return obj4;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls/0.47.7/$.uno
// ----------------------------------------------------------------------------------------

// public interfacemodifiers class Control :10
// {
static void Control_build(uType* type)
{
    ::TYPES[11] = ::g::Fuse::Elements::ITreeRenderer_typeof();
    ::TYPES[12] = ::g::Fuse::Drawing::DynamicBrush_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Control_type, interface14));
    type->SetFields(90,
        ::g::Fuse::Drawing::Brush_typeof(), offsetof(::g::Fuse::Controls::Control, _background), 0,
        ::g::Fuse::Controls::Native::IView_typeof(), offsetof(::g::Fuse::Controls::Control, _nativeView), 0,
        uObject_typeof(), offsetof(::g::Fuse::Controls::Control, _Appearance), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::Control, _GraphicsVisual), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::Control, _ViewHandle), 0);
    type->Reflection.SetFunctions(6,
        new uFunction("get_Appearance", NULL, (void*)Control__get_Appearance_fn, 0, false, uObject_typeof(), 0),
        new uFunction("get_Background", NULL, (void*)Control__get_Background_fn, 0, false, ::g::Fuse::Drawing::Brush_typeof(), 0),
        new uFunction("set_Background", NULL, (void*)Control__set_Background_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::Brush_typeof()),
        new uFunction("get_GraphicsVisual", NULL, (void*)Control__get_GraphicsVisual_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("get_NativeView", NULL, (void*)Control__get_NativeView_fn, 0, false, ::g::Fuse::Controls::Native::IView_typeof(), 0),
        new uFunction("get_ViewHandle", NULL, (void*)Control__get_ViewHandle_fn, 0, false, ::g::Fuse::Controls::Native::ViewHandle_typeof(), 0));
}

Control_type* Control_typeof()
{
    static uSStrong<Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Elements::Element_typeof();
    options.FieldCount = 95;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Control);
    options.TypeSize = sizeof(Control_type);
    type = (Control_type*)uClassType::New("Fuse.Controls.Control", options);
    type->fp_build_ = Control_build;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Control__CalcRenderBounds_fn;
    type->fp_CompensateForScrollView = Control__CompensateForScrollView_fn;
    type->fp_CreateNativeView = Control__CreateNativeView_fn;
    type->fp_DrawVisual = Control__DrawVisual_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Control__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Control__get_HitTestLocalVisualBounds_fn;
    type->fp_OnDraw = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))Control__OnDraw_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Control__OnHitTestLocalVisual_fn;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Control__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Control__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Control__OnUnrooted_fn;
    type->fp_PushPropertiesToNativeView = Control__PushPropertiesToNativeView_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated Control() :10
void Control__ctor_4_fn(Control* __this)
{
    __this->ctor_4();
}

// public generated object get_Appearance() :231
void Control__get_Appearance_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->Appearance();
}

// internal generated void set_Appearance(object value) :231
void Control__set_Appearance_fn(Control* __this, uObject* value)
{
    __this->Appearance(value);
}

// public Fuse.Drawing.Brush get_Background() :29
void Control__get_Background_fn(Control* __this, ::g::Fuse::Drawing::Brush** __retval)
{
    *__retval = __this->Background();
}

// public void set_Background(Fuse.Drawing.Brush value) :30
void Control__set_Background_fn(Control* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->Background(value);
}

// protected override Fuse.VisualBounds CalcRenderBounds() :353
void Control__CalcRenderBounds_fn(Control* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Control", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret1;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Elements::Element__CalcRenderBounds_fn(__this, &ret1), ret1);

    if (__this->Background() != NULL)
        b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = b, void();
}

// internal virtual void CompensateForScrollView(float4x4& t) :281
void Control__CompensateForScrollView_fn(Control* __this, ::g::Uno::Float4x4* t)
{
}

// protected virtual Fuse.Controls.Native.IView CreateNativeView() :258
void Control__CreateNativeView_fn(Control* __this, uObject** __retval)
{
    return *__retval = NULL, void();
}

// protected void DrawBackground(Fuse.DrawContext dc, float opacity) :94
void Control__DrawBackground_fn(Control* __this, ::g::Fuse::DrawContext* dc, float* opacity)
{
    __this->DrawBackground(dc, *opacity);
}

// protected virtual void DrawVisual(Fuse.DrawContext dc) :332
void Control__DrawVisual_fn(Control* __this, ::g::Fuse::DrawContext* dc)
{
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :269
void Control__GetContentSize_fn(Control* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Control", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 ret2;
    uObject* t = __this->TreeRenderer();

    if (t != NULL)
    {
        ::g::Uno::Float2 size;

        if (::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(t), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), __this, lp_, &size))
            return *__retval = size, void();
    }

    return *__retval = (::g::Fuse::Elements::Element__GetContentSize_fn(__this, uCRef(lp_), &ret2), ret2), void();
}

// public generated Fuse.Visual get_GraphicsVisual() :233
void Control__get_GraphicsVisual_fn(Control* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->GraphicsVisual();
}

// internal generated void set_GraphicsVisual(Fuse.Visual value) :233
void Control__set_GraphicsVisual_fn(Control* __this, ::g::Fuse::Visual* value)
{
    __this->GraphicsVisual(value);
}

// protected override Fuse.VisualBounds get_HitTestLocalVisualBounds() :344
void Control__get_HitTestLocalVisualBounds_fn(Control* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Control", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret3;
    ::g::Fuse::VisualBounds* nb = (::g::Fuse::Elements::Element__get_HitTestLocalVisualBounds_fn(__this, &ret3), ret3);

    if (__this->Background() != NULL)
        nb = uPtr(nb)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = nb, void();
}

// internal Fuse.Controls.Native.IView InstantiateNativeView() :264
void Control__InstantiateNativeView_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->InstantiateNativeView();
}

// public Fuse.Controls.Native.IView get_NativeView() :240
void Control__get_NativeView_fn(Control* __this, uObject** __retval)
{
    *__retval = __this->NativeView();
}

// internal void set_NativeView(Fuse.Controls.Native.IView value) :241
void Control__set_NativeView_fn(Control* __this, uObject* value)
{
    __this->NativeView(value);
}

// private void OnBackgroundChanged() :87
void Control__OnBackgroundChanged_fn(Control* __this)
{
    __this->OnBackgroundChanged();
}

// protected override void OnDraw(Fuse.DrawContext dc) :326
void Control__OnDraw_fn(Control* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Control", "OnDraw(Fuse.DrawContext)");
    __this->DrawBackground(dc, 1.0f);
    __this->DrawVisual(dc);
}

// protected override void OnHitTestLocalVisual(Fuse.HitTestContext htc) :334
void Control__OnHitTestLocalVisual_fn(Control* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Control", "OnHitTestLocalVisual(Fuse.HitTestContext)");

    if ((__this->Background() != NULL) && __this->IsPointInside(uPtr(htc)->LocalPoint()))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Elements::Element__OnHitTestLocalVisual_fn(__this, htc);
}

// public override void OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :76
void Control__OnPropertyChanged2_fn(Control* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.Control", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector prop_ = *prop;

    if (obj == __this->Background())
    {
        __this->InvalidateVisual();

        if (__this->IsRootingCompleted())
            __this->OnBackgroundChanged();
    }

    ::g::Fuse::Visual__OnPropertyChanged2_fn(__this, obj, uCRef(prop_));
}

// protected override void OnRooted() :58
void Control__OnRooted_fn(Control* __this)
{
    uStackFrame __("Fuse.Controls.Control", "OnRooted()");
    ::g::Fuse::Elements::Element__OnRooted_fn(__this);

    if (__this->_background != NULL)
    {
        uPtr(__this->_background)->Pin();
        __this->OnBackgroundChanged();
    }
}

// protected override void OnUnrooted() :68
void Control__OnUnrooted_fn(Control* __this)
{
    uStackFrame __("Fuse.Controls.Control", "OnUnrooted()");
    ::g::Fuse::Elements::Element__OnUnrooted_fn(__this);

    if (__this->_background != NULL)
        uPtr(__this->_background)->Unpin();
}

// protected virtual void PushPropertiesToNativeView() :249
void Control__PushPropertiesToNativeView_fn(Control* __this)
{
}

// private void SetBackground(Fuse.Drawing.Brush value) :36
void Control__SetBackground_fn(Control* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->SetBackground(value);
}

// public generated Fuse.Controls.Native.ViewHandle get_ViewHandle() :235
void Control__get_ViewHandle_fn(Control* __this, ::g::Fuse::Controls::Native::ViewHandle** __retval)
{
    *__retval = __this->ViewHandle();
}

// internal generated void set_ViewHandle(Fuse.Controls.Native.ViewHandle value) :235
void Control__set_ViewHandle_fn(Control* __this, ::g::Fuse::Controls::Native::ViewHandle* value)
{
    __this->ViewHandle(value);
}

// protected generated Control() [instance] :10
void Control::ctor_4()
{
    ctor_3();
}

// public generated object get_Appearance() [instance] :231
uObject* Control::Appearance()
{
    return _Appearance;
}

// internal generated void set_Appearance(object value) [instance] :231
void Control::Appearance(uObject* value)
{
    _Appearance = value;
}

// public Fuse.Drawing.Brush get_Background() [instance] :29
::g::Fuse::Drawing::Brush* Control::Background()
{
    return _background;
}

// public void set_Background(Fuse.Drawing.Brush value) [instance] :30
void Control::Background(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Control", "set_Background(Fuse.Drawing.Brush)");

    if (_background != value)
        SetBackground(value);
}

// protected void DrawBackground(Fuse.DrawContext dc, float opacity) [instance] :94
void Control::DrawBackground(::g::Fuse::DrawContext* dc, float opacity)
{
    uStackFrame __("Fuse.Controls.Control", "DrawBackground(Fuse.DrawContext,float)");

    if ((Background() != NULL) && !uPtr(Background())->IsCompletelyTransparent())
    {
        double t;
        uPtr(Background())->Prepare(dc, ActualSize());
        uPtr(::g::Fuse::Internal::Drawing::SolidRectangle::Impl())->DrawElement(dc, this, Background(), opacity);
    }
}

// public generated Fuse.Visual get_GraphicsVisual() [instance] :233
::g::Fuse::Visual* Control::GraphicsVisual()
{
    return _GraphicsVisual;
}

// internal generated void set_GraphicsVisual(Fuse.Visual value) [instance] :233
void Control::GraphicsVisual(::g::Fuse::Visual* value)
{
    _GraphicsVisual = value;
}

// internal Fuse.Controls.Native.IView InstantiateNativeView() [instance] :264
uObject* Control::InstantiateNativeView()
{
    uStackFrame __("Fuse.Controls.Control", "InstantiateNativeView()");
    return CreateNativeView();
}

// public Fuse.Controls.Native.IView get_NativeView() [instance] :240
uObject* Control::NativeView()
{
    return _nativeView;
}

// internal void set_NativeView(Fuse.Controls.Native.IView value) [instance] :241
void Control::NativeView(uObject* value)
{
    uStackFrame __("Fuse.Controls.Control", "set_NativeView(Fuse.Controls.Native.IView)");
    _nativeView = value;

    if (_nativeView != NULL)
        PushPropertiesToNativeView();
}

// private void OnBackgroundChanged() [instance] :87
void Control::OnBackgroundChanged()
{
    uStackFrame __("Fuse.Controls.Control", "OnBackgroundChanged()");
    uObject* t = TreeRenderer();

    if (t != NULL)
        ::g::Fuse::Elements::ITreeRenderer::BackgroundChanged(uInterface(uPtr(TreeRenderer()), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), this, Background());
}

// private void SetBackground(Fuse.Drawing.Brush value) [instance] :36
void Control::SetBackground(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Control", "SetBackground(Fuse.Drawing.Brush)");

    if (IsRootingCompleted() && (_background != NULL))
        uPtr(_background)->Unpin();

    ::g::Fuse::Drawing::DynamicBrush* dbg = uAs< ::g::Fuse::Drawing::DynamicBrush*>(_background, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]);

    if (dbg != NULL)
        uPtr(dbg)->RemovePropertyListener((uObject*)this);

    _background = value;
    dbg = uAs< ::g::Fuse::Drawing::DynamicBrush*>(_background, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]);

    if (dbg != NULL)
        uPtr(dbg)->AddPropertyListener((uObject*)this);

    if (IsRootingCompleted() && (_background != NULL))
        uPtr(_background)->Pin();

    InvalidateRenderBounds();

    if (IsRootingCompleted())
        OnBackgroundChanged();
}

// public generated Fuse.Controls.Native.ViewHandle get_ViewHandle() [instance] :235
::g::Fuse::Controls::Native::ViewHandle* Control::ViewHandle()
{
    return _ViewHandle;
}

// internal generated void set_ViewHandle(Fuse.Controls.Native.ViewHandle value) [instance] :235
void Control::ViewHandle(::g::Fuse::Controls::Native::ViewHandle* value)
{
    _ViewHandle = value;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.DefaultScroller :47
// {
// static DefaultScroller() :53
static void ScrollView__DefaultScroller__cctor_2_fn(uType* __type)
{
    ScrollView__DefaultScroller::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
    ScrollView__DefaultScroller::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[9/*"UserScroll"*/]);
}

static void ScrollView__DefaultScroller_build(uType* type)
{
    ::STRINGS[9] = uString::Const("UserScroll");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[2] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Gestures::Scroller_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Gestures::Scroller_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Gestures::Scroller_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Gestures::Scroller_type, interface3),
        ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/], offsetof(::g::Fuse::Gestures::Scroller_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Gestures::Scroller_type, interface5),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Gestures::Scroller_type, interface6),
        ::g::Fuse::Input::IGesture_typeof(), offsetof(::g::Fuse::Gestures::Scroller_type, interface7));
    type->SetFields(30,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::ScrollView__DefaultScroller, __g_nametable1), 0,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__DefaultScroller, __parent1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollView__DefaultScroller, this_UserScroll_inst), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::ScrollView__DefaultScroller::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollView__DefaultScroller::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__DefaultScroller__New3_fn, 0, true, type, 1, ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Fuse::Gestures::Scroller_type* ScrollView__DefaultScroller_typeof()
{
    static uSStrong< ::g::Fuse::Gestures::Scroller_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Gestures::Scroller_typeof();
    options.FieldCount = 35;
    options.InterfaceCount = 8;
    options.ObjectSize = sizeof(ScrollView__DefaultScroller);
    options.TypeSize = sizeof(::g::Fuse::Gestures::Scroller_type);
    type = (::g::Fuse::Gestures::Scroller_type*)uClassType::New("Fuse.Controls.ScrollView.DefaultScroller", options);
    type->fp_build_ = ScrollView__DefaultScroller_build;
    type->fp_cctor_ = ScrollView__DefaultScroller__cctor_2_fn;
    type->interface7.fp_OnPointerPressed = (void(*)(uObject*, ::g::Fuse::Input::PointerPressedArgs*, int*))::g::Fuse::Gestures::Scroller__FuseInputIGestureOnPointerPressed_fn;
    type->interface7.fp_OnCapture = (void(*)(uObject*, ::g::Fuse::Input::PointerEventArgs*, int*))::g::Fuse::Gestures::Scroller__FuseInputIGestureOnCapture_fn;
    type->interface7.fp_OnLostCapture = (void(*)(uObject*, bool*))::g::Fuse::Gestures::Scroller__FuseInputIGestureOnLostCapture_fn;
    type->interface7.fp_OnPointerMoved = (void(*)(uObject*, ::g::Fuse::Input::PointerMovedArgs*, int*))::g::Fuse::Gestures::Scroller__FuseInputIGestureOnPointerMoved_fn;
    type->interface7.fp_OnPointerReleased = (void(*)(uObject*, ::g::Fuse::Input::PointerReleasedArgs*, int*))::g::Fuse::Gestures::Scroller__FuseInputIGestureOnPointerReleased_fn;
    type->interface6.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Gestures::Scroller__UnoUXIPropertyListenerOnPropertyChanged_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DefaultScroller(Fuse.Controls.ScrollView parent) :57
void ScrollView__DefaultScroller__ctor_4_fn(ScrollView__DefaultScroller* __this, ::g::Fuse::Controls::ScrollView* parent)
{
    __this->ctor_4(parent);
}

// private void InitializeUX() :62
void ScrollView__DefaultScroller__InitializeUX_fn(ScrollView__DefaultScroller* __this)
{
    __this->InitializeUX();
}

// public DefaultScroller New(Fuse.Controls.ScrollView parent) :57
void ScrollView__DefaultScroller__New3_fn(::g::Fuse::Controls::ScrollView* parent, ScrollView__DefaultScroller** __retval)
{
    *__retval = ScrollView__DefaultScroller::New3(parent);
}

uSStrong<uArray*> ScrollView__DefaultScroller::__g_static_nametable1_;
::g::Uno::UX::Selector ScrollView__DefaultScroller::__selector0_;

// public DefaultScroller(Fuse.Controls.ScrollView parent) [instance] :57
void ScrollView__DefaultScroller::ctor_4(::g::Fuse::Controls::ScrollView* parent)
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultScroller", ".ctor(Fuse.Controls.ScrollView)");
    ctor_3();
    __parent1 = parent;
    InitializeUX();
}

// private void InitializeUX() [instance] :62
void ScrollView__DefaultScroller::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultScroller", "InitializeUX()");
    ::g::Fuse::Reactive::Constant* temp = ::g::Fuse::Reactive::Constant::New1(__parent1);
    this_UserScroll_inst = ::g::FuseControlsScrollView_FuseGesturesScroller_UserScroll_Property::New1(this, ScrollView__DefaultScroller::__selector0());
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsScrollView_accessor_Fuse_Controls_ScrollViewBase_UserScroll::Singleton());
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(uPtr(__parent1)->__g_nametable1, ScrollView__DefaultScroller::__g_static_nametable1());
    ::g::Fuse::Reactive::DataBinding* temp2 = ::g::Fuse::Reactive::DataBinding::New1(this_UserScroll_inst, (uObject*)temp1, __g_nametable1, 3);
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Bindings()), ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp2);
}

// public DefaultScroller New(Fuse.Controls.ScrollView parent) [static] :57
ScrollView__DefaultScroller* ScrollView__DefaultScroller::New3(::g::Fuse::Controls::ScrollView* parent)
{
    ScrollView__DefaultScroller* obj1 = (ScrollView__DefaultScroller*)uNew(ScrollView__DefaultScroller_typeof());
    obj1->ctor_4(parent);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal sealed class DefaultTreeRenderer :208
// {
// static DefaultTreeRenderer() :208
static void DefaultTreeRenderer__cctor__fn(uType* __type)
{
    DefaultTreeRenderer::Instance_ = DefaultTreeRenderer::New1();
}

static void DefaultTreeRenderer_build(uType* type)
{
    ::STRINGS[10] = uString::Const("GraphicsAppearance");
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[13] = ::g::Fuse::Controls::Control_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(DefaultTreeRenderer_type, interface0));
    type->SetFields(0,
        type, (uintptr_t)&::g::Fuse::Controls::DefaultTreeRenderer::Instance_, uFieldFlagsStatic);
}

DefaultTreeRenderer_type* DefaultTreeRenderer_typeof()
{
    static uSStrong<DefaultTreeRenderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(DefaultTreeRenderer);
    options.TypeSize = sizeof(DefaultTreeRenderer_type);
    type = (DefaultTreeRenderer_type*)uClassType::New("Fuse.Controls.DefaultTreeRenderer", options);
    type->fp_build_ = DefaultTreeRenderer_build;
    type->fp_ctor_ = (void*)DefaultTreeRenderer__New1_fn;
    type->fp_cctor_ = DefaultTreeRenderer__cctor__fn;
    type->interface0.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__RootingStarted_fn;
    type->interface0.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Rooted_fn;
    type->interface0.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Unrooted_fn;
    type->interface0.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))DefaultTreeRenderer__BackgroundChanged_fn;
    type->interface0.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__TransformChanged_fn;
    type->interface0.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))DefaultTreeRenderer__Placed_fn;
    type->interface0.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__IsVisibleChanged_fn;
    type->interface0.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__IsEnabledChanged_fn;
    type->interface0.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))DefaultTreeRenderer__OpacityChanged_fn;
    type->interface0.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__ClipToBoundsChanged_fn;
    type->interface0.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Uno::Collections::List*))DefaultTreeRenderer__ZOrderChanged_fn;
    type->interface0.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))DefaultTreeRenderer__HitTestModeChanged_fn;
    type->interface0.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))DefaultTreeRenderer__Measure_fn;
    return type;
}

// public generated DefaultTreeRenderer() :208
void DefaultTreeRenderer__ctor__fn(DefaultTreeRenderer* __this)
{
    __this->ctor_();
}

// public void BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :254
void DefaultTreeRenderer__BackgroundChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    __this->BackgroundChanged(e, background);
}

// public void ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :253
void DefaultTreeRenderer__ClipToBoundsChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    __this->ClipToBoundsChanged(e, *clipToBounds);
}

// public void HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :256
void DefaultTreeRenderer__HitTestModeChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    __this->HitTestModeChanged(e, *enabled);
}

// private Fuse.Visual InstantiateGraphicsAppearance(Fuse.Elements.Element e) :242
void DefaultTreeRenderer__InstantiateGraphicsAppearance_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->InstantiateGraphicsAppearance(e);
}

// public void IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :251
void DefaultTreeRenderer__IsEnabledChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    __this->IsEnabledChanged(e, *isEnabled);
}

// public void IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :250
void DefaultTreeRenderer__IsVisibleChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    __this->IsVisibleChanged(e, *isVisible);
}

// public bool Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :257
void DefaultTreeRenderer__Measure_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    *__retval = __this->Measure(e, *lp, size);
}

// public generated DefaultTreeRenderer New() :208
void DefaultTreeRenderer__New1_fn(DefaultTreeRenderer** __retval)
{
    *__retval = DefaultTreeRenderer::New1();
}

// public void OpacityChanged(Fuse.Elements.Element e, float opacity) :252
void DefaultTreeRenderer__OpacityChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    __this->OpacityChanged(e, *opacity);
}

// public void Placed(Fuse.Elements.Element e) :249
void DefaultTreeRenderer__Placed_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Placed(e);
}

// public void Rooted(Fuse.Elements.Element e) :214
void DefaultTreeRenderer__Rooted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Rooted(e);
}

// public void RootingStarted(Fuse.Elements.Element e) :212
void DefaultTreeRenderer__RootingStarted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->RootingStarted(e);
}

// public void TransformChanged(Fuse.Elements.Element e) :248
void DefaultTreeRenderer__TransformChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->TransformChanged(e);
}

// public void Unrooted(Fuse.Elements.Element e) :228
void DefaultTreeRenderer__Unrooted_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->Unrooted(e);
}

// public void ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) :255
void DefaultTreeRenderer__ZOrderChanged_fn(DefaultTreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
    __this->ZOrderChanged(e, zorder);
}

uSStrong<DefaultTreeRenderer*> DefaultTreeRenderer::Instance_;

// public generated DefaultTreeRenderer() [instance] :208
void DefaultTreeRenderer::ctor_()
{
}

// public void BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) [instance] :254
void DefaultTreeRenderer::BackgroundChanged(::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
}

// public void ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) [instance] :253
void DefaultTreeRenderer::ClipToBoundsChanged(::g::Fuse::Elements::Element* e, bool clipToBounds)
{
}

// public void HitTestModeChanged(Fuse.Elements.Element e, bool enabled) [instance] :256
void DefaultTreeRenderer::HitTestModeChanged(::g::Fuse::Elements::Element* e, bool enabled)
{
}

// private Fuse.Visual InstantiateGraphicsAppearance(Fuse.Elements.Element e) [instance] :242
::g::Fuse::Visual* DefaultTreeRenderer::InstantiateGraphicsAppearance(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "InstantiateGraphicsAppearance(Fuse.Elements.Element)");
    ::g::Uno::UX::Template* t = uPtr(e)->FindTemplate(::STRINGS[10/*"GraphicsApp...*/]);
    return (t != NULL) ? uAs< ::g::Fuse::Visual*>(uPtr(t)->New1(), ::TYPES[9/*Fuse.Visual*/]) : NULL;
}

// public void IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) [instance] :251
void DefaultTreeRenderer::IsEnabledChanged(::g::Fuse::Elements::Element* e, bool isEnabled)
{
}

// public void IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) [instance] :250
void DefaultTreeRenderer::IsVisibleChanged(::g::Fuse::Elements::Element* e, bool isVisible)
{
}

// public bool Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) [instance] :257
bool DefaultTreeRenderer::Measure(::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams lp, ::g::Uno::Float2* size)
{
    *size = ::g::Uno::Float2__New1(0.0f);
    return false;
}

// public void OpacityChanged(Fuse.Elements.Element e, float opacity) [instance] :252
void DefaultTreeRenderer::OpacityChanged(::g::Fuse::Elements::Element* e, float opacity)
{
}

// public void Placed(Fuse.Elements.Element e) [instance] :249
void DefaultTreeRenderer::Placed(::g::Fuse::Elements::Element* e)
{
}

// public void Rooted(Fuse.Elements.Element e) [instance] :214
void DefaultTreeRenderer::Rooted(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "Rooted(Fuse.Elements.Element)");

    if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Visual* visual = InstantiateGraphicsAppearance(e);

        if (visual != NULL)
        {
            ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]);
            uPtr(c)->GraphicsVisual(visual);
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(c->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), visual);
        }
    }
}

// public void RootingStarted(Fuse.Elements.Element e) [instance] :212
void DefaultTreeRenderer::RootingStarted(::g::Fuse::Elements::Element* e)
{
}

// public void TransformChanged(Fuse.Elements.Element e) [instance] :248
void DefaultTreeRenderer::TransformChanged(::g::Fuse::Elements::Element* e)
{
}

// public void Unrooted(Fuse.Elements.Element e) [instance] :228
void DefaultTreeRenderer::Unrooted(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.DefaultTreeRenderer", "Unrooted(Fuse.Elements.Element)");
    bool ret2;

    if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]);
        ::g::Fuse::Visual* visual = uPtr(c)->GraphicsVisual();

        if (visual != NULL)
        {
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), visual, &ret2);
            c->GraphicsVisual(NULL);
        }
    }
}

// public void ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) [instance] :255
void DefaultTreeRenderer::ZOrderChanged(::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
}

// public generated DefaultTreeRenderer New() [static] :208
DefaultTreeRenderer* DefaultTreeRenderer::New1()
{
    DefaultTreeRenderer* obj1 = (DefaultTreeRenderer*)uNew(DefaultTreeRenderer_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.DefaultTrigger :75
// {
// static DefaultTrigger() :81
static void ScrollView__DefaultTrigger__cctor_1_fn(uType* __type)
{
    ScrollView__DefaultTrigger::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
    ScrollView__DefaultTrigger::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void ScrollView__DefaultTrigger_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[2] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Triggers::WhileBool_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface3),
        ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/], offsetof(::g::Fuse::Triggers::WhileBool_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Triggers::WhileBool_type, interface5),
        ::g::Fuse::Animations::IUnwrappedPlayerFeedback_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface6),
        ::g::Fuse::Animations::IBasePlayerFeedback_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface7),
        ::g::Fuse::Triggers::IPulseTrigger_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface8),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(::g::Fuse::Triggers::WhileBool_type, interface9));
    type->SetFields(35,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::ScrollView__DefaultTrigger, __g_nametable1), 0,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__DefaultTrigger, __parent1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollView__DefaultTrigger, this_Value_inst), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::ScrollView__DefaultTrigger::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollView__DefaultTrigger::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__DefaultTrigger__New3_fn, 0, true, type, 1, ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Fuse::Triggers::WhileBool_type* ScrollView__DefaultTrigger_typeof()
{
    static uSStrong< ::g::Fuse::Triggers::WhileBool_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Triggers::WhileTrue_typeof();
    options.FieldCount = 40;
    options.InterfaceCount = 10;
    options.ObjectSize = sizeof(ScrollView__DefaultTrigger);
    options.TypeSize = sizeof(::g::Fuse::Triggers::WhileBool_type);
    type = (::g::Fuse::Triggers::WhileBool_type*)uClassType::New("Fuse.Controls.ScrollView.DefaultTrigger", options);
    type->fp_build_ = ScrollView__DefaultTrigger_build;
    type->fp_cctor_ = ScrollView__DefaultTrigger__cctor_1_fn;
    type->interface9.fp_Toggle = (void(*)(uObject*))::g::Fuse::Triggers::WhileBool__Toggle_fn;
    type->interface8.fp_Pulse = (void(*)(uObject*))::g::Fuse::Triggers::WhileValue__Pulse1_fn;
    type->interface7.fp_OnPlaybackDone = (void(*)(uObject*, uObject*))::g::Fuse::Triggers::Trigger__FuseAnimationsIBasePlayerFeedbackOnPlaybackDone_fn;
    type->interface7.fp_OnStable = (void(*)(uObject*, uObject*))::g::Fuse::Triggers::Trigger__FuseAnimationsIBasePlayerFeedbackOnStable_fn;
    type->interface6.fp_OnProgressUpdated = (void(*)(uObject*, uObject*, double*, double*, int*))::g::Fuse::Triggers::Trigger__FuseAnimationsIUnwrappedPlayerFeedbackOnProgressUpdated_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DefaultTrigger(Fuse.Controls.ScrollView parent) :85
void ScrollView__DefaultTrigger__ctor_9_fn(ScrollView__DefaultTrigger* __this, ::g::Fuse::Controls::ScrollView* parent)
{
    __this->ctor_9(parent);
}

// private void InitializeUX() :90
void ScrollView__DefaultTrigger__InitializeUX_fn(ScrollView__DefaultTrigger* __this)
{
    __this->InitializeUX();
}

// public DefaultTrigger New(Fuse.Controls.ScrollView parent) :85
void ScrollView__DefaultTrigger__New3_fn(::g::Fuse::Controls::ScrollView* parent, ScrollView__DefaultTrigger** __retval)
{
    *__retval = ScrollView__DefaultTrigger::New3(parent);
}

uSStrong<uArray*> ScrollView__DefaultTrigger::__g_static_nametable1_;
::g::Uno::UX::Selector ScrollView__DefaultTrigger::__selector0_;

// public DefaultTrigger(Fuse.Controls.ScrollView parent) [instance] :85
void ScrollView__DefaultTrigger::ctor_9(::g::Fuse::Controls::ScrollView* parent)
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultTrigger", ".ctor(Fuse.Controls.ScrollView)");
    ctor_8();
    __parent1 = parent;
    InitializeUX();
}

// private void InitializeUX() [instance] :90
void ScrollView__DefaultTrigger::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ScrollView.DefaultTrigger", "InitializeUX()");
    ::g::Fuse::Reactive::Constant* temp = ::g::Fuse::Reactive::Constant::New1(__parent1);
    this_Value_inst = ::g::FuseControlsScrollView_FuseTriggersWhileBool_Value_Property::New1(this, ScrollView__DefaultTrigger::__selector0());
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsScrollView_accessor_Fuse_Controls_ScrollViewBase_KeepFocusInView::Singleton());
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(uPtr(__parent1)->__g_nametable1, ScrollView__DefaultTrigger::__g_static_nametable1());
    ::g::Fuse::Gestures::KeepFocusInView* temp2 = ::g::Fuse::Gestures::KeepFocusInView::New3();
    ::g::Fuse::Reactive::DataBinding* temp3 = ::g::Fuse::Reactive::DataBinding::New1(this_Value_inst, (uObject*)temp1, __g_nametable1, 3);
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Bindings()), ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp3);
}

// public DefaultTrigger New(Fuse.Controls.ScrollView parent) [static] :85
ScrollView__DefaultTrigger* ScrollView__DefaultTrigger::New3(::g::Fuse::Controls::ScrollView* parent)
{
    ScrollView__DefaultTrigger* obj1 = (ScrollView__DefaultTrigger*)uNew(ScrollView__DefaultTrigger_typeof());
    obj1->ctor_9(parent);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// private sealed class Navigator.DeferSwitch :1579
// {
static void Navigator__DeferSwitch_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Navigation::NavigationGotoMode_typeof(), offsetof(::g::Fuse::Controls::Navigator__DeferSwitch, GotoMode), 0,
        ::g::Fuse::Navigation::RoutingOperation_typeof(), offsetof(::g::Fuse::Controls::Navigator__DeferSwitch, Operation), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::Navigator__DeferSwitch, Page), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Navigator__DeferSwitch, Parameter), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Navigator__DeferSwitch, Path), 0);
}

uType* Navigator__DeferSwitch_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 5;
    options.ObjectSize = sizeof(Navigator__DeferSwitch);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Navigator.DeferSwitch", options);
    type->fp_build_ = Navigator__DeferSwitch_build;
    type->fp_ctor_ = (void*)Navigator__DeferSwitch__New1_fn;
    return type;
}

// public generated DeferSwitch() :1579
void Navigator__DeferSwitch__ctor__fn(Navigator__DeferSwitch* __this)
{
    __this->ctor_();
}

// public generated DeferSwitch New() :1579
void Navigator__DeferSwitch__New1_fn(Navigator__DeferSwitch** __retval)
{
    *__retval = Navigator__DeferSwitch::New1();
}

// public generated DeferSwitch() [instance] :1579
void Navigator__DeferSwitch::ctor_()
{
}

// public generated DeferSwitch New() [static] :1579
Navigator__DeferSwitch* Navigator__DeferSwitch::New1()
{
    Navigator__DeferSwitch* obj1 = (Navigator__DeferSwitch*)uNew(Navigator__DeferSwitch_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// private sealed class SingleViewHost.Disable :2110
// {
static void SingleViewHost__Disable_build(uType* type)
{
    ::TYPES[14] = ::g::Uno::Action_typeof();
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost__Disable_type, interface0));
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost__Disable, _canceled), 0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost__Disable, _host), 0);
}

SingleViewHost__Disable_type* SingleViewHost__Disable_typeof()
{
    static uSStrong<SingleViewHost__Disable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(SingleViewHost__Disable);
    options.TypeSize = sizeof(SingleViewHost__Disable_type);
    type = (SingleViewHost__Disable_type*)uClassType::New("Fuse.Controls.SingleViewHost.Disable", options);
    type->fp_build_ = SingleViewHost__Disable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))SingleViewHost__Disable__UnoIDisposableDispose_fn;
    return type;
}

// public Disable(Fuse.Controls.SingleViewHost host) :2113
void SingleViewHost__Disable__ctor__fn(SingleViewHost__Disable* __this, ::g::Fuse::Controls::SingleViewHost* host)
{
    __this->ctor_(host);
}

// public Disable New(Fuse.Controls.SingleViewHost host) :2113
void SingleViewHost__Disable__New1_fn(::g::Fuse::Controls::SingleViewHost* host, SingleViewHost__Disable** __retval)
{
    *__retval = SingleViewHost__Disable::New1(host);
}

// private void NextFrame() :2120
void SingleViewHost__Disable__NextFrame_fn(SingleViewHost__Disable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :2131
void SingleViewHost__Disable__UnoIDisposableDispose_fn(SingleViewHost__Disable* __this)
{
    __this->_canceled = true;
}

// public Disable(Fuse.Controls.SingleViewHost host) [instance] :2113
void SingleViewHost__Disable::ctor_(::g::Fuse::Controls::SingleViewHost* host)
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Disable", ".ctor(Fuse.Controls.SingleViewHost)");
    _host = host;
    uPtr(_host)->SetOnscreen();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)SingleViewHost__Disable__NextFrame_fn, this), 0);
}

// private void NextFrame() [instance] :2120
void SingleViewHost__Disable::NextFrame()
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Disable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->_draw = false;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->_changingState = NULL;
    _host = NULL;
}

// public Disable New(Fuse.Controls.SingleViewHost host) [static] :2113
SingleViewHost__Disable* SingleViewHost__Disable::New1(::g::Fuse::Controls::SingleViewHost* host)
{
    SingleViewHost__Disable* obj1 = (SingleViewHost__Disable*)uNew(SingleViewHost__Disable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// private sealed class NativeViewHost.Disable :1408
// {
static void NativeViewHost__Disable_build(uType* type)
{
    ::TYPES[14] = ::g::Uno::Action_typeof();
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(NativeViewHost__Disable_type, interface0));
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost__Disable, _canceled), 0,
        ::g::Fuse::Controls::NativeViewHost_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost__Disable, _host), 0);
}

NativeViewHost__Disable_type* NativeViewHost__Disable_typeof()
{
    static uSStrong<NativeViewHost__Disable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(NativeViewHost__Disable);
    options.TypeSize = sizeof(NativeViewHost__Disable_type);
    type = (NativeViewHost__Disable_type*)uClassType::New("Fuse.Controls.NativeViewHost.Disable", options);
    type->fp_build_ = NativeViewHost__Disable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))NativeViewHost__Disable__UnoIDisposableDispose_fn;
    return type;
}

// public Disable(Fuse.Controls.NativeViewHost host) :1411
void NativeViewHost__Disable__ctor__fn(NativeViewHost__Disable* __this, ::g::Fuse::Controls::NativeViewHost* host)
{
    __this->ctor_(host);
}

// public Disable New(Fuse.Controls.NativeViewHost host) :1411
void NativeViewHost__Disable__New1_fn(::g::Fuse::Controls::NativeViewHost* host, NativeViewHost__Disable** __retval)
{
    *__retval = NativeViewHost__Disable::New1(host);
}

// private void NextFrame() :1421
void NativeViewHost__Disable__NextFrame_fn(NativeViewHost__Disable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :1441
void NativeViewHost__Disable__UnoIDisposableDispose_fn(NativeViewHost__Disable* __this)
{
    __this->_canceled = true;
}

// public Disable(Fuse.Controls.NativeViewHost host) [instance] :1411
void NativeViewHost__Disable::ctor_(::g::Fuse::Controls::NativeViewHost* host)
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Disable", ".ctor(Fuse.Controls.NativeViewHost)");
    _host = host;
    uPtr(_host)->DisableOffscreen();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)NativeViewHost__Disable__NextFrame_fn, this), 0);
}

// private void NextFrame() [instance] :1421
void NativeViewHost__Disable::NextFrame()
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Disable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->_draw = false;
    uPtr(_host)->_toggeling = NULL;
    uPtr(_host)->InvalidateVisual();
    _host = NULL;
}

// public Disable New(Fuse.Controls.NativeViewHost host) [static] :1411
NativeViewHost__Disable* NativeViewHost__Disable::New1(::g::Fuse::Controls::NativeViewHost* host)
{
    NativeViewHost__Disable* obj1 = (NativeViewHost__Disable*)uNew(NativeViewHost__Disable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public class DockPanel :164
// {
static void DockPanel_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Layouts::DockLayout_typeof(), offsetof(::g::Fuse::Controls::DockPanel, _dockLayout), 0);
    type->Reflection.SetFunctions(4,
        new uFunction("GetDock", NULL, (void*)DockPanel__GetDock_fn, 0, true, ::g::Fuse::Layouts::Dock_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)DockPanel__New4_fn, 0, true, type, 0),
        new uFunction("ResetDock", NULL, (void*)DockPanel__ResetDock_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("SetDock", NULL, (void*)DockPanel__SetDock_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Layouts::Dock_typeof()));
}

::g::Fuse::Controls::Control_type* DockPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(DockPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.DockPanel", options);
    type->fp_build_ = DockPanel_build;
    type->fp_ctor_ = (void*)DockPanel__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public DockPanel() :188
void DockPanel__ctor_7_fn(DockPanel* __this)
{
    __this->ctor_7();
}

// public static Fuse.Layouts.Dock GetDock(Fuse.Elements.Element elm) :175
void DockPanel__GetDock_fn(::g::Fuse::Elements::Element* elm, int* __retval)
{
    *__retval = DockPanel::GetDock(elm);
}

// public DockPanel New() :188
void DockPanel__New4_fn(DockPanel** __retval)
{
    *__retval = DockPanel::New4();
}

// public static void ResetDock(Fuse.Elements.Element elm) :181
void DockPanel__ResetDock_fn(::g::Fuse::Elements::Element* elm)
{
    DockPanel::ResetDock(elm);
}

// public static void SetDock(Fuse.Elements.Element elm, Fuse.Layouts.Dock dock) :169
void DockPanel__SetDock_fn(::g::Fuse::Elements::Element* elm, int* dock)
{
    DockPanel::SetDock(elm, *dock);
}

// public DockPanel() [instance] :188
void DockPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.DockPanel", ".ctor()");
    ctor_6();
    Layout(_dockLayout = ::g::Fuse::Layouts::DockLayout::New2());
}

// public static Fuse.Layouts.Dock GetDock(Fuse.Elements.Element elm) [static] :175
int DockPanel::GetDock(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.DockPanel", "GetDock(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::DockLayout::GetDock(elm);
}

// public DockPanel New() [static] :188
DockPanel* DockPanel::New4()
{
    DockPanel* obj1 = (DockPanel*)uNew(DockPanel_typeof());
    obj1->ctor_7();
    return obj1;
}

// public static void ResetDock(Fuse.Elements.Element elm) [static] :181
void DockPanel::ResetDock(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.DockPanel", "ResetDock(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::DockLayout::ResetDock(elm);
}

// public static void SetDock(Fuse.Elements.Element elm, Fuse.Layouts.Dock dock) [static] :169
void DockPanel::SetDock(::g::Fuse::Elements::Element* elm, int dock)
{
    uStackFrame __("Fuse.Controls.DockPanel", "SetDock(Fuse.Elements.Element,Fuse.Layouts.Dock)");
    ::g::Fuse::Layouts::DockLayout::SetDock(elm, dock);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class EdgeNavigator :10
// {
// static EdgeNavigator() :12
static void EdgeNavigator__cctor_4_fn(uType* __type)
{
    EdgeNavigator::_pageDataProperty_ = ::g::Fuse::Properties::CreateHandle();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[16/*Fuse.Scripting.ScriptMember[]*/], 2, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[17/*Fuse.Scripting.ScriptMethod<Fuse.Controls.EdgeNavigator>*/], ::STRINGS[11/*"dismiss"*/], uDelegate::New(::TYPES[18/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.EdgeNavigator, object[]>*/], (void*)EdgeNavigator__dismiss_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[17/*Fuse.Scripting.ScriptMethod<Fuse.Controls.EdgeNavigator>*/], ::STRINGS[12/*"open"*/], uDelegate::New(::TYPES[18/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.EdgeNavigator, object[]>*/], (void*)EdgeNavigator__open_fn), 2)));
}

static void EdgeNavigator_build(uType* type)
{
    ::STRINGS[11] = uString::Const("dismiss");
    ::STRINGS[12] = uString::Const("open");
    ::STRINGS[13] = uString::Const("EdgeNavigator.dismiss takes no arguments");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[15] = uString::Const("EdgeNaviagator.open requires 1 parameter (edge)");
    ::TYPES[15] = ::g::Uno::Type_typeof();
    ::TYPES[16] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[17] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[18] = ::g::Uno::Action3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[19] = ::g::Fuse::Gestures::TappedHandler_typeof();
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[20] = EdgeNavigator__PageData_typeof();
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[22] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Navigation::VisualNavigation__PageData_typeof(), NULL);
    ::TYPES[23] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Navigation::VisualNavigation__PageData_typeof(), NULL);
    ::TYPES[24] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<Fuse.Navigation.NavigationEdge>*/, ::g::Fuse::Navigation::NavigationEdge_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Navigation::EdgeNavigation_typeof(), offsetof(::g::Fuse::Controls::EdgeNavigator, _navigation), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::EdgeNavigator::_pageDataProperty_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(4,
        new uFunction("get_Active", NULL, (void*)EdgeNavigator__get_Active_fn, 0, false, ::TYPES[9/*Fuse.Visual*/], 0),
        new uFunction("set_Active", NULL, (void*)EdgeNavigator__set_Active_fn, 0, false, uVoid_typeof(), 1, ::TYPES[9/*Fuse.Visual*/]),
        new uFunction("get_Navigation", NULL, (void*)EdgeNavigator__get_Navigation_fn, 0, false, ::g::Fuse::Navigation::VisualNavigation_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)EdgeNavigator__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* EdgeNavigator_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(EdgeNavigator);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.EdgeNavigator", options);
    type->fp_build_ = EdgeNavigator_build;
    type->fp_ctor_ = (void*)EdgeNavigator__New4_fn;
    type->fp_cctor_ = EdgeNavigator__cctor_4_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))EdgeNavigator__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))EdgeNavigator__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))EdgeNavigator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))EdgeNavigator__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public EdgeNavigator() :75
void EdgeNavigator__ctor_7_fn(EdgeNavigator* __this)
{
    __this->ctor_7();
}

// public Fuse.Visual get_Active() :92
void EdgeNavigator__get_Active_fn(EdgeNavigator* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Active();
}

// public void set_Active(Fuse.Visual value) :93
void EdgeNavigator__set_Active_fn(EdgeNavigator* __this, ::g::Fuse::Visual* value)
{
    __this->Active(value);
}

// private void CleanupChild(Fuse.Controls.EdgeNavigator.PageData pd, Fuse.Visual elm) :181
void EdgeNavigator__CleanupChild_fn(EdgeNavigator* __this, EdgeNavigator__PageData* pd, ::g::Fuse::Visual* elm)
{
    __this->CleanupChild(pd, elm);
}

// private void CleanupChild(Fuse.Node o) :154
void EdgeNavigator__CleanupChild1_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    __this->CleanupChild1(o);
}

// private static void dismiss(Fuse.Scripting.Context c, Fuse.Controls.EdgeNavigator e, object[] args) :24
void EdgeNavigator__dismiss_fn(::g::Fuse::Scripting::Context* c, EdgeNavigator* e, uArray* args)
{
    EdgeNavigator::dismiss(c, e, args);
}

// private void Dismiss() :197
void EdgeNavigator__Dismiss_fn(EdgeNavigator* __this)
{
    __this->Dismiss();
}

// private static Fuse.Controls.EdgeNavigator.PageData GetPageData(Fuse.Elements.Element elm, [bool create]) :225
void EdgeNavigator__GetPageData_fn(::g::Fuse::Elements::Element* elm, bool* create, EdgeNavigator__PageData** __retval)
{
    *__retval = EdgeNavigator::GetPageData(elm, *create);
}

// private void GotoEdge(Fuse.Navigation.NavigationEdge edge) :203
void EdgeNavigator__GotoEdge_fn(EdgeNavigator* __this, int* edge)
{
    __this->GotoEdge(*edge);
}

// public Fuse.Navigation.VisualNavigation get_Navigation() :87
void EdgeNavigator__get_Navigation_fn(EdgeNavigator* __this, ::g::Fuse::Navigation::VisualNavigation** __retval)
{
    *__retval = __this->Navigation();
}

// public EdgeNavigator New() :75
void EdgeNavigator__New4_fn(EdgeNavigator** __retval)
{
    *__retval = EdgeNavigator::New4();
}

// protected override sealed void OnChildAdded(Fuse.Node o) :112
void EdgeNavigator__OnChildAdded_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildAdded_fn(__this, o);

    if (__this->IsRootingCompleted() && ::g::Fuse::Navigation::Navigation::IsPage(o))
        __this->UpdateChild(o);
}

// protected override sealed void OnChildRemoved(Fuse.Node o) :147
void EdgeNavigator__OnChildRemoved_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::LayoutControl__OnChildRemoved_fn(__this, o);

    if (__this->IsRootingCompleted())
        __this->CleanupChild1(o);
}

// protected override sealed void OnRooted() :96
void EdgeNavigator__OnRooted_fn(EdgeNavigator* __this)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnRooted()");
    ::g::Fuse::Navigation::VisualNavigation__PageData* ret4;
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::TYPES[22/*Uno.Collections.ICollection<Fuse.Navigation.VisualNavigation.PageData>*/])); ++i)
        __this->UpdateChild(uPtr((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::TYPES[23/*Uno.Collections.IList<Fuse.Navigation.VisualNavigation.PageData>*/]), uCRef<int>(i), &ret4), ret4))->Visual());
}

// private void OnTapped(object s, Fuse.Gestures.TappedArgs args) :191
void EdgeNavigator__OnTapped_fn(EdgeNavigator* __this, uObject* s, ::g::Fuse::Gestures::TappedArgs* args)
{
    __this->OnTapped(s, args);
}

// protected override sealed void OnUnrooted() :104
void EdgeNavigator__OnUnrooted_fn(EdgeNavigator* __this)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnUnrooted()");
    ::g::Fuse::Navigation::VisualNavigation__PageData* ret5;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::TYPES[22/*Uno.Collections.ICollection<Fuse.Navigation.VisualNavigation.PageData>*/])); ++i)
        __this->CleanupChild1(uPtr((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(__this->_navigation)->Pages()), ::TYPES[23/*Uno.Collections.IList<Fuse.Navigation.VisualNavigation.PageData>*/]), uCRef<int>(i), &ret5), ret5))->Visual());

    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private static void open(Fuse.Scripting.Context c, Fuse.Controls.EdgeNavigator e, object[] args) :41
void EdgeNavigator__open_fn(::g::Fuse::Scripting::Context* c, EdgeNavigator* e, uArray* args)
{
    EdgeNavigator::open(c, e, args);
}

// private void SetupEdge(Fuse.Controls.EdgeNavigator.PageData pd, Fuse.Elements.Element elm, float2 rel, Fuse.Elements.Alignment align) :165
void EdgeNavigator__SetupEdge_fn(EdgeNavigator* __this, EdgeNavigator__PageData* pd, ::g::Fuse::Elements::Element* elm, ::g::Uno::Float2* rel, int* align)
{
    __this->SetupEdge(pd, elm, *rel, *align);
}

// private void UpdateChild(Fuse.Node o) :119
void EdgeNavigator__UpdateChild_fn(EdgeNavigator* __this, ::g::Fuse::Node* o)
{
    __this->UpdateChild(o);
}

uSStrong< ::g::Fuse::PropertyHandle*> EdgeNavigator::_pageDataProperty_;

// public EdgeNavigator() [instance] :75
void EdgeNavigator::ctor_7()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", ".ctor()");
    _navigation = ::g::Fuse::Navigation::EdgeNavigation::New2();
    ctor_6();
    ClipToBounds(true);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigation);
    ::g::Fuse::Gestures::Tapped* q = ::g::Fuse::Gestures::Tapped::New3(uDelegate::New(::TYPES[19/*Fuse.Gestures.TappedHandler*/], (void*)EdgeNavigator__OnTapped_fn, this));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), q);
}

// public Fuse.Visual get_Active() [instance] :92
::g::Fuse::Visual* EdgeNavigator::Active()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "get_Active()");
    return uPtr(_navigation)->Active();
}

// public void set_Active(Fuse.Visual value) [instance] :93
void EdgeNavigator::Active(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "set_Active(Fuse.Visual)");
    uPtr(_navigation)->Active(value);
}

// private void CleanupChild(Fuse.Controls.EdgeNavigator.PageData pd, Fuse.Visual elm) [instance] :181
void EdgeNavigator::CleanupChild(EdgeNavigator__PageData* pd, ::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "CleanupChild(Fuse.Controls.EdgeNavigator.PageData,Fuse.Visual)");
    bool ret2;

    if (uPtr(pd)->Enter != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(elm)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Enter, &ret2);
        pd->Enter = NULL;
    }
}

// private void CleanupChild(Fuse.Node o) [instance] :154
void EdgeNavigator::CleanupChild1(::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "CleanupChild(Fuse.Node)");
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(o, ::TYPES[10/*Fuse.Elements.Element*/]);

    if (elm != NULL)
    {
        EdgeNavigator__PageData* pd = EdgeNavigator::GetPageData(elm, false);

        if (pd != NULL)
            CleanupChild(pd, elm);
    }
}

// private void Dismiss() [instance] :197
void EdgeNavigator::Dismiss()
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "Dismiss()");

    if (uPtr(_navigation)->IsAnyPanelActive())
        uPtr(_navigation)->Goto(NULL, 0);
}

// private void GotoEdge(Fuse.Navigation.NavigationEdge edge) [instance] :203
void EdgeNavigator::GotoEdge(int edge)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "GotoEdge(Fuse.Navigation.NavigationEdge)");
    ::g::Fuse::Node* ret3;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Visual* elm = uAs< ::g::Fuse::Visual*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret3), ret3), ::TYPES[9/*Fuse.Visual*/]);

        if (elm == NULL)
            continue;

        int e = ::g::Fuse::Navigation::EdgeNavigation::GetEdge(elm);

        if (e != edge)
            continue;

        uPtr(_navigation)->Goto(elm, 0);
        break;
    }
}

// public Fuse.Navigation.VisualNavigation get_Navigation() [instance] :87
::g::Fuse::Navigation::VisualNavigation* EdgeNavigator::Navigation()
{
    return _navigation;
}

// private void OnTapped(object s, Fuse.Gestures.TappedArgs args) [instance] :191
void EdgeNavigator::OnTapped(uObject* s, ::g::Fuse::Gestures::TappedArgs* args)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "OnTapped(object,Fuse.Gestures.TappedArgs)");

    if (uPtr(_navigation)->IsDismissPoint(uPtr(args)->WindowPoint()))
        Dismiss();
}

// private void SetupEdge(Fuse.Controls.EdgeNavigator.PageData pd, Fuse.Elements.Element elm, float2 rel, Fuse.Elements.Alignment align) [instance] :165
void EdgeNavigator::SetupEdge(EdgeNavigator__PageData* pd, ::g::Fuse::Elements::Element* elm, ::g::Uno::Float2 rel, int align)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "SetupEdge(Fuse.Controls.EdgeNavigator.PageData,Fuse.Elements.Element,float2,Fuse.Elements.Alignment)");
    uPtr(elm)->Alignment(align);
    ::g::Fuse::Animations::Move* move = ::g::Fuse::Animations::Move::New2();
    move->X(rel.X);
    move->Y(rel.Y);
    move->RelativeTo(::g::Fuse::TranslationModes::Size());
    ::g::Fuse::Navigation::EnteringAnimation* enter = ::g::Fuse::Navigation::EnteringAnimation::New2();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(enter->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), move);
    uPtr(pd)->Enter = enter;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(elm->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), enter);
}

// private void UpdateChild(Fuse.Node o) [instance] :119
void EdgeNavigator::UpdateChild(::g::Fuse::Node* o)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "UpdateChild(Fuse.Node)");
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(o, ::TYPES[10/*Fuse.Elements.Element*/]);

    if (elm == NULL)
        return;

    EdgeNavigator__PageData* pd = EdgeNavigator::GetPageData(elm, true);
    CleanupChild(pd, elm);
    int e = ::g::Fuse::Navigation::EdgeNavigation::GetEdge(elm);

    switch (e)
    {
        case 0:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(-1.0f, 0.0f), 1);
            break;
        }
        case 1:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(1.0f, 0.0f), 3);
            break;
        }
        case 2:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(0.0f, -1.0f), 4);
            break;
        }
        case 3:
        {
            SetupEdge(pd, elm, ::g::Uno::Float2__New2(0.0f, 1.0f), 12);
            break;
        }
        case 4:
            break;
    }
}

// private static void dismiss(Fuse.Scripting.Context c, Fuse.Controls.EdgeNavigator e, object[] args) [static] :24
void EdgeNavigator::dismiss(::g::Fuse::Scripting::Context* c, EdgeNavigator* e, uArray* args)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "dismiss(Fuse.Scripting.Context,Fuse.Controls.EdgeNavigator,object[])");
    EdgeNavigator_typeof()->Init();

    if (uPtr(args)->Length() != 0)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[13/*"EdgeNavigat...*/], e, ::STRINGS[14/*"/Users/medb...*/], 28, ::STRINGS[11/*"dismiss"*/], NULL);
        return;
    }

    uPtr(e)->Dismiss();
}

// private static Fuse.Controls.EdgeNavigator.PageData GetPageData(Fuse.Elements.Element elm, [bool create]) [static] :225
EdgeNavigator__PageData* EdgeNavigator::GetPageData(::g::Fuse::Elements::Element* elm, bool create)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "GetPageData(Fuse.Elements.Element,[bool])");
    EdgeNavigator_typeof()->Init();
    uObject* v;

    if (uPtr(uPtr(elm)->Properties())->TryGet(EdgeNavigator::_pageDataProperty(), &v))
        return uCast<EdgeNavigator__PageData*>(v, ::TYPES[20/*Fuse.Controls.EdgeNavigator.PageData*/]);

    if (!create)
        return NULL;

    EdgeNavigator__PageData* sd = EdgeNavigator__PageData::New1();
    uPtr(uPtr(elm)->Properties())->Set(EdgeNavigator::_pageDataProperty(), sd);
    return sd;
}

// public EdgeNavigator New() [static] :75
EdgeNavigator* EdgeNavigator::New4()
{
    EdgeNavigator* obj1 = (EdgeNavigator*)uNew(EdgeNavigator_typeof());
    obj1->ctor_7();
    return obj1;
}

// private static void open(Fuse.Scripting.Context c, Fuse.Controls.EdgeNavigator e, object[] args) [static] :41
void EdgeNavigator::open(::g::Fuse::Scripting::Context* c, EdgeNavigator* e, uArray* args)
{
    uStackFrame __("Fuse.Controls.EdgeNavigator", "open(Fuse.Scripting.Context,Fuse.Controls.EdgeNavigator,object[])");
    EdgeNavigator_typeof()->Init();
    int ret6;

    if (uPtr(args)->Length() != 1)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[15/*"EdgeNaviaga...*/], e, ::STRINGS[14/*"/Users/medb...*/], 45, ::STRINGS[12/*"open"*/], NULL);
        return;
    }

    int edge = (::g::Fuse::Marshal__ToType_fn(::TYPES[24/*Fuse.Marshal.ToType<Fuse.Navigation.NavigationEdge>*/], uPtr(args)->Strong<uObject*>(0), &ret6), ret6);
    uPtr(e)->GotoEdge(edge);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class Element_Opacity_Property :1749
// {
static void Element_Opacity_Property_build(uType* type)
{
    ::STRINGS[16] = uString::Const("Opacity");
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    type->SetBase(::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL));
    type->SetFields(1,
        ::TYPES[10/*Fuse.Elements.Element*/], offsetof(::g::Fuse::Controls::Element_Opacity_Property, _obj), 0);
}

::g::Uno::UX::Property1_type* Element_Opacity_Property_typeof()
{
    static uSStrong< ::g::Uno::UX::Property1_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Property1_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(Element_Opacity_Property);
    options.TypeSize = sizeof(::g::Uno::UX::Property1_type);
    type = (::g::Uno::UX::Property1_type*)uClassType::New("Fuse.Controls.Element_Opacity_Property", options);
    type->fp_build_ = Element_Opacity_Property_build;
    type->fp_Get1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, uTRef))Element_Opacity_Property__Get1_fn;
    type->fp_get_Object = (void(*)(::g::Uno::UX::Property*, ::g::Uno::UX::PropertyObject**))Element_Opacity_Property__get_Object_fn;
    type->fp_Set1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, void*, uObject*))Element_Opacity_Property__Set1_fn;
    type->fp_get_SupportsOriginSetter = (void(*)(::g::Uno::UX::PropertyAccessor*, bool*))Element_Opacity_Property__get_SupportsOriginSetter_fn;
    return type;
}

// public Element_Opacity_Property(Fuse.Elements.Element obj) :1752
void Element_Opacity_Property__ctor_3_fn(Element_Opacity_Property* __this, ::g::Fuse::Elements::Element* obj)
{
    __this->ctor_3(obj);
}

// public override sealed float Get(Uno.UX.PropertyObject obj) :1754
void Element_Opacity_Property__Get1_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject* obj, float* __retval)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", "Get(Uno.UX.PropertyObject)");
    return *__retval = uPtr(uCast< ::g::Fuse::Elements::Element*>(obj, ::TYPES[10/*Fuse.Elements.Element*/]))->Opacity(), void();
}

// public Element_Opacity_Property New(Fuse.Elements.Element obj) :1752
void Element_Opacity_Property__New1_fn(::g::Fuse::Elements::Element* obj, Element_Opacity_Property** __retval)
{
    *__retval = Element_Opacity_Property::New1(obj);
}

// public override sealed Uno.UX.PropertyObject get_Object() :1753
void Element_Opacity_Property__get_Object_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject** __retval)
{
    return *__retval = __this->_obj, void();
}

// public override sealed void Set(Uno.UX.PropertyObject obj, float v, Uno.UX.IPropertyListener origin) :1755
void Element_Opacity_Property__Set1_fn(Element_Opacity_Property* __this, ::g::Uno::UX::PropertyObject* obj, float* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", "Set(Uno.UX.PropertyObject,float,Uno.UX.IPropertyListener)");
    float v_ = *v;
    uPtr(uCast< ::g::Fuse::Elements::Element*>(obj, ::TYPES[10/*Fuse.Elements.Element*/]))->SetOpacity(v_, origin);
}

// public override sealed bool get_SupportsOriginSetter() :1756
void Element_Opacity_Property__get_SupportsOriginSetter_fn(Element_Opacity_Property* __this, bool* __retval)
{
    return *__retval = true, void();
}

// public Element_Opacity_Property(Fuse.Elements.Element obj) [instance] :1752
void Element_Opacity_Property::ctor_3(::g::Fuse::Elements::Element* obj)
{
    uStackFrame __("Fuse.Controls.Element_Opacity_Property", ".ctor(Fuse.Elements.Element)");
    ctor_2(::g::Uno::UX::Selector__op_Implicit(::STRINGS[16/*"Opacity"*/]));
    _obj = obj;
}

// public Element_Opacity_Property New(Fuse.Elements.Element obj) [static] :1752
Element_Opacity_Property* Element_Opacity_Property::New1(::g::Fuse::Elements::Element* obj)
{
    Element_Opacity_Property* obj1 = (Element_Opacity_Property*)uNew(Element_Opacity_Property_typeof());
    obj1->ctor_3(obj);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Ellipse :318
// {
static void Ellipse_build(uType* type)
{
    ::STRINGS[17] = uString::Const("Ellipse has been deprecated. Use an image instead");
    ::STRINGS[18] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface14));
    type->SetFields(102,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Ellipse, _cachedCenter), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Ellipse, _cachedRadius), 0);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Ellipse__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::PathShape_type* Ellipse_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathShape_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Ellipse);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathShape_type);
    type = (::g::Fuse::Controls::PathShape_type*)uClassType::New("Fuse.Controls.Ellipse", options);
    type->fp_build_ = Ellipse_build;
    type->fp_ctor_ = (void*)Ellipse__New4_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Ellipse__CreateNativeView_fn;
    type->fp_UpdatePath = (void(*)(::g::Fuse::Controls::PathShape*, ::g::Fuse::Drawing::PathGeometryRenderer*))Ellipse__UpdatePath_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Ellipse() :320
void Ellipse__ctor_8_fn(Ellipse* __this)
{
    __this->ctor_8();
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :325
void Ellipse__CreateNativeView_fn(Ellipse* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Ellipse", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Ellipse::New3(), void();
}

// public Ellipse New() :320
void Ellipse__New4_fn(Ellipse** __retval)
{
    *__retval = Ellipse::New4();
}

// protected override sealed void UpdatePath(Fuse.Drawing.PathGeometryRenderer renderer) :355
void Ellipse__UpdatePath_fn(Ellipse* __this, ::g::Fuse::Drawing::PathGeometryRenderer* renderer)
{
    uStackFrame __("Fuse.Controls.Ellipse", "UpdatePath(Fuse.Drawing.PathGeometryRenderer)");
    ::g::Uno::Float2 radius = ::g::Uno::Float2__op_Multiply1(__this->ContentSize(), 0.5f);

    if (::g::Uno::Float2__op_Equality(__this->_cachedRadius, radius) && ::g::Uno::Float2__op_Equality(__this->_cachedCenter, __this->Center()))
        return;

    __this->_cachedRadius = radius;
    __this->_cachedCenter = __this->Center();
    __this->InvalidateRenderBounds();
    uPtr(renderer)->Geometry(::g::Fuse::Drawing::PathGeometryExtensions::Ellipse(::g::Fuse::Drawing::PathGeometry::New1()->MoveTo1(__this->Center()), radius));
}

// public Ellipse() [instance] :320
void Ellipse::ctor_8()
{
    uStackFrame __("Fuse.Controls.Ellipse", ".ctor()");
    ctor_7();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[17/*"Ellipse has...*/], this, ::STRINGS[18/*"/Users/medb...*/], 322, ::STRINGS[19/*".ctor"*/]);
}

// public Ellipse New() [static] :320
Ellipse* Ellipse::New4()
{
    Ellipse* obj1 = (Ellipse*)uNew(Ellipse_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// private sealed class SingleViewHost.Enable :2085
// {
static void SingleViewHost__Enable_build(uType* type)
{
    ::TYPES[14] = ::g::Uno::Action_typeof();
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(SingleViewHost__Enable_type, interface0));
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost__Enable, _canceled), 0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost__Enable, _host), 0);
}

SingleViewHost__Enable_type* SingleViewHost__Enable_typeof()
{
    static uSStrong<SingleViewHost__Enable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(SingleViewHost__Enable);
    options.TypeSize = sizeof(SingleViewHost__Enable_type);
    type = (SingleViewHost__Enable_type*)uClassType::New("Fuse.Controls.SingleViewHost.Enable", options);
    type->fp_build_ = SingleViewHost__Enable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))SingleViewHost__Enable__UnoIDisposableDispose_fn;
    return type;
}

// public Enable(Fuse.Controls.SingleViewHost host) :2088
void SingleViewHost__Enable__ctor__fn(SingleViewHost__Enable* __this, ::g::Fuse::Controls::SingleViewHost* host)
{
    __this->ctor_(host);
}

// public Enable New(Fuse.Controls.SingleViewHost host) :2088
void SingleViewHost__Enable__New1_fn(::g::Fuse::Controls::SingleViewHost* host, SingleViewHost__Enable** __retval)
{
    *__retval = SingleViewHost__Enable::New1(host);
}

// private void NextFrame() :2097
void SingleViewHost__Enable__NextFrame_fn(SingleViewHost__Enable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :2107
void SingleViewHost__Enable__UnoIDisposableDispose_fn(SingleViewHost__Enable* __this)
{
    __this->_canceled = true;
}

// public Enable(Fuse.Controls.SingleViewHost host) [instance] :2088
void SingleViewHost__Enable::ctor_(::g::Fuse::Controls::SingleViewHost* host)
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Enable", ".ctor(Fuse.Controls.SingleViewHost)");
    _host = host;
    uPtr(_host)->_draw = true;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->InvalidateRenderBounds();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)SingleViewHost__Enable__NextFrame_fn, this), 0);
}

// private void NextFrame() [instance] :2097
void SingleViewHost__Enable::NextFrame()
{
    uStackFrame __("Fuse.Controls.SingleViewHost.Enable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->SetOffscreen();
    uPtr(_host)->_changingState = NULL;
    _host = NULL;
}

// public Enable New(Fuse.Controls.SingleViewHost host) [static] :2088
SingleViewHost__Enable* SingleViewHost__Enable::New1(::g::Fuse::Controls::SingleViewHost* host)
{
    SingleViewHost__Enable* obj1 = (SingleViewHost__Enable*)uNew(SingleViewHost__Enable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// private sealed class NativeViewHost.Enable :1382
// {
static void NativeViewHost__Enable_build(uType* type)
{
    ::TYPES[14] = ::g::Uno::Action_typeof();
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(NativeViewHost__Enable_type, interface0));
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost__Enable, _canceled), 0,
        ::g::Fuse::Controls::NativeViewHost_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost__Enable, _host), 0);
}

NativeViewHost__Enable_type* NativeViewHost__Enable_typeof()
{
    static uSStrong<NativeViewHost__Enable_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(NativeViewHost__Enable);
    options.TypeSize = sizeof(NativeViewHost__Enable_type);
    type = (NativeViewHost__Enable_type*)uClassType::New("Fuse.Controls.NativeViewHost.Enable", options);
    type->fp_build_ = NativeViewHost__Enable_build;
    type->interface0.fp_Dispose = (void(*)(uObject*))NativeViewHost__Enable__UnoIDisposableDispose_fn;
    return type;
}

// public Enable(Fuse.Controls.NativeViewHost host) :1385
void NativeViewHost__Enable__ctor__fn(NativeViewHost__Enable* __this, ::g::Fuse::Controls::NativeViewHost* host)
{
    __this->ctor_(host);
}

// public Enable New(Fuse.Controls.NativeViewHost host) :1385
void NativeViewHost__Enable__New1_fn(::g::Fuse::Controls::NativeViewHost* host, NativeViewHost__Enable** __retval)
{
    *__retval = NativeViewHost__Enable::New1(host);
}

// private void NextFrame() :1394
void NativeViewHost__Enable__NextFrame_fn(NativeViewHost__Enable* __this)
{
    __this->NextFrame();
}

// private void Uno.IDisposable.Dispose() :1402
void NativeViewHost__Enable__UnoIDisposableDispose_fn(NativeViewHost__Enable* __this)
{
    __this->_canceled = true;
}

// public Enable(Fuse.Controls.NativeViewHost host) [instance] :1385
void NativeViewHost__Enable::ctor_(::g::Fuse::Controls::NativeViewHost* host)
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Enable", ".ctor(Fuse.Controls.NativeViewHost)");
    _host = host;
    uPtr(_host)->_draw = true;
    uPtr(_host)->InvalidateVisual();
    uPtr(_host)->InvalidateRenderBounds();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)NativeViewHost__Enable__NextFrame_fn, this), 0);
}

// private void NextFrame() [instance] :1394
void NativeViewHost__Enable::NextFrame()
{
    uStackFrame __("Fuse.Controls.NativeViewHost.Enable", "NextFrame()");

    if (_canceled)
        return;

    uPtr(_host)->EnableOffscreen();
    uPtr(_host)->_toggeling = NULL;
    _host = NULL;
}

// public Enable New(Fuse.Controls.NativeViewHost host) [static] :1385
NativeViewHost__Enable* NativeViewHost__Enable::New1(::g::Fuse::Controls::NativeViewHost* host)
{
    NativeViewHost__Enable* obj1 = (NativeViewHost__Enable*)uNew(NativeViewHost__Enable_typeof());
    obj1->ctor_(host);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal static extern class Extensions :2639
// {
static void Extensions_build(uType* type)
{
    ::STRINGS[20] = uString::Const("Cannot convert to a color");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[22] = uString::Const("GetColor");
    ::TYPES[26] = ::g::Fuse::Drawing::SolidColor_typeof();
    ::TYPES[27] = ::g::Fuse::Drawing::StaticSolidColor_typeof();
}

uClassType* Extensions_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.Extensions", options);
    type->fp_build_ = Extensions_build;
    return type;
}

// public static int GetColor(Fuse.Drawing.Brush brush) :2641
void Extensions__GetColor_fn(::g::Fuse::Drawing::Brush* brush, int* __retval)
{
    *__retval = Extensions::GetColor(brush);
}

// public static int GetColor(Fuse.Drawing.Brush brush) [static] :2641
int Extensions::GetColor(::g::Fuse::Drawing::Brush* brush)
{
    uStackFrame __("Fuse.Controls.Extensions", "GetColor(Fuse.Drawing.Brush)");
    ::g::Uno::Float4 c = ::g::Uno::Float4__New1(0.0f);

    if (brush != NULL)
    {
        ::g::Fuse::Drawing::SolidColor* sc = uAs< ::g::Fuse::Drawing::SolidColor*>(brush, ::TYPES[26/*Fuse.Drawing.SolidColor*/]);

        if (sc != NULL)
            c = uPtr(sc)->Color();

        ::g::Fuse::Drawing::StaticSolidColor* ssc = uAs< ::g::Fuse::Drawing::StaticSolidColor*>(brush, ::TYPES[27/*Fuse.Drawing.StaticSolidColor*/]);

        if (ssc != NULL)
            c = uPtr(ssc)->Color();

        if ((sc == NULL) && (ssc == NULL))
            ::g::Fuse::Diagnostics::Unsupported(::STRINGS[20/*"Cannot conv...*/], brush, ::STRINGS[21/*"/Users/medb...*/], 2654, ::STRINGS[22/*"GetColor"*/]);
    }

    return (int)::g::Uno::Color::ToArgb(c);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// internal sealed class FallbackWebViewClient :473
// {
static void FallbackWebViewClient_build(uType* type)
{
    ::STRINGS[23] = uString::Const("");
    ::TYPES[28] = ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Controls::BufferedWebViewCall_typeof(), NULL);
    ::TYPES[29] = ::g::Fuse::Controls::BufferedWebViewCall_typeof();
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    ::TYPES[31] = ::g::Fuse::Navigation::HistoryChangedHandler_typeof();
    ::TYPES[32] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    type->SetInterfaces(
        ::g::Fuse::Controls::IWebView_typeof(), offsetof(FallbackWebViewClient_type, interface0),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(FallbackWebViewClient_type, interface1),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(FallbackWebViewClient_type, interface2),
        ::g::Fuse::Controls::ISourceReceiver_typeof(), offsetof(FallbackWebViewClient_type, interface3));
    type->SetFields(0,
        ::TYPES[28/*Uno.Collections.List<Fuse.Controls.BufferedWebViewCall>*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, _bufferedCalls), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::FallbackWebViewClient, _BaseUrl), 0,
        ::g::Uno::UX::FileSource_typeof(), offsetof(::g::Fuse::Controls::FallbackWebViewClient, _File), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::FallbackWebViewClient, _Source), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::FallbackWebViewClient, _Url), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::FallbackWebViewClient, _ZoomEnabled), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, BeginLoading1), 0,
        ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, HistoryChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, PageLoaded1), 0,
        ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, ProgressChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, URISchemeHandler1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::FallbackWebViewClient, UrlChanged1), 0);
}

FallbackWebViewClient_type* FallbackWebViewClient_typeof()
{
    static uSStrong<FallbackWebViewClient_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 12;
    options.InterfaceCount = 4;
    options.ObjectSize = sizeof(FallbackWebViewClient);
    options.TypeSize = sizeof(FallbackWebViewClient_type);
    type = (FallbackWebViewClient_type*)uClassType::New("Fuse.Controls.FallbackWebViewClient", options);
    type->fp_build_ = FallbackWebViewClient_build;
    type->fp_ctor_ = (void*)FallbackWebViewClient__New1_fn;
    type->interface0.fp_Eval1 = (void(*)(uObject*, uString*, uDelegate*))FallbackWebViewClient__Eval1_fn;
    type->interface0.fp_Eval = (void(*)(uObject*, uString*))FallbackWebViewClient__Eval_fn;
    type->interface0.fp_LoadHtml = (void(*)(uObject*, uString*))FallbackWebViewClient__LoadHtml_fn;
    type->interface0.fp_LoadHtml1 = (void(*)(uObject*, uString*, uString*))FallbackWebViewClient__LoadHtml1_fn;
    type->interface0.fp_LoadUrl = (void(*)(uObject*, uString*))FallbackWebViewClient__LoadUrl_fn;
    type->interface0.fp_Stop = (void(*)(uObject*))FallbackWebViewClient__Stop_fn;
    type->interface0.fp_Reload = (void(*)(uObject*))FallbackWebViewClient__Reload_fn;
    type->interface0.fp_get_BaseUrl = (void(*)(uObject*, uString**))FallbackWebViewClient__get_BaseUrl_fn;
    type->interface0.fp_set_BaseUrl = (void(*)(uObject*, uString*))FallbackWebViewClient__set_BaseUrl_fn;
    type->interface0.fp_get_Url = (void(*)(uObject*, uString**))FallbackWebViewClient__get_Url_fn;
    type->interface0.fp_set_Url = (void(*)(uObject*, uString*))FallbackWebViewClient__set_Url_fn;
    type->interface0.fp_get_DocumentTitle = (void(*)(uObject*, uString**))FallbackWebViewClient__get_DocumentTitle_fn;
    type->interface0.fp_get_File = (void(*)(uObject*, ::g::Uno::UX::FileSource**))FallbackWebViewClient__get_File_fn;
    type->interface0.fp_set_File = (void(*)(uObject*, ::g::Uno::UX::FileSource*))FallbackWebViewClient__set_File_fn;
    type->interface0.fp_get_ZoomEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__get_ZoomEnabled_fn;
    type->interface0.fp_set_ZoomEnabled = (void(*)(uObject*, bool*))FallbackWebViewClient__set_ZoomEnabled_fn;
    type->interface0.fp_add_PageLoaded = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_PageLoaded_fn;
    type->interface0.fp_remove_PageLoaded = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_PageLoaded_fn;
    type->interface0.fp_add_BeginLoading = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_BeginLoading_fn;
    type->interface0.fp_remove_BeginLoading = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_BeginLoading_fn;
    type->interface0.fp_add_UrlChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_UrlChanged_fn;
    type->interface0.fp_remove_UrlChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_UrlChanged_fn;
    type->interface0.fp_add_URISchemeHandler = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_URISchemeHandler_fn;
    type->interface0.fp_remove_URISchemeHandler = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_URISchemeHandler_fn;
    type->interface1.fp_get_Progress = (void(*)(uObject*, double*))FallbackWebViewClient__get_Progress_fn;
    type->interface1.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_ProgressChanged_fn;
    type->interface1.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_ProgressChanged_fn;
    type->interface2.fp_GoForward = (void(*)(uObject*))FallbackWebViewClient__GoForward_fn;
    type->interface2.fp_GoBack = (void(*)(uObject*))FallbackWebViewClient__GoBack_fn;
    type->interface2.fp_get_CanGoBack = (void(*)(uObject*, bool*))FallbackWebViewClient__get_CanGoBack_fn;
    type->interface2.fp_get_CanGoForward = (void(*)(uObject*, bool*))FallbackWebViewClient__get_CanGoForward_fn;
    type->interface2.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__add_HistoryChanged_fn;
    type->interface2.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))FallbackWebViewClient__remove_HistoryChanged_fn;
    type->interface3.fp_get_Source = (void(*)(uObject*, uString**))FallbackWebViewClient__get_Source_fn;
    type->interface3.fp_set_Source = (void(*)(uObject*, uString*))FallbackWebViewClient__set_Source_fn;
    return type;
}

// public FallbackWebViewClient() :479
void FallbackWebViewClient__ctor__fn(FallbackWebViewClient* __this)
{
    __this->ctor_();
}

// public void ApplyBufferedCalls(Fuse.Controls.IWebView wv) :485
void FallbackWebViewClient__ApplyBufferedCalls_fn(FallbackWebViewClient* __this, uObject* wv)
{
    __this->ApplyBufferedCalls(wv);
}

// public generated string get_BaseUrl() :496
void FallbackWebViewClient__get_BaseUrl_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->BaseUrl();
}

// public generated void set_BaseUrl(string value) :496
void FallbackWebViewClient__set_BaseUrl_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->BaseUrl(value);
}

// public generated void add_BeginLoading(Uno.EventHandler value) :525
void FallbackWebViewClient__add_BeginLoading_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_BeginLoading(value);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) :525
void FallbackWebViewClient__remove_BeginLoading_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_BeginLoading(value);
}

// public bool get_CanGoBack() :498
void FallbackWebViewClient__get_CanGoBack_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :499
void FallbackWebViewClient__get_CanGoForward_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// public string get_DocumentTitle() :500
void FallbackWebViewClient__get_DocumentTitle_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->DocumentTitle();
}

// public void Eval(string js) :506
void FallbackWebViewClient__Eval_fn(FallbackWebViewClient* __this, uString* js)
{
    __this->Eval(js);
}

// public void Eval(string js, Uno.Action<string> resultHandler) :510
void FallbackWebViewClient__Eval1_fn(FallbackWebViewClient* __this, uString* js, uDelegate* resultHandler)
{
    __this->Eval1(js, resultHandler);
}

// public generated Uno.UX.FileSource get_File() :475
void FallbackWebViewClient__get_File_fn(FallbackWebViewClient* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public generated void set_File(Uno.UX.FileSource value) :475
void FallbackWebViewClient__set_File_fn(FallbackWebViewClient* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public void GoBack() :502
void FallbackWebViewClient__GoBack_fn(FallbackWebViewClient* __this)
{
    __this->GoBack();
}

// public void GoForward() :503
void FallbackWebViewClient__GoForward_fn(FallbackWebViewClient* __this)
{
    __this->GoForward();
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :501
void FallbackWebViewClient__add_HistoryChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :501
void FallbackWebViewClient__remove_HistoryChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// public void LoadHtml(string html) :515
void FallbackWebViewClient__LoadHtml_fn(FallbackWebViewClient* __this, uString* html)
{
    __this->LoadHtml(html);
}

// public void LoadHtml(string html, string baseUrl) :519
void FallbackWebViewClient__LoadHtml1_fn(FallbackWebViewClient* __this, uString* html, uString* baseUrl)
{
    __this->LoadHtml1(html, baseUrl);
}

// public void LoadUrl(string url) :514
void FallbackWebViewClient__LoadUrl_fn(FallbackWebViewClient* __this, uString* url)
{
    __this->LoadUrl(url);
}

// public FallbackWebViewClient New() :479
void FallbackWebViewClient__New1_fn(FallbackWebViewClient** __retval)
{
    *__retval = FallbackWebViewClient::New1();
}

// public generated void add_PageLoaded(Uno.EventHandler value) :524
void FallbackWebViewClient__add_PageLoaded_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_PageLoaded(value);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) :524
void FallbackWebViewClient__remove_PageLoaded_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_PageLoaded(value);
}

// public double get_Progress() :528
void FallbackWebViewClient__get_Progress_fn(FallbackWebViewClient* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :523
void FallbackWebViewClient__add_ProgressChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :523
void FallbackWebViewClient__remove_ProgressChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// public void Reload() :504
void FallbackWebViewClient__Reload_fn(FallbackWebViewClient* __this)
{
    __this->Reload();
}

// public generated string get_Source() :495
void FallbackWebViewClient__get_Source_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public generated void set_Source(string value) :495
void FallbackWebViewClient__set_Source_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->Source(value);
}

// public void Stop() :505
void FallbackWebViewClient__Stop_fn(FallbackWebViewClient* __this)
{
    __this->Stop();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) :527
void FallbackWebViewClient__add_URISchemeHandler_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_URISchemeHandler(value);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) :527
void FallbackWebViewClient__remove_URISchemeHandler_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_URISchemeHandler(value);
}

// public generated string get_Url() :497
void FallbackWebViewClient__get_Url_fn(FallbackWebViewClient* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public generated void set_Url(string value) :497
void FallbackWebViewClient__set_Url_fn(FallbackWebViewClient* __this, uString* value)
{
    __this->Url(value);
}

// public generated void add_UrlChanged(Uno.EventHandler value) :526
void FallbackWebViewClient__add_UrlChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->add_UrlChanged(value);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) :526
void FallbackWebViewClient__remove_UrlChanged_fn(FallbackWebViewClient* __this, uDelegate* value)
{
    __this->remove_UrlChanged(value);
}

// public generated bool get_ZoomEnabled() :529
void FallbackWebViewClient__get_ZoomEnabled_fn(FallbackWebViewClient* __this, bool* __retval)
{
    *__retval = __this->ZoomEnabled();
}

// public generated void set_ZoomEnabled(bool value) :529
void FallbackWebViewClient__set_ZoomEnabled_fn(FallbackWebViewClient* __this, bool* value)
{
    __this->ZoomEnabled(*value);
}

// public FallbackWebViewClient() [instance] :479
void FallbackWebViewClient::ctor_()
{
    _bufferedCalls = ((::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[28/*Uno.Collections.List<Fuse.Controls.BufferedWebViewCall>*/]));
    ZoomEnabled(true);
}

// public void ApplyBufferedCalls(Fuse.Controls.IWebView wv) [instance] :485
void FallbackWebViewClient::ApplyBufferedCalls(uObject* wv)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "ApplyBufferedCalls(Fuse.Controls.IWebView)");
    uObject* ret2;
    bool ret3;

    while (uPtr(_bufferedCalls)->Count() > 0)
    {
        uObject* call = (::g::Uno::Collections::List__get_Item_fn(uPtr(_bufferedCalls), uCRef<int>(0), &ret2), ret2);
        ::g::Fuse::Controls::BufferedWebViewCall::Apply(uInterface(uPtr(call), ::TYPES[29/*Fuse.Controls.BufferedWebViewCall*/]), wv);
        ::g::Uno::Collections::List__Remove_fn(uPtr(_bufferedCalls), call, &ret3);
    }
}

// public generated string get_BaseUrl() [instance] :496
uString* FallbackWebViewClient::BaseUrl()
{
    return _BaseUrl;
}

// public generated void set_BaseUrl(string value) [instance] :496
void FallbackWebViewClient::BaseUrl(uString* value)
{
    _BaseUrl = value;
}

// public generated void add_BeginLoading(Uno.EventHandler value) [instance] :525
void FallbackWebViewClient::add_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(BeginLoading1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) [instance] :525
void FallbackWebViewClient::remove_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(BeginLoading1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public bool get_CanGoBack() [instance] :498
bool FallbackWebViewClient::CanGoBack()
{
    return false;
}

// public bool get_CanGoForward() [instance] :499
bool FallbackWebViewClient::CanGoForward()
{
    return false;
}

// public string get_DocumentTitle() [instance] :500
uString* FallbackWebViewClient::DocumentTitle()
{
    return ::STRINGS[23/*""*/];
}

// public void Eval(string js) [instance] :506
void FallbackWebViewClient::Eval(uString* js)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "Eval(string)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::JavaScriptCall::New1(js, NULL));
}

// public void Eval(string js, Uno.Action<string> resultHandler) [instance] :510
void FallbackWebViewClient::Eval1(uString* js, uDelegate* resultHandler)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "Eval(string,Uno.Action<string>)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::JavaScriptCall::New1(js, resultHandler));
}

// public generated Uno.UX.FileSource get_File() [instance] :475
::g::Uno::UX::FileSource* FallbackWebViewClient::File()
{
    return _File;
}

// public generated void set_File(Uno.UX.FileSource value) [instance] :475
void FallbackWebViewClient::File(::g::Uno::UX::FileSource* value)
{
    _File = value;
}

// public void GoBack() [instance] :502
void FallbackWebViewClient::GoBack()
{
}

// public void GoForward() [instance] :503
void FallbackWebViewClient::GoForward()
{
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :501
void FallbackWebViewClient::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(HistoryChanged1, value), ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :501
void FallbackWebViewClient::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(HistoryChanged1, value), ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public void LoadHtml(string html) [instance] :515
void FallbackWebViewClient::LoadHtml(uString* html)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "LoadHtml(string)");
    LoadHtml1(html, ::STRINGS[23/*""*/]);
}

// public void LoadHtml(string html, string baseUrl) [instance] :519
void FallbackWebViewClient::LoadHtml1(uString* html, uString* baseUrl)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "LoadHtml(string,string)");
    ::g::Uno::Collections::List__Add_fn(uPtr(_bufferedCalls), (uObject*)::g::Fuse::Controls::LoadHtmlCall::New1(html, baseUrl));
}

// public void LoadUrl(string url) [instance] :514
void FallbackWebViewClient::LoadUrl(uString* url)
{
}

// public generated void add_PageLoaded(Uno.EventHandler value) [instance] :524
void FallbackWebViewClient::add_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(PageLoaded1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) [instance] :524
void FallbackWebViewClient::remove_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(PageLoaded1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public double get_Progress() [instance] :528
double FallbackWebViewClient::Progress()
{
    return 0.0;
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :523
void FallbackWebViewClient::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :523
void FallbackWebViewClient::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public void Reload() [instance] :504
void FallbackWebViewClient::Reload()
{
}

// public generated string get_Source() [instance] :495
uString* FallbackWebViewClient::Source()
{
    return _Source;
}

// public generated void set_Source(string value) [instance] :495
void FallbackWebViewClient::Source(uString* value)
{
    _Source = value;
}

// public void Stop() [instance] :505
void FallbackWebViewClient::Stop()
{
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) [instance] :527
void FallbackWebViewClient::add_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(URISchemeHandler1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) [instance] :527
void FallbackWebViewClient::remove_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(URISchemeHandler1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated string get_Url() [instance] :497
uString* FallbackWebViewClient::Url()
{
    return _Url;
}

// public generated void set_Url(string value) [instance] :497
void FallbackWebViewClient::Url(uString* value)
{
    _Url = value;
}

// public generated void add_UrlChanged(Uno.EventHandler value) [instance] :526
void FallbackWebViewClient::add_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "add_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(UrlChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) [instance] :526
void FallbackWebViewClient::remove_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.FallbackWebViewClient", "remove_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(UrlChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated bool get_ZoomEnabled() [instance] :529
bool FallbackWebViewClient::ZoomEnabled()
{
    return _ZoomEnabled;
}

// public generated void set_ZoomEnabled(bool value) [instance] :529
void FallbackWebViewClient::ZoomEnabled(bool value)
{
    _ZoomEnabled = value;
}

// public FallbackWebViewClient New() [static] :479
FallbackWebViewClient* FallbackWebViewClient::New1()
{
    FallbackWebViewClient* obj1 = (FallbackWebViewClient*)uNew(FallbackWebViewClient_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Video/0.47.7/$.uno
// ----------------------------------------------------------------------------------------------

// public sealed class FileVideoSource :95
// {
static void FileVideoSource_build(uType* type)
{
    type->SetFields(1,
        ::g::Uno::UX::FileSource_typeof(), offsetof(::g::Fuse::Controls::FileVideoSource, _file), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_File", NULL, (void*)FileVideoSource__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)FileVideoSource__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction(".ctor", NULL, (void*)FileVideoSource__New1_fn, 0, true, type, 0));
}

uType* FileVideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::VideoSource_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(FileVideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.FileVideoSource", options);
    type->fp_build_ = FileVideoSource_build;
    type->fp_ctor_ = (void*)FileVideoSource__New1_fn;
    return type;
}

// public generated FileVideoSource() :95
void FileVideoSource__ctor_1_fn(FileVideoSource* __this)
{
    __this->ctor_1();
}

// public Uno.UX.FileSource get_File() :100
void FileVideoSource__get_File_fn(FileVideoSource* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :101
void FileVideoSource__set_File_fn(FileVideoSource* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public generated FileVideoSource New() :95
void FileVideoSource__New1_fn(FileVideoSource** __retval)
{
    *__retval = FileVideoSource::New1();
}

// public generated FileVideoSource() [instance] :95
void FileVideoSource::ctor_1()
{
    ctor_();
}

// public Uno.UX.FileSource get_File() [instance] :100
::g::Uno::UX::FileSource* FileVideoSource::File()
{
    return _file;
}

// public void set_File(Uno.UX.FileSource value) [instance] :101
void FileVideoSource::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.FileVideoSource", "set_File(Uno.UX.FileSource)");
    _file = value;
    OnSourceChanged();
}

// public generated FileVideoSource New() [static] :95
FileVideoSource* FileVideoSource::New1()
{
    FileVideoSource* obj1 = (FileVideoSource*)uNew(FileVideoSource_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public enum FillRule :385
uEnumType* FillRule_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.FillRule", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "NonZero", 0LL,
        "EvenOdd", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public enum FitMode :390
uEnumType* FitMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.FitMode", ::g::Uno::Int_typeof(), 4);
    type->SetLiterals(
        "GeometryMaximum", 0LL,
        "StrokeMaximum", 1LL,
        "ShrinkToGeometry", 2LL,
        "ShrinkToStroke", 3LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal sealed class FreezeDrawable :1970
// {
// static FreezeDrawable() :1970
static void FreezeDrawable__cctor__fn(uType* __type)
{
    FreezeDrawable::Singleton_ = FreezeDrawable::New1();
}

static void FreezeDrawable_build(uType* type)
{
    ::TYPES[33] = ::g::Fuse::IRenderViewport_typeof();
    ::TYPES[34] = ::g::Uno::Float2_typeof()->Array();
    type->SetFields(0,
        ::g::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLDrawCall_typeof(), offsetof(::g::Fuse::Controls::FreezeDrawable, _draw_646c65c3), 0,
        ::g::Uno::Float4x4_typeof(), offsetof(::g::Fuse::Controls::FreezeDrawable, Draw_LocalTransform_646c65c3_4_9_2), 0,
        ::g::Uno::Float4x4_typeof(), offsetof(::g::Fuse::Controls::FreezeDrawable, Draw_LocalTransform_646c65c3_4_9_3), 0,
        ::g::Uno::Graphics::VertexBuffer_typeof(), offsetof(::g::Fuse::Controls::FreezeDrawable, Draw_VertexData_646c65c3_7_2_1), 0,
        type, (uintptr_t)&::g::Fuse::Controls::FreezeDrawable::Singleton_, uFieldFlagsStatic);
}

uType* FreezeDrawable_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 5;
    options.ObjectSize = sizeof(FreezeDrawable);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.FreezeDrawable", options);
    type->fp_build_ = FreezeDrawable_build;
    type->fp_ctor_ = (void*)FreezeDrawable__New1_fn;
    type->fp_cctor_ = FreezeDrawable__cctor__fn;
    return type;
}

// public generated FreezeDrawable() :1970
void FreezeDrawable__ctor__fn(FreezeDrawable* __this)
{
    __this->ctor_();
}

// public void Draw(Fuse.DrawContext dc, Fuse.Controls.Panel panel, float Opacity, float2 scale, Fuse.VisualBounds renderBounds, framebuffer buffer) :1974
void FreezeDrawable__Draw_fn(FreezeDrawable* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Controls::Panel* panel, float* Opacity, ::g::Uno::Float2* scale, ::g::Fuse::VisualBounds* renderBounds, ::g::Uno::Graphics::Framebuffer* buffer)
{
    __this->Draw(dc, panel, *Opacity, *scale, renderBounds, buffer);
}

// private generated void init_DrawCalls() :1970
void FreezeDrawable__init_DrawCalls_fn(FreezeDrawable* __this)
{
    __this->init_DrawCalls();
}

// public generated FreezeDrawable New() :1970
void FreezeDrawable__New1_fn(FreezeDrawable** __retval)
{
    *__retval = FreezeDrawable::New1();
}

uSStrong<FreezeDrawable*> FreezeDrawable::Singleton_;

// public generated FreezeDrawable() [instance] :1970
void FreezeDrawable::ctor_()
{
    init_DrawCalls();
}

// public void Draw(Fuse.DrawContext dc, Fuse.Controls.Panel panel, float Opacity, float2 scale, Fuse.VisualBounds renderBounds, framebuffer buffer) [instance] :1974
void FreezeDrawable::Draw(::g::Fuse::DrawContext* dc, ::g::Fuse::Controls::Panel* panel, float Opacity, ::g::Uno::Float2 scale, ::g::Fuse::VisualBounds* renderBounds, ::g::Uno::Graphics::Framebuffer* buffer)
{
    uStackFrame __("Fuse.Controls.FreezeDrawable", "Draw(Fuse.DrawContext,Fuse.Controls.Panel,float,float2,Fuse.VisualBounds,framebuffer)");
    ::g::Uno::Float3 ind1;
    ::g::Uno::Float3 ind2;
    ::g::Uno::Float3 ind3;
    ::g::Uno::Float3 ind4;
    ::g::Uno::Float4x4 LocalTransform_646c65c3_4_9_4 = ::g::Uno::Matrix::Mul10(Draw_LocalTransform_646c65c3_4_9_2, ::g::Uno::Matrix::Scaling1(::g::Uno::Float2__op_Multiply2((ind1 = uPtr(renderBounds)->Size(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), scale).X, ::g::Uno::Float2__op_Multiply2((ind2 = uPtr(renderBounds)->Size(), ::g::Uno::Float2__New2(ind2.X, ind2.Y)), scale).Y, 1.0f), Draw_LocalTransform_646c65c3_4_9_3, ::g::Uno::Matrix::Translation(::g::Uno::Float2__op_Multiply2((ind3 = uPtr(renderBounds)->AxisMin(), ::g::Uno::Float2__New2(ind3.X, ind3.Y)), scale).X, ::g::Uno::Float2__op_Multiply2((ind4 = uPtr(renderBounds)->AxisMin(), ::g::Uno::Float2__New2(ind4.X, ind4.Y)), scale).Y, 0.0f));
    _draw_646c65c3.BlendEnabled(true);
    _draw_646c65c3.DepthTestEnabled(false);
    _draw_646c65c3.CullFace(uPtr(dc)->CullFace());
    _draw_646c65c3.BlendSrcAlpha(7);
    _draw_646c65c3.BlendDstRgb(3);
    _draw_646c65c3.Use();
    _draw_646c65c3.Attrib1(0, 2, Draw_VertexData_646c65c3_7_2_1, 8, 0);
    _draw_646c65c3.Uniform12(1, ::g::Fuse::IRenderViewport::ViewProjectionTransform(uInterface(uPtr(dc->Viewport()), ::TYPES[33/*Fuse.IRenderViewport*/])));
    _draw_646c65c3.Uniform(2, Opacity);
    _draw_646c65c3.Uniform12(3, (panel != NULL) ? ::g::Uno::Matrix::Mul8(LocalTransform_646c65c3_4_9_4, uPtr(panel)->WorldTransform()) : LocalTransform_646c65c3_4_9_4);
    _draw_646c65c3.Sampler3(4, uPtr(buffer)->ColorBuffer(), ::g::Uno::Graphics::SamplerState__LinearClamp());
    _draw_646c65c3.DrawArrays(6);
}

// private generated void init_DrawCalls() [instance] :1970
void FreezeDrawable::init_DrawCalls()
{
    uStackFrame __("Fuse.Controls.FreezeDrawable", "init_DrawCalls()");
    Draw_VertexData_646c65c3_7_2_1 = ::g::Uno::Graphics::VertexBuffer::New2(::g::Uno::Runtime::Implementation::Internal::BufferConverters::ToBuffer3(uArray::Init< ::g::Uno::Float2>(::TYPES[34/*float2[]*/], 6, ::g::Uno::Float2__New2(0.0f, 0.0f), ::g::Uno::Float2__New2(0.0f, 1.0f), ::g::Uno::Float2__New2(1.0f, 1.0f), ::g::Uno::Float2__New2(0.0f, 0.0f), ::g::Uno::Float2__New2(1.0f, 1.0f), ::g::Uno::Float2__New2(1.0f, 0.0f))), 0);
    Draw_LocalTransform_646c65c3_4_9_2 = ::g::Uno::Matrix::Translation(-::g::Uno::Float2__New1(0.0f).X, -::g::Uno::Float2__New1(0.0f).Y, 0.0f);
    Draw_LocalTransform_646c65c3_4_9_3 = ::g::Uno::Matrix::RotationZ(0.0f);
    _draw_646c65c3 = ::g::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLDrawCall__New1(::g::FuseControlsPanels_bundle::FreezeDrawable1e2faccf());
}

// public generated FreezeDrawable New() [static] :1970
FreezeDrawable* FreezeDrawable::New1()
{
    FreezeDrawable* obj5 = (FreezeDrawable*)uNew(FreezeDrawable_typeof());
    obj5->ctor_();
    return obj5;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public partial sealed class GraphicsView :303
// {
// static GraphicsView() :74
static void GraphicsView__cctor_3_fn(uType* __type)
{
}

static void GraphicsView_build(uType* type)
{
    ::STRINGS[24] = uString::Const(" does not have a NativeView: IViewHost");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[25] = uString::Const("Fuse.Controls.IProxyHost.Insert");
    ::STRINGS[26] = uString::Const("Fuse.Controls.IProxyHost.Remove");
    ::TYPES[35] = ::g::Fuse::Controls::Native::IGraphicsView_typeof();
    ::TYPES[36] = ::g::Fuse::Controls::Native::IViewHost_typeof();
    ::TYPES[11] = ::g::Fuse::Elements::ITreeRenderer_typeof();
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    ::TYPES[37] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Platform::ApplicationState_typeof(), NULL);
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(GraphicsView_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(GraphicsView_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(GraphicsView_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(GraphicsView_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(GraphicsView_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(GraphicsView_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(GraphicsView_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(GraphicsView_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(GraphicsView_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(GraphicsView_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(GraphicsView_type, interface14),
        ::g::Fuse::IViewport_typeof(), offsetof(GraphicsView_type, interface15),
        ::g::Fuse::IRenderViewport_typeof(), offsetof(GraphicsView_type, interface16),
        ::TYPES[11/*Fuse.Elements.ITreeRenderer*/], offsetof(GraphicsView_type, interface17),
        ::g::Fuse::Controls::IProxyHost_typeof(), offsetof(GraphicsView_type, interface18),
        ::TYPES[38/*Fuse.ICommonViewport*/], offsetof(GraphicsView_type, interface19));
    type->SetFields(96,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _color), 0,
        ::g::Fuse::DrawContext_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _dc), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _frameScheduled), 0,
        ::g::Fuse::OrthographicFrustum_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _frustum), 0,
        ::g::Fuse::FrustumViewport_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _frustumViewport), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, _inBackground), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::GraphicsView, rotationHackRedrawCount), 0);
    type->Reflection.SetFunctions(16,
        new uFunction("get_Color", NULL, (void*)GraphicsView__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)GraphicsView__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction(".ctor", NULL, (void*)GraphicsView__New3_fn, 0, true, type, 0),
        new uFunction("get_PixelSize", NULL, (void*)GraphicsView__get_PixelSize_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_PixelsPerPoint", NULL, (void*)GraphicsView__get_PixelsPerPoint_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("PointToWorldRay", NULL, (void*)GraphicsView__PointToWorldRay_fn, 0, false, ::g::Uno::Geometry::Ray_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_ProjectionTransform", NULL, (void*)GraphicsView__get_ProjectionTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ProjectionTransformInverse", NULL, (void*)GraphicsView__get_ProjectionTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_Size", NULL, (void*)GraphicsView__get_Size_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_ViewOrigin", NULL, (void*)GraphicsView__get_ViewOrigin_fn, 0, false, ::g::Uno::Float3_typeof(), 0),
        new uFunction("get_ViewProjectionTransform", NULL, (void*)GraphicsView__get_ViewProjectionTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewProjectionTransformInverse", NULL, (void*)GraphicsView__get_ViewProjectionTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewRange", NULL, (void*)GraphicsView__get_ViewRange_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_ViewTransform", NULL, (void*)GraphicsView__get_ViewTransform_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("get_ViewTransformInverse", NULL, (void*)GraphicsView__get_ViewTransformInverse_fn, 0, false, ::g::Uno::Float4x4_typeof(), 0),
        new uFunction("WorldToLocalRay", NULL, (void*)GraphicsView__WorldToLocalRay_fn, 0, false, ::g::Uno::Geometry::Ray_typeof(), 3, ::g::Fuse::IViewport_typeof(), ::g::Uno::Geometry::Ray_typeof(), ::g::Fuse::Visual_typeof()));
}

GraphicsView_type* GraphicsView_typeof()
{
    static uSStrong<GraphicsView_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 103;
    options.InterfaceCount = 20;
    options.ObjectSize = sizeof(GraphicsView);
    options.TypeSize = sizeof(GraphicsView_type);
    type = (GraphicsView_type*)uClassType::New("Fuse.Controls.GraphicsView", options);
    type->fp_build_ = GraphicsView_build;
    type->fp_ctor_ = (void*)GraphicsView__New3_fn;
    type->fp_cctor_ = GraphicsView__cctor_3_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))GraphicsView__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))GraphicsView__DrawWithChildren_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))GraphicsView__OnInvalidateVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))GraphicsView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))GraphicsView__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))GraphicsView__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int*))GraphicsView__get_VisualContext_fn;
    type->interface18.fp_Insert = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*))GraphicsView__FuseControlsIProxyHostInsert_fn;
    type->interface18.fp_Remove = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*))GraphicsView__FuseControlsIProxyHostRemove_fn;
    type->interface17.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererRootingStarted_fn;
    type->interface17.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererRooted_fn;
    type->interface17.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererUnrooted_fn;
    type->interface17.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))GraphicsView__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface17.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererTransformChanged_fn;
    type->interface17.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))GraphicsView__FuseElementsITreeRendererPlaced_fn;
    type->interface17.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface17.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface17.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))GraphicsView__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface17.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface17.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))GraphicsView__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface17.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Uno::Collections::List*))GraphicsView__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface17.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))GraphicsView__FuseElementsITreeRendererMeasure_fn;
    type->interface18.fp_get_LocalTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__FuseControlsIProxyHostget_LocalTransform_fn;
    type->interface15.fp_PointToWorldRay = (void(*)(uObject*, ::g::Uno::Float2*, ::g::Uno::Geometry::Ray*))GraphicsView__PointToWorldRay_fn;
    type->interface15.fp_WorldToLocalRay = (void(*)(uObject*, uObject*, ::g::Uno::Geometry::Ray*, ::g::Fuse::Visual*, ::g::Uno::Geometry::Ray*))GraphicsView__WorldToLocalRay_fn;
    type->interface16.fp_get_ProjectionTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ProjectionTransform_fn;
    type->interface16.fp_get_ViewProjectionTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ViewProjectionTransform_fn;
    type->interface16.fp_get_ViewOrigin = (void(*)(uObject*, ::g::Uno::Float3*))GraphicsView__get_ViewOrigin_fn;
    type->interface16.fp_get_ViewRange = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_ViewRange_fn;
    type->interface19.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))GraphicsView__get_PixelsPerPoint_fn;
    type->interface19.fp_get_Size = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_Size_fn;
    type->interface19.fp_get_PixelSize = (void(*)(uObject*, ::g::Uno::Float2*))GraphicsView__get_PixelSize_fn;
    type->interface19.fp_get_ViewTransform = (void(*)(uObject*, ::g::Uno::Float4x4*))GraphicsView__get_ViewTransform_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public GraphicsView() :393
void GraphicsView__ctor_6_fn(GraphicsView* __this)
{
    __this->ctor_6();
}

// private Fuse.Elements.ITreeRenderer get_BaseTreeRenderer() :317
void GraphicsView__get_BaseTreeRenderer_fn(GraphicsView* __this, uObject** __retval)
{
    *__retval = __this->BaseTreeRenderer();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :567
void GraphicsView__CalcRenderBounds_fn(GraphicsView* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret2;
    return *__retval = uPtr((::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret2), ret2))->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize()), void();
}

// public float4 get_Color() :407
void GraphicsView__get_Color_fn(GraphicsView* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :408
void GraphicsView__set_Color_fn(GraphicsView* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// private void DrawFrame() :502
void GraphicsView__DrawFrame_fn(GraphicsView* __this)
{
    __this->DrawFrame();
}

// protected override sealed void DrawWithChildren(Fuse.DrawContext dc) :558
void GraphicsView__DrawWithChildren_fn(GraphicsView* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "DrawWithChildren(Fuse.DrawContext)");

    if (!__this->_inBackground)
    {
        ::g::Fuse::Elements::Element__DrawWithChildren_fn(__this, dc);
        uPtr(::g::Fuse::AppBase::Current2())->DrawSelection(dc);
    }
}

// private void Fuse.Controls.IProxyHost.Insert(Fuse.Controls.Native.ViewHandle viewHandle) :335
void GraphicsView__FuseControlsIProxyHostInsert_fn(GraphicsView* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.Insert(Fuse.Controls.Native.ViewHandle)");
    uObject* vh = uAs<uObject*>(__this->NativeView(), ::TYPES[36/*Fuse.Controls.Native.IViewHost*/]);

    if (vh != NULL)
        ::g::Fuse::Controls::Native::IViewHost::Insert(uInterface(uPtr(vh), ::TYPES[36/*Fuse.Controls.Native.IViewHost*/]), viewHandle);
    else
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, ::STRINGS[24/*" does not h...*/]), NULL, ::STRINGS[21/*"/Users/medb...*/], 343, ::STRINGS[25/*"Fuse.Contro...*/]);
}

// private float4x4 Fuse.Controls.IProxyHost.get_LocalTransform() :332
void GraphicsView__FuseControlsIProxyHostget_LocalTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.get_LocalTransform()");
    return *__retval = __this->LocalTransform(), void();
}

// private void Fuse.Controls.IProxyHost.Remove(Fuse.Controls.Native.ViewHandle viewHandle) :347
void GraphicsView__FuseControlsIProxyHostRemove_fn(GraphicsView* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Controls.IProxyHost.Remove(Fuse.Controls.Native.ViewHandle)");
    uObject* vh = uAs<uObject*>(__this->NativeView(), ::TYPES[36/*Fuse.Controls.Native.IViewHost*/]);

    if (vh != NULL)
        ::g::Fuse::Controls::Native::IViewHost::Remove(uInterface(uPtr(vh), ::TYPES[36/*Fuse.Controls.Native.IViewHost*/]), viewHandle);
    else
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, ::STRINGS[24/*" does not h...*/]), NULL, ::STRINGS[21/*"/Users/medb...*/], 355, ::STRINGS[26/*"Fuse.Contro...*/]);
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :365
void GraphicsView__FuseElementsITreeRendererBackgroundChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    uPtr(::g::Fuse::Controls::DefaultTreeRenderer::Instance())->BackgroundChanged(e, background);
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :377
void GraphicsView__FuseElementsITreeRendererClipToBoundsChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Elements::ITreeRenderer::ClipToBoundsChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :379
void GraphicsView__FuseElementsITreeRendererHitTestModeChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    ::g::Fuse::Elements::ITreeRenderer::HitTestModeChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :373
void GraphicsView__FuseElementsITreeRendererIsEnabledChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    ::g::Fuse::Elements::ITreeRenderer::IsEnabledChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :371
void GraphicsView__FuseElementsITreeRendererIsVisibleChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;
    ::g::Fuse::Elements::ITreeRenderer::IsVisibleChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :383
void GraphicsView__FuseElementsITreeRendererMeasure_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, lp_, size), void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :375
void GraphicsView__FuseElementsITreeRendererOpacityChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;
    ::g::Fuse::Elements::ITreeRenderer::OpacityChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :369
void GraphicsView__FuseElementsITreeRendererPlaced_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Placed(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :361
void GraphicsView__FuseElementsITreeRendererRooted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Rooted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :359
void GraphicsView__FuseElementsITreeRendererRootingStarted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::RootingStarted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :367
void GraphicsView__FuseElementsITreeRendererTransformChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::TransformChanged(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :363
void GraphicsView__FuseElementsITreeRendererUnrooted_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Unrooted(uInterface(uPtr(__this->GetTreeRenderer(e)), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) :381
void GraphicsView__FuseElementsITreeRendererZOrderChanged_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
}

// private Fuse.Elements.ITreeRenderer GetTreeRenderer(Fuse.Elements.Element e) :320
void GraphicsView__GetTreeRenderer_fn(GraphicsView* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->GetTreeRenderer(e);
}

// private void InitializeUX() :77
void GraphicsView__InitializeUX_fn(GraphicsView* __this)
{
    __this->InitializeUX();
}

// public GraphicsView New() :393
void GraphicsView__New3_fn(GraphicsView** __retval)
{
    *__retval = GraphicsView::New3();
}

// private void OnEnteringBackground(Fuse.Platform.ApplicationState s) :481
void GraphicsView__OnEnteringBackground_fn(GraphicsView* __this, int* s)
{
    __this->OnEnteringBackground(*s);
}

// private void OnEnteringForeground(Fuse.Platform.ApplicationState s) :473
void GraphicsView__OnEnteringForeground_fn(GraphicsView* __this, int* s)
{
    __this->OnEnteringForeground(*s);
}

// protected override sealed void OnInvalidateVisual() :466
void GraphicsView__OnInvalidateVisual_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnInvalidateVisual()");
    ::g::Fuse::Elements::Element__OnInvalidateVisual_fn(__this);
    __this->ScheduleFrame();
}

// private void OnResized(object sender, Uno.EventArgs args) :487
void GraphicsView__OnResized_fn(GraphicsView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnResized(sender, args);
}

// protected override sealed void OnRooted() :418
void GraphicsView__OnRooted_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->_dc = ::g::Fuse::DrawContext::New1((uObject*)__this);
    ::g::Fuse::Platform::SystemUI::add_FrameChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)GraphicsView__OnResized_fn, __this));
    __this->rotationHackRedrawCount = 5;
    ::g::Fuse::Platform::Lifecycle::add_EnteringForeground(uDelegate::New(::TYPES[37/*Uno.Action<Fuse.Platform.ApplicationState>*/], (void*)GraphicsView__OnEnteringForeground_fn, __this));
    ::g::Fuse::Platform::Lifecycle::add_EnteringBackground(uDelegate::New(::TYPES[37/*Uno.Action<Fuse.Platform.ApplicationState>*/], (void*)GraphicsView__OnEnteringBackground_fn, __this));
}

// protected override sealed void OnUnrooted() :436
void GraphicsView__OnUnrooted_fn(GraphicsView* __this)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnUnrooted()");
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_FrameChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)GraphicsView__OnResized_fn, __this));
    __this->_dc = NULL;
    ::g::Fuse::Platform::Lifecycle::remove_EnteringForeground(uDelegate::New(::TYPES[37/*Uno.Action<Fuse.Platform.ApplicationState>*/], (void*)GraphicsView__OnEnteringForeground_fn, __this));
    ::g::Fuse::Platform::Lifecycle::remove_EnteringBackground(uDelegate::New(::TYPES[37/*Uno.Action<Fuse.Platform.ApplicationState>*/], (void*)GraphicsView__OnEnteringBackground_fn, __this));
}

// public float2 get_PixelSize() :462
void GraphicsView__get_PixelSize_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->PixelSize();
}

// public float get_PixelsPerPoint() :451
void GraphicsView__get_PixelsPerPoint_fn(GraphicsView* __this, float* __retval)
{
    *__retval = __this->PixelsPerPoint();
}

// public Uno.Geometry.Ray PointToWorldRay(float2 pixelPos) :580
void GraphicsView__PointToWorldRay_fn(GraphicsView* __this, ::g::Uno::Float2* pixelPos, ::g::Uno::Geometry::Ray* __retval)
{
    *__retval = __this->PointToWorldRay(*pixelPos);
}

// public float4x4 get_ProjectionTransform() :572
void GraphicsView__get_ProjectionTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ProjectionTransform();
}

// public float4x4 get_ProjectionTransformInverse() :573
void GraphicsView__get_ProjectionTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ProjectionTransformInverse();
}

// private void ScheduleFrame() :492
void GraphicsView__ScheduleFrame_fn(GraphicsView* __this)
{
    __this->ScheduleFrame();
}

// public float2 get_Size() :457
void GraphicsView__get_Size_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Size();
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :312
void GraphicsView__get_TreeRenderer_fn(GraphicsView* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_TreeRenderer()");
    return *__retval = (uObject*)__this, void();
}

// public float3 get_ViewOrigin() :578
void GraphicsView__get_ViewOrigin_fn(GraphicsView* __this, ::g::Uno::Float3* __retval)
{
    *__retval = __this->ViewOrigin();
}

// public float4x4 get_ViewProjectionTransform() :574
void GraphicsView__get_ViewProjectionTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewProjectionTransform();
}

// public float4x4 get_ViewProjectionTransformInverse() :575
void GraphicsView__get_ViewProjectionTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewProjectionTransformInverse();
}

// public float2 get_ViewRange() :579
void GraphicsView__get_ViewRange_fn(GraphicsView* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ViewRange();
}

// public float4x4 get_ViewTransform() :577
void GraphicsView__get_ViewTransform_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewTransform();
}

// public float4x4 get_ViewTransformInverse() :576
void GraphicsView__get_ViewTransformInverse_fn(GraphicsView* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->ViewTransformInverse();
}

// public override sealed Fuse.VisualContext get_VisualContext() :307
void GraphicsView__get_VisualContext_fn(GraphicsView* __this, int* __retval)
{
    return *__retval = 1, void();
}

// public Uno.Geometry.Ray WorldToLocalRay(Fuse.IViewport world, Uno.Geometry.Ray worldRay, Fuse.Visual where) :584
void GraphicsView__WorldToLocalRay_fn(GraphicsView* __this, uObject* world, ::g::Uno::Geometry::Ray* worldRay, ::g::Fuse::Visual* where, ::g::Uno::Geometry::Ray* __retval)
{
    *__retval = __this->WorldToLocalRay(world, *worldRay, where);
}

// public GraphicsView() [instance] :393
void GraphicsView::ctor_6()
{
    uStackFrame __("Fuse.Controls.GraphicsView", ".ctor()");
    _frustum = ::g::Fuse::OrthographicFrustum::New1();
    _color = ::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.0f);
    ctor_5();
    InitializeUX();
    _frustumViewport = ::g::Fuse::FrustumViewport::New1();
    uPtr(_frustumViewport)->Update((uObject*)this, (uObject*)_frustum);
}

// private Fuse.Elements.ITreeRenderer get_BaseTreeRenderer() [instance] :317
uObject* GraphicsView::BaseTreeRenderer()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_BaseTreeRenderer()");
    uObject* ret3;
    return (::g::Fuse::Elements::Element__get_TreeRenderer_fn(this, &ret3), ret3);
}

// public float4 get_Color() [instance] :407
::g::Uno::Float4 GraphicsView::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :408
void GraphicsView::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "set_Color(float4)");

    if (::g::Uno::Float4__op_Inequality(_color, value))
    {
        _color = value;
        InvalidateVisual();
    }
}

// private void DrawFrame() [instance] :502
void GraphicsView::DrawFrame()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "DrawFrame()");

    if (_inBackground || !IsRootingCompleted())
        return;

    _frameScheduled = false;
    uObject* gv = uAs<uObject*>(NativeView(), ::TYPES[35/*Fuse.Controls.Native.IGraphicsView*/]);

    if (gv != NULL)
    {
        uPtr(_frustum)->LocalFromWorld(WorldTransformInverse());
        uPtr(_frustumViewport)->Update((uObject*)this, (uObject*)_frustum);
        ::g::Uno::Int2 size = ::g::Uno::Int2__New2((int)(ActualSize().X * PixelsPerPoint()), (int)(ActualSize().Y * PixelsPerPoint()));

        if (::g::Fuse::Controls::Native::IGraphicsView::BeginDraw(uInterface(uPtr(gv), ::TYPES[35/*Fuse.Controls.Native.IGraphicsView*/]), size))
        {
            double t;
            ::g::Fuse::Internal::DrawManager::PrepareDraw(_dc);
            uPtr(_dc)->PushViewport((uObject*)this);
            uPtr(_dc)->PushScissor(::g::Uno::Recti__New1(0, 0, size.X, size.Y));
            uPtr(_dc)->Clear(Color(), 1.0f);
            Draw(_dc);
            uPtr(_dc)->PopScissor();
            uPtr(_dc)->PopViewport();
            ::g::Fuse::Internal::DrawManager::EndDraw(_dc);
            ::g::Fuse::Controls::Native::IGraphicsView::EndDraw(uInterface(uPtr(gv), ::TYPES[35/*Fuse.Controls.Native.IGraphicsView*/]));
        }

        if (rotationHackRedrawCount > 0)
        {
            ScheduleFrame();
            rotationHackRedrawCount = (rotationHackRedrawCount - 1);
        }
    }
}

// private Fuse.Elements.ITreeRenderer GetTreeRenderer(Fuse.Elements.Element e) [instance] :320
uObject* GraphicsView::GetTreeRenderer(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "GetTreeRenderer(Fuse.Elements.Element)");

    if (((e == this) && (uPtr(e)->Parent() != NULL)) && (uPtr(uPtr(e)->Parent())->VisualContext() == 2))
        return BaseTreeRenderer();
    else
        return (uObject*)::g::Fuse::Controls::DefaultTreeRenderer::Instance();
}

// private void InitializeUX() [instance] :77
void GraphicsView::InitializeUX()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "InitializeUX()");
    GraphicsView__Template* AndroidAppearance = GraphicsView__Template::New2(this, this);
    GraphicsView__Template1* iOSAppearance = GraphicsView__Template1::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// private void OnEnteringBackground(Fuse.Platform.ApplicationState s) [instance] :481
void GraphicsView::OnEnteringBackground(int s)
{
    _inBackground = true;
}

// private void OnEnteringForeground(Fuse.Platform.ApplicationState s) [instance] :473
void GraphicsView::OnEnteringForeground(int s)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "OnEnteringForeground(Fuse.Platform.ApplicationState)");
    _inBackground = false;
    _frameScheduled = false;
    ScheduleFrame();
    ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)::g::Fuse::Visual__InvalidateVisual_fn, this), 0);
}

// private void OnResized(object sender, Uno.EventArgs args) [instance] :487
void GraphicsView::OnResized(uObject* sender, ::g::Uno::EventArgs* args)
{
    rotationHackRedrawCount = 5;
}

// public float2 get_PixelSize() [instance] :462
::g::Uno::Float2 GraphicsView::PixelSize()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_PixelSize()");
    return ::g::Uno::Float2__op_Multiply1(ActualSize(), PixelsPerPoint());
}

// public float get_PixelsPerPoint() [instance] :451
float GraphicsView::PixelsPerPoint()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_PixelsPerPoint()");
    return (Parent() != NULL) ? ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(Parent())->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])) : uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint();
}

// public Uno.Geometry.Ray PointToWorldRay(float2 pixelPos) [instance] :580
::g::Uno::Geometry::Ray GraphicsView::PointToWorldRay(::g::Uno::Float2 pixelPos)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "PointToWorldRay(float2)");
    return ::g::Fuse::ViewportHelpers::PointToWorldRay((uObject*)this, uPtr(_frustumViewport)->ViewProjectionTransformInverse, pixelPos);
}

// public float4x4 get_ProjectionTransform() [instance] :572
::g::Uno::Float4x4 GraphicsView::ProjectionTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ProjectionTransform()");
    return uPtr(_frustumViewport)->ProjectionTransform;
}

// public float4x4 get_ProjectionTransformInverse() [instance] :573
::g::Uno::Float4x4 GraphicsView::ProjectionTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ProjectionTransformInverse()");
    return uPtr(_frustumViewport)->ProjectionTransformInverse;
}

// private void ScheduleFrame() [instance] :492
void GraphicsView::ScheduleFrame()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "ScheduleFrame()");

    if (!_frameScheduled)
    {
        ::g::Fuse::UpdateManager::AddOnceAction(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)GraphicsView__DrawFrame_fn, this), 2);
        _frameScheduled = true;
    }
}

// public float2 get_Size() [instance] :457
::g::Uno::Float2 GraphicsView::Size()
{
    return ActualSize();
}

// public float3 get_ViewOrigin() [instance] :578
::g::Uno::Float3 GraphicsView::ViewOrigin()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewOrigin()");
    return uPtr(_frustum)->GetWorldPosition((uObject*)this);
}

// public float4x4 get_ViewProjectionTransform() [instance] :574
::g::Uno::Float4x4 GraphicsView::ViewProjectionTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewProjectionTransform()");
    return uPtr(_frustumViewport)->ViewProjectionTransform;
}

// public float4x4 get_ViewProjectionTransformInverse() [instance] :575
::g::Uno::Float4x4 GraphicsView::ViewProjectionTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewProjectionTransformInverse()");
    return uPtr(_frustumViewport)->ViewProjectionTransformInverse;
}

// public float2 get_ViewRange() [instance] :579
::g::Uno::Float2 GraphicsView::ViewRange()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewRange()");
    return uPtr(_frustum)->GetDepthRange((uObject*)this);
}

// public float4x4 get_ViewTransform() [instance] :577
::g::Uno::Float4x4 GraphicsView::ViewTransform()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewTransform()");
    return uPtr(_frustumViewport)->ViewTransform;
}

// public float4x4 get_ViewTransformInverse() [instance] :576
::g::Uno::Float4x4 GraphicsView::ViewTransformInverse()
{
    uStackFrame __("Fuse.Controls.GraphicsView", "get_ViewTransformInverse()");
    return uPtr(_frustumViewport)->ViewTransformInverse;
}

// public Uno.Geometry.Ray WorldToLocalRay(Fuse.IViewport world, Uno.Geometry.Ray worldRay, Fuse.Visual where) [instance] :584
::g::Uno::Geometry::Ray GraphicsView::WorldToLocalRay(uObject* world, ::g::Uno::Geometry::Ray worldRay, ::g::Fuse::Visual* where)
{
    uStackFrame __("Fuse.Controls.GraphicsView", "WorldToLocalRay(Fuse.IViewport,Uno.Geometry.Ray,Fuse.Visual)");
    return ::g::Fuse::ViewportHelpers::WorldToLocalRay((uObject*)this, world, worldRay, where);
}

// public GraphicsView New() [static] :393
GraphicsView* GraphicsView::New3()
{
    GraphicsView* obj1 = (GraphicsView*)uNew(GraphicsView_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class Grid :652
// {
static void Grid_build(uType* type)
{
    ::STRINGS[27] = uString::Const("Grid.ColumnData has been deprecated. Use Grid.Columns instead");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[28] = uString::Const("get_ColumnData");
    ::STRINGS[29] = uString::Const("set_ColumnData");
    ::STRINGS[30] = uString::Const("Grid.RowData has been deprecated. Use Grid.Rows instead");
    ::STRINGS[31] = uString::Const("get_RowData");
    ::STRINGS[32] = uString::Const("set_RowData");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Layouts::GridLayout_typeof(), offsetof(::g::Fuse::Controls::Grid, _gridLayout), 0);
    type->Reflection.SetFunctions(37,
        new uFunction("get_CellSpacing", NULL, (void*)Grid__get_CellSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_CellSpacing", NULL, (void*)Grid__set_CellSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_ChildOrder", NULL, (void*)Grid__get_ChildOrder_fn, 0, false, ::g::Fuse::Layouts::GridChildOrder_typeof(), 0),
        new uFunction("set_ChildOrder", NULL, (void*)Grid__set_ChildOrder_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::GridChildOrder_typeof()),
        new uFunction("get_ColumnCount", NULL, (void*)Grid__get_ColumnCount_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_ColumnCount", NULL, (void*)Grid__set_ColumnCount_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_ColumnData", NULL, (void*)Grid__get_ColumnData_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_ColumnData", NULL, (void*)Grid__set_ColumnData_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ColumnList", NULL, (void*)Grid__get_ColumnList_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Layouts::Column_typeof(), NULL), 0),
        new uFunction("get_Columns", NULL, (void*)Grid__get_Columns_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Columns", NULL, (void*)Grid__set_Columns_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ContentAlignment", NULL, (void*)Grid__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Grid__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_DefaultColumn", NULL, (void*)Grid__get_DefaultColumn_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultColumn", NULL, (void*)Grid__set_DefaultColumn_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DefaultRow", NULL, (void*)Grid__get_DefaultRow_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultRow", NULL, (void*)Grid__set_DefaultRow_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("GetColumn", NULL, (void*)Grid__GetColumn_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetColumnSpan", NULL, (void*)Grid__GetColumnSpan_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetRow", NULL, (void*)Grid__GetRow_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("GetRowSpan", NULL, (void*)Grid__GetRowSpan_fn, 0, true, ::g::Uno::Int_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)Grid__New4_fn, 0, true, type, 0),
        new uFunction("ResetColumn", NULL, (void*)Grid__ResetColumn_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetColumnSpan", NULL, (void*)Grid__ResetColumnSpan_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetRow", NULL, (void*)Grid__ResetRow_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("ResetRowSpan", NULL, (void*)Grid__ResetRowSpan_fn, 0, true, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("get_RowCount", NULL, (void*)Grid__get_RowCount_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_RowCount", NULL, (void*)Grid__set_RowCount_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_RowData", NULL, (void*)Grid__get_RowData_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_RowData", NULL, (void*)Grid__set_RowData_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_RowList", NULL, (void*)Grid__get_RowList_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Layouts::Row_typeof(), NULL), 0),
        new uFunction("get_Rows", NULL, (void*)Grid__get_Rows_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Rows", NULL, (void*)Grid__set_Rows_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("SetColumn", NULL, (void*)Grid__SetColumn_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetColumnSpan", NULL, (void*)Grid__SetColumnSpan_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetRow", NULL, (void*)Grid__SetRow_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()),
        new uFunction("SetRowSpan", NULL, (void*)Grid__SetRowSpan_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Uno::Int_typeof()));
}

::g::Fuse::Controls::Control_type* Grid_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Grid);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.Grid", options);
    type->fp_build_ = Grid_build;
    type->fp_ctor_ = (void*)Grid__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Grid() :909
void Grid__ctor_7_fn(Grid* __this)
{
    __this->ctor_7();
}

// public float get_CellSpacing() :891
void Grid__get_CellSpacing_fn(Grid* __this, float* __retval)
{
    *__retval = __this->CellSpacing();
}

// public void set_CellSpacing(float value) :892
void Grid__set_CellSpacing_fn(Grid* __this, float* value)
{
    __this->CellSpacing(*value);
}

// public Fuse.Layouts.GridChildOrder get_ChildOrder() :905
void Grid__get_ChildOrder_fn(Grid* __this, int* __retval)
{
    *__retval = __this->ChildOrder();
}

// public void set_ChildOrder(Fuse.Layouts.GridChildOrder value) :906
void Grid__set_ChildOrder_fn(Grid* __this, int* value)
{
    __this->ChildOrder(*value);
}

// public int get_ColumnCount() :871
void Grid__get_ColumnCount_fn(Grid* __this, int* __retval)
{
    *__retval = __this->ColumnCount();
}

// public void set_ColumnCount(int value) :872
void Grid__set_ColumnCount_fn(Grid* __this, int* value)
{
    __this->ColumnCount(*value);
}

// public string get_ColumnData() :853
void Grid__get_ColumnData_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->ColumnData();
}

// public void set_ColumnData(string value) :858
void Grid__set_ColumnData_fn(Grid* __this, uString* value)
{
    __this->ColumnData(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Column> get_ColumnList() :820
void Grid__get_ColumnList_fn(Grid* __this, uObject** __retval)
{
    *__retval = __this->ColumnList();
}

// public string get_Columns() :846
void Grid__get_Columns_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->Columns();
}

// public void set_Columns(string value) :847
void Grid__set_Columns_fn(Grid* __this, uString* value)
{
    __this->Columns(value);
}

// public Fuse.Elements.Alignment get_ContentAlignment() :898
void Grid__get_ContentAlignment_fn(Grid* __this, int* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :899
void Grid__set_ContentAlignment_fn(Grid* __this, int* value)
{
    __this->ContentAlignment(*value);
}

// public string get_DefaultColumn() :883
void Grid__get_DefaultColumn_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->DefaultColumn();
}

// public void set_DefaultColumn(string value) :884
void Grid__set_DefaultColumn_fn(Grid* __this, uString* value)
{
    __this->DefaultColumn(value);
}

// public string get_DefaultRow() :809
void Grid__get_DefaultRow_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->DefaultRow();
}

// public void set_DefaultRow(string value) :810
void Grid__set_DefaultRow_fn(Grid* __this, uString* value)
{
    __this->DefaultRow(value);
}

// public static int GetColumn(Fuse.Elements.Element elm) :707
void Grid__GetColumn_fn(::g::Fuse::Elements::Element* elm, int* __retval)
{
    *__retval = Grid::GetColumn(elm);
}

// public static int GetColumnSpan(Fuse.Elements.Element elm) :726
void Grid__GetColumnSpan_fn(::g::Fuse::Elements::Element* elm, int* __retval)
{
    *__retval = Grid::GetColumnSpan(elm);
}

// public static int GetRow(Fuse.Elements.Element elm) :666
void Grid__GetRow_fn(::g::Fuse::Elements::Element* elm, int* __retval)
{
    *__retval = Grid::GetRow(elm);
}

// public static int GetRowSpan(Fuse.Elements.Element elm) :685
void Grid__GetRowSpan_fn(::g::Fuse::Elements::Element* elm, int* __retval)
{
    *__retval = Grid::GetRowSpan(elm);
}

// public Grid New() :909
void Grid__New4_fn(Grid** __retval)
{
    *__retval = Grid::New4();
}

// public static void ResetColumn(Fuse.Elements.Element elm) :713
void Grid__ResetColumn_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetColumn(elm);
}

// public static void ResetColumnSpan(Fuse.Elements.Element elm) :732
void Grid__ResetColumnSpan_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetColumnSpan(elm);
}

// public static void ResetRow(Fuse.Elements.Element elm) :672
void Grid__ResetRow_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetRow(elm);
}

// public static void ResetRowSpan(Fuse.Elements.Element elm) :691
void Grid__ResetRowSpan_fn(::g::Fuse::Elements::Element* elm)
{
    Grid::ResetRowSpan(elm);
}

// public int get_RowCount() :795
void Grid__get_RowCount_fn(Grid* __this, int* __retval)
{
    *__retval = __this->RowCount();
}

// public void set_RowCount(int value) :796
void Grid__set_RowCount_fn(Grid* __this, int* value)
{
    __this->RowCount(*value);
}

// public string get_RowData() :777
void Grid__get_RowData_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->RowData();
}

// public void set_RowData(string value) :782
void Grid__set_RowData_fn(Grid* __this, uString* value)
{
    __this->RowData(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Row> get_RowList() :744
void Grid__get_RowList_fn(Grid* __this, uObject** __retval)
{
    *__retval = __this->RowList();
}

// public string get_Rows() :770
void Grid__get_Rows_fn(Grid* __this, uString** __retval)
{
    *__retval = __this->Rows();
}

// public void set_Rows(string value) :771
void Grid__set_Rows_fn(Grid* __this, uString* value)
{
    __this->Rows(value);
}

// public static void SetColumn(Fuse.Elements.Element elm, int col) :701
void Grid__SetColumn_fn(::g::Fuse::Elements::Element* elm, int* col)
{
    Grid::SetColumn(elm, *col);
}

// public static void SetColumnSpan(Fuse.Elements.Element elm, int span) :720
void Grid__SetColumnSpan_fn(::g::Fuse::Elements::Element* elm, int* span)
{
    Grid::SetColumnSpan(elm, *span);
}

// public static void SetRow(Fuse.Elements.Element elm, int row) :660
void Grid__SetRow_fn(::g::Fuse::Elements::Element* elm, int* row)
{
    Grid::SetRow(elm, *row);
}

// public static void SetRowSpan(Fuse.Elements.Element elm, int span) :679
void Grid__SetRowSpan_fn(::g::Fuse::Elements::Element* elm, int* span)
{
    Grid::SetRowSpan(elm, *span);
}

// public Grid() [instance] :909
void Grid::ctor_7()
{
    uStackFrame __("Fuse.Controls.Grid", ".ctor()");
    ctor_6();
    Layout(_gridLayout = ::g::Fuse::Layouts::GridLayout::New2());
}

// public float get_CellSpacing() [instance] :891
float Grid::CellSpacing()
{
    uStackFrame __("Fuse.Controls.Grid", "get_CellSpacing()");
    return uPtr(_gridLayout)->CellSpacing();
}

// public void set_CellSpacing(float value) [instance] :892
void Grid::CellSpacing(float value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_CellSpacing(float)");
    uPtr(_gridLayout)->CellSpacing(value);
}

// public Fuse.Layouts.GridChildOrder get_ChildOrder() [instance] :905
int Grid::ChildOrder()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ChildOrder()");
    return uPtr(_gridLayout)->ChildOrder();
}

// public void set_ChildOrder(Fuse.Layouts.GridChildOrder value) [instance] :906
void Grid::ChildOrder(int value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ChildOrder(Fuse.Layouts.GridChildOrder)");
    uPtr(_gridLayout)->ChildOrder(value);
}

// public int get_ColumnCount() [instance] :871
int Grid::ColumnCount()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnCount()");
    return uPtr(_gridLayout)->ColumnCount();
}

// public void set_ColumnCount(int value) [instance] :872
void Grid::ColumnCount(int value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ColumnCount(int)");
    uPtr(_gridLayout)->ColumnCount(value);
}

// public string get_ColumnData() [instance] :853
uString* Grid::ColumnData()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnData()");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[27/*"Grid.Column...*/], this, ::STRINGS[21/*"/Users/medb...*/], 855, ::STRINGS[28/*"get_ColumnD...*/]);
    return uPtr(_gridLayout)->Columns();
}

// public void set_ColumnData(string value) [instance] :858
void Grid::ColumnData(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ColumnData(string)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[27/*"Grid.Column...*/], this, ::STRINGS[21/*"/Users/medb...*/], 860, ::STRINGS[29/*"set_ColumnD...*/]);
    uPtr(_gridLayout)->Columns(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Column> get_ColumnList() [instance] :820
uObject* Grid::ColumnList()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ColumnList()");
    return uPtr(_gridLayout)->ColumnList();
}

// public string get_Columns() [instance] :846
uString* Grid::Columns()
{
    uStackFrame __("Fuse.Controls.Grid", "get_Columns()");
    return uPtr(_gridLayout)->Columns();
}

// public void set_Columns(string value) [instance] :847
void Grid::Columns(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_Columns(string)");
    uPtr(_gridLayout)->Columns(value);
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :898
int Grid::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Grid", "get_ContentAlignment()");
    return uPtr(_gridLayout)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :899
void Grid::ContentAlignment(int value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_gridLayout)->ContentAlignment(value);
}

// public string get_DefaultColumn() [instance] :883
uString* Grid::DefaultColumn()
{
    uStackFrame __("Fuse.Controls.Grid", "get_DefaultColumn()");
    return uPtr(_gridLayout)->DefaultColumn();
}

// public void set_DefaultColumn(string value) [instance] :884
void Grid::DefaultColumn(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_DefaultColumn(string)");
    uPtr(_gridLayout)->DefaultColumn(value);
}

// public string get_DefaultRow() [instance] :809
uString* Grid::DefaultRow()
{
    uStackFrame __("Fuse.Controls.Grid", "get_DefaultRow()");
    return uPtr(_gridLayout)->DefaultRow();
}

// public void set_DefaultRow(string value) [instance] :810
void Grid::DefaultRow(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_DefaultRow(string)");
    uPtr(_gridLayout)->DefaultRow(value);
}

// public int get_RowCount() [instance] :795
int Grid::RowCount()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowCount()");
    return uPtr(_gridLayout)->RowCount();
}

// public void set_RowCount(int value) [instance] :796
void Grid::RowCount(int value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_RowCount(int)");
    uPtr(_gridLayout)->RowCount(value);
}

// public string get_RowData() [instance] :777
uString* Grid::RowData()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowData()");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[30/*"Grid.RowDat...*/], this, ::STRINGS[21/*"/Users/medb...*/], 779, ::STRINGS[31/*"get_RowData"*/]);
    return uPtr(_gridLayout)->Rows();
}

// public void set_RowData(string value) [instance] :782
void Grid::RowData(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_RowData(string)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[30/*"Grid.RowDat...*/], this, ::STRINGS[21/*"/Users/medb...*/], 784, ::STRINGS[32/*"set_RowData"*/]);
    uPtr(_gridLayout)->Rows(value);
}

// public Uno.Collections.IList<Fuse.Layouts.Row> get_RowList() [instance] :744
uObject* Grid::RowList()
{
    uStackFrame __("Fuse.Controls.Grid", "get_RowList()");
    return uPtr(_gridLayout)->RowList();
}

// public string get_Rows() [instance] :770
uString* Grid::Rows()
{
    uStackFrame __("Fuse.Controls.Grid", "get_Rows()");
    return uPtr(_gridLayout)->Rows();
}

// public void set_Rows(string value) [instance] :771
void Grid::Rows(uString* value)
{
    uStackFrame __("Fuse.Controls.Grid", "set_Rows(string)");
    uPtr(_gridLayout)->Rows(value);
}

// public static int GetColumn(Fuse.Elements.Element elm) [static] :707
int Grid::GetColumn(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetColumn(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetColumn(elm);
}

// public static int GetColumnSpan(Fuse.Elements.Element elm) [static] :726
int Grid::GetColumnSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetColumnSpan(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetColumnSpan(elm);
}

// public static int GetRow(Fuse.Elements.Element elm) [static] :666
int Grid::GetRow(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetRow(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetRow(elm);
}

// public static int GetRowSpan(Fuse.Elements.Element elm) [static] :685
int Grid::GetRowSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "GetRowSpan(Fuse.Elements.Element)");
    return ::g::Fuse::Layouts::GridLayout::GetRowSpan(elm);
}

// public Grid New() [static] :909
Grid* Grid::New4()
{
    Grid* obj1 = (Grid*)uNew(Grid_typeof());
    obj1->ctor_7();
    return obj1;
}

// public static void ResetColumn(Fuse.Elements.Element elm) [static] :713
void Grid::ResetColumn(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetColumn(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetColumn(elm);
}

// public static void ResetColumnSpan(Fuse.Elements.Element elm) [static] :732
void Grid::ResetColumnSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetColumnSpan(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetColumnSpan(elm);
}

// public static void ResetRow(Fuse.Elements.Element elm) [static] :672
void Grid::ResetRow(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetRow(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetRow(elm);
}

// public static void ResetRowSpan(Fuse.Elements.Element elm) [static] :691
void Grid::ResetRowSpan(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.Grid", "ResetRowSpan(Fuse.Elements.Element)");
    ::g::Fuse::Layouts::GridLayout::ResetRowSpan(elm);
}

// public static void SetColumn(Fuse.Elements.Element elm, int col) [static] :701
void Grid::SetColumn(::g::Fuse::Elements::Element* elm, int col)
{
    uStackFrame __("Fuse.Controls.Grid", "SetColumn(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetColumn(elm, col);
}

// public static void SetColumnSpan(Fuse.Elements.Element elm, int span) [static] :720
void Grid::SetColumnSpan(::g::Fuse::Elements::Element* elm, int span)
{
    uStackFrame __("Fuse.Controls.Grid", "SetColumnSpan(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetColumnSpan(elm, span);
}

// public static void SetRow(Fuse.Elements.Element elm, int row) [static] :660
void Grid::SetRow(::g::Fuse::Elements::Element* elm, int row)
{
    uStackFrame __("Fuse.Controls.Grid", "SetRow(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetRow(elm, row);
}

// public static void SetRowSpan(Fuse.Elements.Element elm, int span) [static] :679
void Grid::SetRowSpan(::g::Fuse::Elements::Element* elm, int span)
{
    uStackFrame __("Fuse.Controls.Grid", "SetRowSpan(Fuse.Elements.Element,int)");
    ::g::Fuse::Layouts::GridLayout::SetRowSpan(elm, span);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// public sealed class HTML :65
// {
static void HTML_build(uType* type)
{
    ::TYPES[39] = ::g::Fuse::Controls::ISourceReceiver_typeof();
    type->SetFields(2,
        ::TYPES[39/*Fuse.Controls.ISourceReceiver*/], offsetof(::g::Fuse::Controls::HTML, Receiver), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)HTML__New2_fn, 0, true, type, 0),
        new uFunction("get_Source", NULL, (void*)HTML__get_Source_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)HTML__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

uType* HTML_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::PropertyObject_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(HTML);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.HTML", options);
    type->fp_build_ = HTML_build;
    type->fp_ctor_ = (void*)HTML__New2_fn;
    return type;
}

// public generated HTML() :65
void HTML__ctor_1_fn(HTML* __this)
{
    __this->ctor_1();
}

// public generated HTML New() :65
void HTML__New2_fn(HTML** __retval)
{
    *__retval = HTML::New2();
}

// public string get_Source() :72
void HTML__get_Source_fn(HTML* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(string value) :76
void HTML__set_Source_fn(HTML* __this, uString* value)
{
    __this->Source(value);
}

// public generated HTML() [instance] :65
void HTML::ctor_1()
{
    ctor_();
}

// public string get_Source() [instance] :72
uString* HTML::Source()
{
    uStackFrame __("Fuse.Controls.HTML", "get_Source()");
    return ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(Receiver), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/]));
}

// public void set_Source(string value) [instance] :76
void HTML::Source(uString* value)
{
    uStackFrame __("Fuse.Controls.HTML", "set_Source(string)");
    ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(Receiver), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/]), value);
}

// public generated HTML New() [static] :65
HTML* HTML::New2()
{
    HTML* obj1 = (HTML*)uNew(HTML_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial class Image :248
// {
static void Image_build(uType* type)
{
    ::STRINGS[33] = uString::Const("unknown failure");
    ::STRINGS[23] = uString::Const("");
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    ::TYPES[40] = ::g::Fuse::Resources::ImageSourceErrorHandler_typeof();
    ::TYPES[41] = ::g::Fuse::Controls::Native::IImageView_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Image_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Image_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Image_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Image_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Image_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Image_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Image_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Image_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Image_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Image_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Image_type, interface14),
        ::g::Fuse::Gestures::ISizeConstraint_typeof(), offsetof(Image_type, interface15));
    type->SetFields(96,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Image, _color), 0,
        ::g::Fuse::Internal::ImageContainer_typeof(), offsetof(::g::Fuse::Controls::Image, _container), 0,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Image, _contentBox), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Image, _drawOrigin), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Image, _drawSize), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Image, _hasContentBox), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Image, _hasScale9Margin), 0,
        ::g::Fuse::Resources::ImageSourceErrorArgs_typeof(), offsetof(::g::Fuse::Controls::Image, _lastError), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(::g::Fuse::Controls::Image, _loadingTask), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Image, _markedFailed), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Image, _origin), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Image, _scale), 0,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Image, _scale9Margin), 0,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Image, _uvClip), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::Image, ParamChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::Image, SourceChanged1), 0);
    type->Reflection.SetFunctions(32,
        new uFunction("get_Color", NULL, (void*)Image__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Image__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_ContentAlignment", NULL, (void*)Image__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Image__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Density", NULL, (void*)Image__get_Density_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Density", NULL, (void*)Image__set_Density_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_Error", NULL, (void*)Image__add_Error_fn, 0, false, uVoid_typeof(), 1, ::TYPES[40/*Fuse.Resources.ImageSourceErrorHandler*/]),
        new uFunction("remove_Error", NULL, (void*)Image__remove_Error_fn, 0, false, uVoid_typeof(), 1, ::TYPES[40/*Fuse.Resources.ImageSourceErrorHandler*/]),
        new uFunction("get_File", NULL, (void*)Image__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)Image__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("get_Files", NULL, (void*)Image__get_Files_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::g::Uno::UX::FileSource_typeof(), NULL), 0),
        new uFunction("get_MemoryPolicy", NULL, (void*)Image__get_MemoryPolicy_fn, 0, false, ::g::Fuse::Resources::MemoryPolicy_typeof(), 0),
        new uFunction("set_MemoryPolicy", NULL, (void*)Image__set_MemoryPolicy_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Resources::MemoryPolicy_typeof()),
        new uFunction(".ctor", NULL, (void*)Image__New3_fn, 0, true, type, 0),
        new uFunction("add_ParamChanged", NULL, (void*)Image__add_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_ParamChanged", NULL, (void*)Image__remove_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_ResampleMode", NULL, (void*)Image__get_ResampleMode_fn, 0, false, ::g::Fuse::Drawing::ResampleMode_typeof(), 0),
        new uFunction("set_ResampleMode", NULL, (void*)Image__set_ResampleMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::ResampleMode_typeof()),
        new uFunction("get_Scale9Margin", NULL, (void*)Image__get_Scale9Margin_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Scale9Margin", NULL, (void*)Image__set_Scale9Margin_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Source", NULL, (void*)Image__get_Source_fn, 0, false, ::g::Fuse::Resources::ImageSource_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)Image__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Resources::ImageSource_typeof()),
        new uFunction("add_SourceChanged", NULL, (void*)Image__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)Image__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_StretchDirection", NULL, (void*)Image__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Image__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Image__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Image__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()),
        new uFunction("get_StretchSizing", NULL, (void*)Image__get_StretchSizing_fn, 0, false, ::g::Fuse::Elements::StretchSizing_typeof(), 0),
        new uFunction("set_StretchSizing", NULL, (void*)Image__set_StretchSizing_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchSizing_typeof()),
        new uFunction("get_Url", NULL, (void*)Image__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)Image__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

Image_type* Image_typeof()
{
    static uSStrong<Image_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 112;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(Image);
    options.TypeSize = sizeof(Image_type);
    type = (Image_type*)uClassType::New("Fuse.Controls.Image", options);
    type->fp_build_ = Image_build;
    type->fp_ctor_ = (void*)Image__New3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Image__ArrangePaddingBox_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Image__CalcRenderBounds_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Image__CreateNativeView_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))Image__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Image__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Image__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Image__get_HitTestLocalVisualBounds_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Image__OnHitTestLocalVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Image__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Image__OnUnrooted_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Image__PushPropertiesToNativeView_fn;
    type->interface15.fp_get_ContentSize = (void(*)(uObject*, ::g::Uno::Float2*))Image__FuseGesturesISizeConstraintget_ContentSize_fn;
    type->interface15.fp_get_TrimSize = (void(*)(uObject*, ::g::Uno::Float2*))Image__FuseGesturesISizeConstraintget_TrimSize_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Image() :248
void Image__ctor_6_fn(Image* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :598
void Image__ArrangePaddingBox_fn(Image* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Image", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
    ::g::Uno::Float2 size = lp_.Size();
    uPtr(uPtr(__this->Container())->Sizing)->snapToPixels = __this->SnapToPixels();
    uPtr(uPtr(__this->Container())->Sizing)->absoluteZoom = __this->AbsoluteZoom();
    ::g::Uno::Float2 contentDesiredSize = __this->GetSize();
    __this->_scale = uPtr(uPtr(__this->Container())->Sizing)->CalcScale(size, contentDesiredSize);
    __this->_origin = uPtr(uPtr(__this->Container())->Sizing)->CalcOrigin(size, ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale));
    __this->_drawOrigin = __this->_origin;
    __this->_drawSize = ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale);
    __this->_uvClip = uPtr(uPtr(__this->Container())->Sizing)->CalcClip(size, &__this->_drawOrigin, &__this->_drawSize);
    __this->InvalidateRenderBounds();
    __this->SetContentBox(::g::Uno::Float4__New7(__this->_drawOrigin, ::g::Uno::Float2__op_Addition2(__this->_drawOrigin, __this->_drawSize)));
    __this->UpdateNativeImageTransform();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :684
void Image__CalcRenderBounds_fn(Image* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret10;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret10), ret10);
    b = uPtr(b)->AddRect(__this->_drawOrigin, ::g::Uno::Float2__op_Addition2(__this->_drawOrigin, __this->_drawSize));
    return *__retval = b, void();
}

// public float4 get_Color() :361
void Image__get_Color_fn(Image* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :362
void Image__set_Color_fn(Image* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// internal Fuse.Internal.ImageContainer get_Container() :253
void Image__get_Container_fn(Image* __this, ::g::Fuse::Internal::ImageContainer** __retval)
{
    *__retval = __this->Container();
}

// public Fuse.Elements.Alignment get_ContentAlignment() :484
void Image__get_ContentAlignment_fn(Image* __this, int* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :485
void Image__set_ContentAlignment_fn(Image* __this, int* value)
{
    __this->ContentAlignment(*value);
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :545
void Image__CreateNativeView_fn(Image* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::ImageView::New3(), void();
}

// public float get_Density() :334
void Image__get_Density_fn(Image* __this, float* __retval)
{
    *__retval = __this->Density();
}

// public void set_Density(float value) :335
void Image__set_Density_fn(Image* __this, float* value)
{
    __this->Density(*value);
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :638
void Image__DrawVisual_fn(Image* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Image", "DrawVisual(Fuse.DrawContext)");
    __this->DrawVisualColor(dc, __this->Color());
}

// private void DrawVisualColor(Fuse.DrawContext dc, float4 color) :643
void Image__DrawVisualColor_fn(Image* __this, ::g::Fuse::DrawContext* dc, ::g::Uno::Float4* color)
{
    __this->DrawVisualColor(dc, *color);
}

// public void add_Error(Fuse.Resources.ImageSourceErrorHandler value) :438
void Image__add_Error_fn(Image* __this, uDelegate* value)
{
    __this->add_Error(value);
}

// public void remove_Error(Fuse.Resources.ImageSourceErrorHandler value) :439
void Image__remove_Error_fn(Image* __this, uDelegate* value)
{
    __this->remove_Error(value);
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :629
void Image__FastTrackDrawWithOpacity_fn(Image* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Image", "FastTrackDrawWithOpacity(Fuse.DrawContext)");
    ::g::Uno::Float4 ind1;
    bool ret11;

    if (!(::g::Fuse::Elements::Element__FastTrackDrawWithOpacity_fn(__this, dc, &ret11), ret11))
        return *__retval = false, void();

    __this->DrawVisualColor(dc, ::g::Uno::Float4__New8((ind1 = __this->Color(), ::g::Uno::Float3__New2(ind1.X, ind1.Y, ind1.Z)), __this->Color().W * __this->Opacity()));
    return *__retval = true, void();
}

// public Uno.UX.FileSource get_File() :314
void Image__get_File_fn(Image* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :315
void Image__set_File_fn(Image* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public Uno.Collections.IList<Uno.UX.FileSource> get_Files() :344
void Image__get_Files_fn(Image* __this, uObject** __retval)
{
    *__retval = __this->Files();
}

// private float2 Fuse.Gestures.ISizeConstraint.get_ContentSize() :509
void Image__FuseGesturesISizeConstraintget_ContentSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    ::g::Uno::Float4 ind5;
    ::g::Uno::Float4 ind6;
    return *__retval = __this->_hasContentBox ? ::g::Uno::Float2__op_Subtraction2((ind5 = __this->_contentBox, ::g::Uno::Float2__New2(ind5.Z, ind5.W)), (ind6 = __this->_contentBox, ::g::Uno::Float2__New2(ind6.X, ind6.Y))) : __this->ActualSize(), void();
}

// private float2 Fuse.Gestures.ISizeConstraint.get_TrimSize() :516
void Image__FuseGesturesISizeConstraintget_TrimSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    ::g::Uno::Float4 ind7;
    ::g::Uno::Float4 ind8;
    return *__retval = __this->_hasContentBox ? ::g::Uno::Float2__op_Subtraction2(__this->ActualSize(), ::g::Uno::Float2__op_Subtraction2((ind7 = __this->_contentBox, ::g::Uno::Float2__New2(ind7.Z, ind7.W)), (ind8 = __this->_contentBox, ::g::Uno::Float2__New2(ind8.X, ind8.Y)))) : ::g::Uno::Float2__New1(0.0f), void();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :585
void Image__GetContentSize_fn(Image* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Image", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret12;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret12), ret12);
    uPtr(uPtr(__this->Container())->Sizing)->snapToPixels = __this->SnapToPixels();
    uPtr(uPtr(__this->Container())->Sizing)->absoluteZoom = __this->AbsoluteZoom();
    ::g::Uno::Float2 r = uPtr(uPtr(__this->Container())->Sizing)->ExpandFillSize(__this->GetSize(), lp_);
    b = ::g::Uno::Math::Max3(r, b);
    return *__retval = b, void();
}

// private float2 GetSize() :578
void Image__GetSize_fn(Image* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetSize();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :676
void Image__get_HitTestLocalVisualBounds_fn(Image* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Image", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret13;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret13), ret13);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// private Fuse.Controls.Native.IImageView get_ImageView() :542
void Image__get_ImageView_fn(Image* __this, uObject** __retval)
{
    *__retval = __this->ImageView();
}

// public Fuse.Resources.MemoryPolicy get_MemoryPolicy() :452
void Image__get_MemoryPolicy_fn(Image* __this, ::g::Fuse::Resources::MemoryPolicy** __retval)
{
    *__retval = __this->MemoryPolicy();
}

// public void set_MemoryPolicy(Fuse.Resources.MemoryPolicy value) :453
void Image__set_MemoryPolicy_fn(Image* __this, ::g::Fuse::Resources::MemoryPolicy* value)
{
    __this->MemoryPolicy(value);
}

// public generated Image New() :248
void Image__New3_fn(Image** __retval)
{
    *__retval = Image::New3();
}

// private void OnContainerParamChanged(object s, object a) :283
void Image__OnContainerParamChanged_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnContainerParamChanged(s, a);
}

// private void OnContainerSourceChanged(object s, object a) :287
void Image__OnContainerSourceChanged_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnContainerSourceChanged(s, a);
}

// private void OnContainerSourceError(object s, Fuse.Resources.ImageSourceErrorArgs args) :293
void Image__OnContainerSourceError_fn(Image* __this, uObject* s, ::g::Fuse::Resources::ImageSourceErrorArgs* args)
{
    __this->OnContainerSourceError(s, args);
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :664
void Image__OnHitTestLocalVisual_fn(Image* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Image", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Uno::Float2 lp = uPtr(htc)->LocalPoint();

    if ((((lp.X >= __this->_drawOrigin.X) && (lp.X <= (__this->_drawOrigin.X + __this->_drawSize.X))) && (lp.Y >= __this->_drawOrigin.Y)) && (lp.Y <= (__this->_drawOrigin.Y + __this->_drawSize.Y)))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
}

// private void OnIsVisibleChanged(object s, object a) :302
void Image__OnIsVisibleChanged1_fn(Image* __this, uObject* s, uObject* a)
{
    __this->OnIsVisibleChanged1(s, a);
}

// private void OnParamChanged() :398
void Image__OnParamChanged_fn(Image* __this)
{
    __this->OnParamChanged();
}

// protected override sealed void OnRooted() :256
void Image__OnRooted_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    __this->_markedFailed = false;
    __this->AddDrawCost(1.0);
    __this->add_IsVisibleChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnIsVisibleChanged1_fn, __this));
    uPtr(__this->_container)->IsRooted(true);
    uPtr(__this->_container)->add_ParamChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnContainerParamChanged_fn, __this));
    uPtr(__this->_container)->add_SourceChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnContainerSourceChanged_fn, __this));
    uPtr(__this->_container)->add_SourceError(uDelegate::New(::TYPES[40/*Fuse.Resources.ImageSourceErrorHandler*/], (void*)Image__OnContainerSourceError_fn, __this));
}

// private void OnSourceChanged() :413
void Image__OnSourceChanged_fn(Image* __this)
{
    __this->OnSourceChanged();
}

// protected override sealed void OnUnrooted() :270
void Image__OnUnrooted_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "OnUnrooted()");
    __this->remove_IsVisibleChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnIsVisibleChanged1_fn, __this));
    uPtr(__this->_container)->IsRooted(false);
    uPtr(__this->_container)->remove_ParamChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnContainerParamChanged_fn, __this));
    uPtr(__this->_container)->remove_SourceChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Image__OnContainerSourceChanged_fn, __this));
    uPtr(__this->_container)->remove_SourceError(uDelegate::New(::TYPES[40/*Fuse.Resources.ImageSourceErrorHandler*/], (void*)Image__OnContainerSourceError_fn, __this));
    __this->RemoveDrawCost(1.0);
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// public generated void add_ParamChanged(Uno.EventHandler value) :397
void Image__add_ParamChanged_fn(Image* __this, uDelegate* value)
{
    __this->add_ParamChanged(value);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) :397
void Image__remove_ParamChanged_fn(Image* __this, uDelegate* value)
{
    __this->remove_ParamChanged(value);
}

// protected override sealed void PushPropertiesToNativeView() :523
void Image__PushPropertiesToNativeView_fn(Image* __this)
{
    uStackFrame __("Fuse.Controls.Image", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeImageSource();
    __this->UpdateNativeImageTransform();
}

// public Fuse.Drawing.ResampleMode get_ResampleMode() :375
void Image__get_ResampleMode_fn(Image* __this, int* __retval)
{
    *__retval = __this->ResampleMode();
}

// public void set_ResampleMode(Fuse.Drawing.ResampleMode value) :376
void Image__set_ResampleMode_fn(Image* __this, int* value)
{
    __this->ResampleMode(*value);
}

// public float4 get_Scale9Margin() :384
void Image__get_Scale9Margin_fn(Image* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Scale9Margin();
}

// public void set_Scale9Margin(float4 value) :385
void Image__set_Scale9Margin_fn(Image* __this, ::g::Uno::Float4* value)
{
    __this->Scale9Margin(*value);
}

// internal void SetContentBox(float4 contentBox) :501
void Image__SetContentBox_fn(Image* __this, ::g::Uno::Float4* contentBox)
{
    __this->SetContentBox(*contentBox);
}

// public Fuse.Resources.ImageSource get_Source() :353
void Image__get_Source_fn(Image* __this, ::g::Fuse::Resources::ImageSource** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(Fuse.Resources.ImageSource value) :354
void Image__set_Source_fn(Image* __this, ::g::Fuse::Resources::ImageSource* value)
{
    __this->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) :411
void Image__add_SourceChanged_fn(Image* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :411
void Image__remove_SourceChanged_fn(Image* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :466
void Image__get_StretchDirection_fn(Image* __this, int* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :467
void Image__set_StretchDirection_fn(Image* __this, int* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :459
void Image__get_StretchMode_fn(Image* __this, int* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :460
void Image__set_StretchMode_fn(Image* __this, int* value)
{
    __this->StretchMode(*value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() :477
void Image__get_StretchSizing_fn(Image* __this, int* __retval)
{
    *__retval = __this->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) :478
void Image__set_StretchSizing_fn(Image* __this, int* value)
{
    __this->StretchSizing(*value);
}

// private void UpdateNativeImageSource() :530
void Image__UpdateNativeImageSource_fn(Image* __this)
{
    __this->UpdateNativeImageSource();
}

// private void UpdateNativeImageTransform() :620
void Image__UpdateNativeImageTransform_fn(Image* __this)
{
    __this->UpdateNativeImageTransform();
}

// public string get_Url() :325
void Image__get_Url_fn(Image* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :326
void Image__set_Url_fn(Image* __this, uString* value)
{
    __this->Url(value);
}

// public generated Image() [instance] :248
void Image::ctor_6()
{
    _container = ::g::Fuse::Internal::ImageContainer::New1(NULL);
    _color = ::g::Uno::Float4__New1(1.0f);
    _scale9Margin = ::g::Uno::Float4__New1(10.0f);
    ctor_5();
}

// public float4 get_Color() [instance] :361
::g::Uno::Float4 Image::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :362
void Image::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Color(float4)");

    if (::g::Uno::Float4__op_Inequality(_color, value))
    {
        _color = value;
        OnParamChanged();
    }
}

// internal Fuse.Internal.ImageContainer get_Container() [instance] :253
::g::Fuse::Internal::ImageContainer* Image::Container()
{
    return _container;
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :484
int Image::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Image", "get_ContentAlignment()");
    return uPtr(_container)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :485
void Image::ContentAlignment(int value)
{
    uStackFrame __("Fuse.Controls.Image", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_container)->ContentAlignment(value);
}

// public float get_Density() [instance] :334
float Image::Density()
{
    uStackFrame __("Fuse.Controls.Image", "get_Density()");
    return uPtr(_container)->Density();
}

// public void set_Density(float value) [instance] :335
void Image::Density(float value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Density(float)");
    uPtr(_container)->Density(value);
}

// private void DrawVisualColor(Fuse.DrawContext dc, float4 color) [instance] :643
void Image::DrawVisualColor(::g::Fuse::DrawContext* dc, ::g::Uno::Float4 color)
{
    uStackFrame __("Fuse.Controls.Image", "DrawVisualColor(Fuse.DrawContext,float4)");
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Uno::Float4 ind4;
    ::g::Uno::Graphics::Texture2D* tex = uPtr(Container())->GetTexture();

    if (tex == NULL)
        return;

    if (uPtr(Container())->StretchMode() == 4)
        uPtr(::g::Fuse::Elements::Internal::Scale9Rectangle::Impl())->Draw(dc, this, ActualSize(), GetSize(), tex, color, Scale9Margin());
    else
        uPtr(::g::Fuse::Controls::ImageElementDraw::Impl())->Draw(dc, this, _drawOrigin, _drawSize, (ind2 = _uvClip, ::g::Uno::Float2__New2(ind2.X, ind2.Y)), ::g::Uno::Float2__op_Subtraction2((ind3 = _uvClip, ::g::Uno::Float2__New2(ind3.Z, ind3.W)), (ind4 = _uvClip, ::g::Uno::Float2__New2(ind4.X, ind4.Y))), tex, uPtr(Container())->ResampleMode(), color);
}

// public void add_Error(Fuse.Resources.ImageSourceErrorHandler value) [instance] :438
void Image::add_Error(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_Error(Fuse.Resources.ImageSourceErrorHandler)");
    uPtr(_container)->add_SourceError(value);
}

// public void remove_Error(Fuse.Resources.ImageSourceErrorHandler value) [instance] :439
void Image::remove_Error(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_Error(Fuse.Resources.ImageSourceErrorHandler)");
    uPtr(_container)->remove_SourceError(value);
}

// public Uno.UX.FileSource get_File() [instance] :314
::g::Uno::UX::FileSource* Image::File()
{
    uStackFrame __("Fuse.Controls.Image", "get_File()");
    return uPtr(_container)->File();
}

// public void set_File(Uno.UX.FileSource value) [instance] :315
void Image::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_File(Uno.UX.FileSource)");
    uPtr(_container)->File(value);
}

// public Uno.Collections.IList<Uno.UX.FileSource> get_Files() [instance] :344
uObject* Image::Files()
{
    uStackFrame __("Fuse.Controls.Image", "get_Files()");
    return uPtr(_container)->Files();
}

// private float2 GetSize() [instance] :578
::g::Uno::Float2 Image::GetSize()
{
    uStackFrame __("Fuse.Controls.Image", "GetSize()");

    if (Source() != NULL)
        return uPtr(uPtr(Container())->Sizing)->CalcContentSize(uPtr(Source())->Size(), uPtr(Source())->PixelSize());

    return ::g::Uno::Float2__New1(0.0f);
}

// private Fuse.Controls.Native.IImageView get_ImageView() [instance] :542
uObject* Image::ImageView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[41/*Fuse.Controls.Native.IImageView*/]);
}

// public Fuse.Resources.MemoryPolicy get_MemoryPolicy() [instance] :452
::g::Fuse::Resources::MemoryPolicy* Image::MemoryPolicy()
{
    uStackFrame __("Fuse.Controls.Image", "get_MemoryPolicy()");
    return uPtr(_container)->MemoryPolicy();
}

// public void set_MemoryPolicy(Fuse.Resources.MemoryPolicy value) [instance] :453
void Image::MemoryPolicy(::g::Fuse::Resources::MemoryPolicy* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_MemoryPolicy(Fuse.Resources.MemoryPolicy)");
    uPtr(_container)->MemoryPolicy(value);
}

// private void OnContainerParamChanged(object s, object a) [instance] :283
void Image::OnContainerParamChanged(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerParamChanged(object,object)");
    OnParamChanged();
}

// private void OnContainerSourceChanged(object s, object a) [instance] :287
void Image::OnContainerSourceChanged(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerSourceChanged(object,object)");
    OnSourceChanged();
}

// private void OnContainerSourceError(object s, Fuse.Resources.ImageSourceErrorArgs args) [instance] :293
void Image::OnContainerSourceError(uObject* s, ::g::Fuse::Resources::ImageSourceErrorArgs* args)
{
    uStackFrame __("Fuse.Controls.Image", "OnContainerSourceError(object,Fuse.Resources.ImageSourceErrorArgs)");
    _lastError = args;

    if (!_markedFailed && (uPtr(uPtr(_container)->Source())->State() == 3))
        OnSourceChanged();
}

// private void OnIsVisibleChanged(object s, object a) [instance] :302
void Image::OnIsVisibleChanged1(uObject* s, uObject* a)
{
    uStackFrame __("Fuse.Controls.Image", "OnIsVisibleChanged(object,object)");
    uPtr(_container)->IsVisible(IsVisible());
}

// private void OnParamChanged() [instance] :398
void Image::OnParamChanged()
{
    uStackFrame __("Fuse.Controls.Image", "OnParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(ParamChanged1, NULL))
        uPtr(ParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());

    InvalidateLayout(2);
    InvalidateRenderBounds();
    UpdateNativeImageSource();
}

// private void OnSourceChanged() [instance] :413
void Image::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.Image", "OnSourceChanged()");

    if (uPtr(_container)->Source() != NULL)
    {
        _markedFailed = (uPtr(uPtr(_container)->Source())->State() == 3);
        bool isLoading = uPtr(uPtr(_container)->Source())->State() == 2;
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_loadingTask, _markedFailed ? 16 : isLoading ? 1 : 0, _markedFailed ? (_lastError == NULL) ? ::STRINGS[33/*"unknown fai...*/] : (uString*)uPtr(_lastError)->Reason : ::STRINGS[23/*""*/]);
    }

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());

    InvalidateLayout(2);
    InvalidateRenderBounds();
    UpdateNativeImageSource();
}

// public generated void add_ParamChanged(Uno.EventHandler value) [instance] :397
void Image::add_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) [instance] :397
void Image::remove_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public Fuse.Drawing.ResampleMode get_ResampleMode() [instance] :375
int Image::ResampleMode()
{
    uStackFrame __("Fuse.Controls.Image", "get_ResampleMode()");
    return uPtr(_container)->ResampleMode();
}

// public void set_ResampleMode(Fuse.Drawing.ResampleMode value) [instance] :376
void Image::ResampleMode(int value)
{
    uStackFrame __("Fuse.Controls.Image", "set_ResampleMode(Fuse.Drawing.ResampleMode)");
    uPtr(_container)->ResampleMode(value);
}

// public float4 get_Scale9Margin() [instance] :384
::g::Uno::Float4 Image::Scale9Margin()
{
    return _scale9Margin;
}

// public void set_Scale9Margin(float4 value) [instance] :385
void Image::Scale9Margin(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Scale9Margin(float4)");

    if (!_hasScale9Margin || ::g::Uno::Float4__op_Inequality(_scale9Margin, value))
    {
        _scale9Margin = value;
        _hasScale9Margin = true;
        OnParamChanged();
    }
}

// internal void SetContentBox(float4 contentBox) [instance] :501
void Image::SetContentBox(::g::Uno::Float4 contentBox)
{
    _hasContentBox = true;
    _contentBox = contentBox;
}

// public Fuse.Resources.ImageSource get_Source() [instance] :353
::g::Fuse::Resources::ImageSource* Image::Source()
{
    uStackFrame __("Fuse.Controls.Image", "get_Source()");
    return uPtr(_container)->Source();
}

// public void set_Source(Fuse.Resources.ImageSource value) [instance] :354
void Image::Source(::g::Fuse::Resources::ImageSource* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Source(Fuse.Resources.ImageSource)");
    uPtr(_container)->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :411
void Image::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :411
void Image::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Image", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :466
int Image::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchDirection()");
    return uPtr(_container)->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :467
void Image::StretchDirection(int value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchDirection(Fuse.Elements.StretchDirection)");
    uPtr(_container)->StretchDirection(value);
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :459
int Image::StretchMode()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchMode()");
    return uPtr(_container)->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :460
void Image::StretchMode(int value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchMode(Fuse.Elements.StretchMode)");
    uPtr(_container)->StretchMode(value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() [instance] :477
int Image::StretchSizing()
{
    uStackFrame __("Fuse.Controls.Image", "get_StretchSizing()");
    return uPtr(_container)->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) [instance] :478
void Image::StretchSizing(int value)
{
    uStackFrame __("Fuse.Controls.Image", "set_StretchSizing(Fuse.Elements.StretchSizing)");
    uPtr(_container)->StretchSizing(value);
}

// private void UpdateNativeImageSource() [instance] :530
void Image::UpdateNativeImageSource()
{
    uStackFrame __("Fuse.Controls.Image", "UpdateNativeImageSource()");
    uObject* imageView = ImageView();

    if (imageView != NULL)
    {
        ::g::Fuse::Controls::Native::IImageView::ImageSource(uInterface(uPtr(imageView), ::TYPES[41/*Fuse.Controls.Native.IImageView*/]), Source());
        ::g::Fuse::Controls::Native::IImageView::TintColor(uInterface(uPtr(ImageView()), ::TYPES[41/*Fuse.Controls.Native.IImageView*/]), Color());
    }
}

// private void UpdateNativeImageTransform() [instance] :620
void Image::UpdateNativeImageTransform()
{
    uStackFrame __("Fuse.Controls.Image", "UpdateNativeImageTransform()");
    uObject* imageView = ImageView();

    if (imageView != NULL)
        ::g::Fuse::Controls::Native::IImageView::UpdateImageTransform(uInterface(uPtr(imageView), ::TYPES[41/*Fuse.Controls.Native.IImageView*/]), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])), _origin, _scale, _drawSize);
}

// public string get_Url() [instance] :325
uString* Image::Url()
{
    uStackFrame __("Fuse.Controls.Image", "get_Url()");
    return uPtr(_container)->Url();
}

// public void set_Url(string value) [instance] :326
void Image::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.Image", "set_Url(string)");
    uPtr(_container)->Url(value);
}

// public generated Image New() [static] :248
Image* Image::New3()
{
    Image* obj9 = (Image*)uNew(Image_typeof());
    obj9->ctor_6();
    return obj9;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class ImageElementDraw :692
// {
// static ImageElementDraw() :692
static void ImageElementDraw__cctor__fn(uType* __type)
{
    ImageElementDraw::Impl_ = ImageElementDraw::New1();
}

static void ImageElementDraw_build(uType* type)
{
    ::STRINGS[34] = uString::Const("Invalid enum value");
    ::STRINGS[35] = uString::Const("resampleMode");
    ::TYPES[33] = ::g::Fuse::IRenderViewport_typeof();
    ::TYPES[34] = ::g::Uno::Float2_typeof()->Array();
    type->SetFields(0,
        ::g::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLDrawCall_typeof(), offsetof(::g::Fuse::Controls::ImageElementDraw, _draw_eecabc7e), 0,
        ::g::Uno::Float4x4_typeof(), offsetof(::g::Fuse::Controls::ImageElementDraw, Draw_LocalTransform_eecabc7e_4_9_2), 0,
        ::g::Uno::Float4x4_typeof(), offsetof(::g::Fuse::Controls::ImageElementDraw, Draw_LocalTransform_eecabc7e_4_9_3), 0,
        ::g::Uno::Graphics::VertexBuffer_typeof(), offsetof(::g::Fuse::Controls::ImageElementDraw, Draw_VertexData_eecabc7e_7_2_1), 0,
        type, (uintptr_t)&::g::Fuse::Controls::ImageElementDraw::Impl_, uFieldFlagsStatic);
}

uType* ImageElementDraw_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 5;
    options.ObjectSize = sizeof(ImageElementDraw);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.ImageElementDraw", options);
    type->fp_build_ = ImageElementDraw_build;
    type->fp_ctor_ = (void*)ImageElementDraw__New1_fn;
    type->fp_cctor_ = ImageElementDraw__cctor__fn;
    return type;
}

// public generated ImageElementDraw() :692
void ImageElementDraw__ctor__fn(ImageElementDraw* __this)
{
    __this->ctor_();
}

// public void Draw(Fuse.DrawContext dc, Fuse.Visual element, float2 offset, float2 size, float2 uvPosition, float2 uvSize, texture2D tex, Fuse.Drawing.ResampleMode resampleMode, float4 Color) :707
void ImageElementDraw__Draw_fn(ImageElementDraw* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Visual* element, ::g::Uno::Float2* offset, ::g::Uno::Float2* size, ::g::Uno::Float2* uvPosition, ::g::Uno::Float2* uvSize, ::g::Uno::Graphics::Texture2D* tex, int* resampleMode, ::g::Uno::Float4* Color)
{
    __this->Draw(dc, element, *offset, *size, *uvPosition, *uvSize, tex, *resampleMode, *Color);
}

// private Uno.Graphics.SamplerState GetSamplerState(Fuse.Drawing.ResampleMode resampleMode) :695
void ImageElementDraw__GetSamplerState_fn(ImageElementDraw* __this, int* resampleMode, ::g::Uno::Graphics::SamplerState* __retval)
{
    *__retval = __this->GetSamplerState(*resampleMode);
}

// private generated void init_DrawCalls() :692
void ImageElementDraw__init_DrawCalls_fn(ImageElementDraw* __this)
{
    __this->init_DrawCalls();
}

// public generated ImageElementDraw New() :692
void ImageElementDraw__New1_fn(ImageElementDraw** __retval)
{
    *__retval = ImageElementDraw::New1();
}

uSStrong<ImageElementDraw*> ImageElementDraw::Impl_;

// public generated ImageElementDraw() [instance] :692
void ImageElementDraw::ctor_()
{
    init_DrawCalls();
}

// public void Draw(Fuse.DrawContext dc, Fuse.Visual element, float2 offset, float2 size, float2 uvPosition, float2 uvSize, texture2D tex, Fuse.Drawing.ResampleMode resampleMode, float4 Color) [instance] :707
void ImageElementDraw::Draw(::g::Fuse::DrawContext* dc, ::g::Fuse::Visual* element, ::g::Uno::Float2 offset, ::g::Uno::Float2 size, ::g::Uno::Float2 uvPosition, ::g::Uno::Float2 uvSize, ::g::Uno::Graphics::Texture2D* tex, int resampleMode, ::g::Uno::Float4 Color)
{
    uStackFrame __("Fuse.Controls.ImageElementDraw", "Draw(Fuse.DrawContext,Fuse.Visual,float2,float2,float2,float2,texture2D,Fuse.Drawing.ResampleMode,float4)");
    ::g::Uno::Float4x4 LocalTransform_eecabc7e_4_9_4 = ::g::Uno::Matrix::Mul10(Draw_LocalTransform_eecabc7e_4_9_2, ::g::Uno::Matrix::Scaling1(size.X, size.Y, 1.0f), Draw_LocalTransform_eecabc7e_4_9_3, ::g::Uno::Matrix::Translation(offset.X, offset.Y, 0.0f));
    _draw_eecabc7e.BlendEnabled(true);
    _draw_eecabc7e.DepthTestEnabled(false);
    _draw_eecabc7e.CullFace(uPtr(dc)->CullFace());
    _draw_eecabc7e.BlendSrcRgb(2);
    _draw_eecabc7e.BlendDstRgb(3);
    _draw_eecabc7e.BlendDstAlpha(3);
    _draw_eecabc7e.Use();
    _draw_eecabc7e.Attrib1(0, 2, Draw_VertexData_eecabc7e_7_2_1, 8, 0);
    _draw_eecabc7e.Uniform12(1, ::g::Fuse::IRenderViewport::ViewProjectionTransform(uInterface(uPtr(dc->Viewport()), ::TYPES[33/*Fuse.IRenderViewport*/])));
    _draw_eecabc7e.Uniform2(2, uvSize);
    _draw_eecabc7e.Uniform2(3, uvPosition);
    _draw_eecabc7e.Uniform10(4, Color);
    _draw_eecabc7e.Uniform12(5, (element != NULL) ? ::g::Uno::Matrix::Mul8(LocalTransform_eecabc7e_4_9_4, uPtr(element)->WorldTransform()) : LocalTransform_eecabc7e_4_9_4);
    _draw_eecabc7e.Sampler3(6, tex, GetSamplerState(resampleMode));
    _draw_eecabc7e.DrawArrays(6);
}

// private Uno.Graphics.SamplerState GetSamplerState(Fuse.Drawing.ResampleMode resampleMode) [instance] :695
::g::Uno::Graphics::SamplerState ImageElementDraw::GetSamplerState(int resampleMode)
{
    uStackFrame __("Fuse.Controls.ImageElementDraw", "GetSamplerState(Fuse.Drawing.ResampleMode)");

    switch (resampleMode)
    {
        case 0:
            return ::g::Uno::Graphics::SamplerState__NearestClamp();
        case 1:
            return ::g::Uno::Graphics::SamplerState__LinearClamp();
        case 2:
            return ::g::Uno::Graphics::SamplerState__TrilinearClamp();
        default:
            U_THROW(::g::Uno::ArgumentException::New5(::STRINGS[34/*"Invalid enu...*/], ::STRINGS[35/*"resampleMode"*/]));
    }
}

// private generated void init_DrawCalls() [instance] :692
void ImageElementDraw::init_DrawCalls()
{
    uStackFrame __("Fuse.Controls.ImageElementDraw", "init_DrawCalls()");
    Draw_VertexData_eecabc7e_7_2_1 = ::g::Uno::Graphics::VertexBuffer::New2(::g::Uno::Runtime::Implementation::Internal::BufferConverters::ToBuffer3(uArray::Init< ::g::Uno::Float2>(::TYPES[34/*float2[]*/], 6, ::g::Uno::Float2__New2(0.0f, 0.0f), ::g::Uno::Float2__New2(0.0f, 1.0f), ::g::Uno::Float2__New2(1.0f, 1.0f), ::g::Uno::Float2__New2(0.0f, 0.0f), ::g::Uno::Float2__New2(1.0f, 1.0f), ::g::Uno::Float2__New2(1.0f, 0.0f))), 0);
    Draw_LocalTransform_eecabc7e_4_9_2 = ::g::Uno::Matrix::Translation(-::g::Uno::Float2__New1(0.0f).X, -::g::Uno::Float2__New1(0.0f).Y, 0.0f);
    Draw_LocalTransform_eecabc7e_4_9_3 = ::g::Uno::Matrix::RotationZ(0.0f);
    _draw_eecabc7e = ::g::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLDrawCall__New1(::g::FuseControlsPrimitives_bundle::ImageElementDraw7660063a());
}

// public generated ImageElementDraw New() [static] :692
ImageElementDraw* ImageElementDraw::New1()
{
    ImageElementDraw* obj1 = (ImageElementDraw*)uNew(ImageElementDraw_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal abstract interface INativeViewRoot :2875
// {
uInterfaceType* INativeViewRoot_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.INativeViewRoot", 0, 0);
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum NativeViewHost.InitialState :1376
uEnumType* NativeViewHost__InitialState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NativeViewHost.InitialState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Enabled", 0LL,
        "Disabled", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// private sealed class MobileTextEdit.iOSTemplate :1474
// {
static void MobileTextEdit__iOSTemplate_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    ::STRINGS[37] = uString::Const("Cannot instantiate iOS templates on non-ios platforms!");
    type->SetFields(2,
        ::g::Fuse::Controls::MobileTextEdit_typeof(), offsetof(::g::Fuse::Controls::MobileTextEdit__iOSTemplate, _parent), uFieldFlagsWeak);
}

::g::Uno::UX::Template_type* MobileTextEdit__iOSTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 3;
    options.ObjectSize = sizeof(MobileTextEdit__iOSTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.MobileTextEdit.iOSTemplate", options);
    type->fp_build_ = MobileTextEdit__iOSTemplate_build;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))MobileTextEdit__iOSTemplate__New1_fn;
    return type;
}

// public iOSTemplate(Fuse.Controls.MobileTextEdit parent) :1479
void MobileTextEdit__iOSTemplate__ctor_1_fn(MobileTextEdit__iOSTemplate* __this, ::g::Fuse::Controls::MobileTextEdit* parent)
{
    __this->ctor_1(parent);
}

// public override sealed extern object New() :1496
void MobileTextEdit__iOSTemplate__New1_fn(MobileTextEdit__iOSTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit.iOSTemplate", "New()");
    U_THROW(::g::Uno::Exception::New2(::STRINGS[37/*"Cannot inst...*/]));
}

// public iOSTemplate New(Fuse.Controls.MobileTextEdit parent) :1479
void MobileTextEdit__iOSTemplate__New2_fn(::g::Fuse::Controls::MobileTextEdit* parent, MobileTextEdit__iOSTemplate** __retval)
{
    *__retval = MobileTextEdit__iOSTemplate::New2(parent);
}

// public iOSTemplate(Fuse.Controls.MobileTextEdit parent) [instance] :1479
void MobileTextEdit__iOSTemplate::ctor_1(::g::Fuse::Controls::MobileTextEdit* parent)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    _parent = parent;
}

// public iOSTemplate New(Fuse.Controls.MobileTextEdit parent) [static] :1479
MobileTextEdit__iOSTemplate* MobileTextEdit__iOSTemplate::New2(::g::Fuse::Controls::MobileTextEdit* parent)
{
    MobileTextEdit__iOSTemplate* obj1 = (MobileTextEdit__iOSTemplate*)uNew(MobileTextEdit__iOSTemplate_typeof());
    obj1->ctor_1(parent);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal abstract interface IProxyHost :261
// {
uInterfaceType* IProxyHost_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.IProxyHost", 0, 0);
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal static class IProxyHostExtensions :268
// {
static void IProxyHostExtensions_build(uType* type)
{
    ::TYPES[42] = ::g::Fuse::Controls::IProxyHost_typeof();
}

uClassType* IProxyHostExtensions_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.IProxyHostExtensions", options);
    type->fp_build_ = IProxyHostExtensions_build;
    return type;
}

// public static Fuse.Controls.IProxyHost FindProxyHost(Fuse.Visual visual) :270
void IProxyHostExtensions__FindProxyHost_fn(::g::Fuse::Visual* visual, uObject** __retval)
{
    *__retval = IProxyHostExtensions::FindProxyHost(visual);
}

// public static Fuse.Controls.IProxyHost FindProxyHost(Fuse.Visual visual) [static] :270
uObject* IProxyHostExtensions::FindProxyHost(::g::Fuse::Visual* visual)
{
    uStackFrame __("Fuse.Controls.IProxyHostExtensions", "FindProxyHost(Fuse.Visual)");

    if (visual == NULL)
        return NULL;

    ::g::Fuse::Visual* parent = uPtr(visual)->Parent();

    if (parent == NULL)
        return NULL;

    if (uIs(parent, ::TYPES[42/*Fuse.Controls.IProxyHost*/]) && (uPtr(uPtr(parent)->Parent())->VisualContext() == 2))
        return uAs<uObject*>(parent, ::TYPES[42/*Fuse.Controls.IProxyHost*/]);
    else
        return IProxyHostExtensions::FindProxyHost(parent);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// public abstract interface ISourceReceiver :17
// {
uInterfaceType* ISourceReceiver_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ISourceReceiver", 0, 0);
    type->Reflection.SetFunctions(2,
        new uFunction("get_Source", NULL, NULL, offsetof(ISourceReceiver, fp_get_Source), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Source", NULL, NULL, offsetof(ISourceReceiver, fp_set_Source), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public abstract interface ITextEditControl :2374
// {
uInterfaceType* ITextEditControl_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ITextEditControl", 0, 0);
    type->Reflection.SetFunctions(4,
        new uFunction("add_ActionTriggered", NULL, NULL, offsetof(ITextEditControl, fp_add_ActionTriggered), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("remove_ActionTriggered", NULL, NULL, offsetof(ITextEditControl, fp_remove_ActionTriggered), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("get_IsPassword", NULL, NULL, offsetof(ITextEditControl, fp_get_IsPassword), false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsPassword", NULL, NULL, offsetof(ITextEditControl, fp_set_IsPassword), false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// internal abstract interface ITextRenderer :1976
// {
uInterfaceType* ITextRenderer_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.ITextRenderer", 0, 0);
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// public abstract interface IWebView :22
// {
uInterfaceType* IWebView_typeof()
{
    static uSStrong<uInterfaceType*> type;
    if (type != NULL) return type;

    type = uInterfaceType::New("Fuse.Controls.IWebView", 0, 0);
    type->Reflection.SetFunctions(24,
        new uFunction("get_BaseUrl", NULL, NULL, offsetof(IWebView, fp_get_BaseUrl), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_BaseUrl", NULL, NULL, offsetof(IWebView, fp_set_BaseUrl), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_BeginLoading", NULL, NULL, offsetof(IWebView, fp_add_BeginLoading), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_BeginLoading", NULL, NULL, offsetof(IWebView, fp_remove_BeginLoading), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_DocumentTitle", NULL, NULL, offsetof(IWebView, fp_get_DocumentTitle), false, ::g::Uno::String_typeof(), 0),
        new uFunction("Eval", NULL, NULL, offsetof(IWebView, fp_Eval), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("Eval", NULL, NULL, offsetof(IWebView, fp_Eval1), false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::Action1_typeof()->MakeType(::g::Uno::String_typeof(), NULL)),
        new uFunction("get_File", NULL, NULL, offsetof(IWebView, fp_get_File), false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, NULL, offsetof(IWebView, fp_set_File), false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("LoadHtml", NULL, NULL, offsetof(IWebView, fp_LoadHtml), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("LoadHtml", NULL, NULL, offsetof(IWebView, fp_LoadHtml1), false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::String_typeof()),
        new uFunction("LoadUrl", NULL, NULL, offsetof(IWebView, fp_LoadUrl), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_PageLoaded", NULL, NULL, offsetof(IWebView, fp_add_PageLoaded), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_PageLoaded", NULL, NULL, offsetof(IWebView, fp_remove_PageLoaded), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("Reload", NULL, NULL, offsetof(IWebView, fp_Reload), false, uVoid_typeof(), 0),
        new uFunction("Stop", NULL, NULL, offsetof(IWebView, fp_Stop), false, uVoid_typeof(), 0),
        new uFunction("add_URISchemeHandler", NULL, NULL, offsetof(IWebView, fp_add_URISchemeHandler), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_URISchemeHandler", NULL, NULL, offsetof(IWebView, fp_remove_URISchemeHandler), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_Url", NULL, NULL, offsetof(IWebView, fp_get_Url), false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, NULL, offsetof(IWebView, fp_set_Url), false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_UrlChanged", NULL, NULL, offsetof(IWebView, fp_add_UrlChanged), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("remove_UrlChanged", NULL, NULL, offsetof(IWebView, fp_remove_UrlChanged), false, uVoid_typeof(), 1, ::g::Uno::EventHandler_typeof()),
        new uFunction("get_ZoomEnabled", NULL, NULL, offsetof(IWebView, fp_get_ZoomEnabled), false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ZoomEnabled", NULL, NULL, offsetof(IWebView, fp_set_ZoomEnabled), false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
    return type;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// internal sealed class JavaScriptCall :448
// {
static void JavaScriptCall_build(uType* type)
{
    ::TYPES[43] = ::g::Fuse::Controls::IWebView_typeof();
    type->SetInterfaces(
        ::g::Fuse::Controls::BufferedWebViewCall_typeof(), offsetof(JavaScriptCall_type, interface0));
    type->SetFields(0,
        ::g::Uno::Action1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::JavaScriptCall, Handler), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::JavaScriptCall, Script), 0);
}

JavaScriptCall_type* JavaScriptCall_typeof()
{
    static uSStrong<JavaScriptCall_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(JavaScriptCall);
    options.TypeSize = sizeof(JavaScriptCall_type);
    type = (JavaScriptCall_type*)uClassType::New("Fuse.Controls.JavaScriptCall", options);
    type->fp_build_ = JavaScriptCall_build;
    type->interface0.fp_Apply = (void(*)(uObject*, uObject*))JavaScriptCall__Apply_fn;
    return type;
}

// public JavaScriptCall(string script, Uno.Action<string> handler) :453
void JavaScriptCall__ctor__fn(JavaScriptCall* __this, uString* script, uDelegate* handler)
{
    __this->ctor_(script, handler);
}

// public void Apply(Fuse.Controls.IWebView wv) :459
void JavaScriptCall__Apply_fn(JavaScriptCall* __this, uObject* wv)
{
    __this->Apply(wv);
}

// public JavaScriptCall New(string script, Uno.Action<string> handler) :453
void JavaScriptCall__New1_fn(uString* script, uDelegate* handler, JavaScriptCall** __retval)
{
    *__retval = JavaScriptCall::New1(script, handler);
}

// public JavaScriptCall(string script, Uno.Action<string> handler) [instance] :453
void JavaScriptCall::ctor_(uString* script, uDelegate* handler)
{
    Script = script;
    Handler = handler;
}

// public void Apply(Fuse.Controls.IWebView wv) [instance] :459
void JavaScriptCall::Apply(uObject* wv)
{
    uStackFrame __("Fuse.Controls.JavaScriptCall", "Apply(Fuse.Controls.IWebView)");

    if (::g::Uno::Delegate::op_Inequality(Handler, NULL))
        ::g::Fuse::Controls::IWebView::Eval1(uInterface(uPtr(wv), ::TYPES[43/*Fuse.Controls.IWebView*/]), Script, Handler);
    else
        ::g::Fuse::Controls::IWebView::Eval(uInterface(uPtr(wv), ::TYPES[43/*Fuse.Controls.IWebView*/]), Script);
}

// public JavaScriptCall New(string script, Uno.Action<string> handler) [static] :453
JavaScriptCall* JavaScriptCall::New1(uString* script, uDelegate* handler)
{
    JavaScriptCall* obj1 = (JavaScriptCall*)uNew(JavaScriptCall_typeof());
    obj1->ctor_(script, handler);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls/0.47.7/$.uno
// ----------------------------------------------------------------------------------------

// public static class KeyframeAccessors :373
// {
static void KeyframeAccessors_build(uType* type)
{
    type->Reflection.SetFunctions(2,
        new uFunction("SetVisibility", NULL, (void*)KeyframeAccessors__SetVisibility_fn, 0, true, ::g::Fuse::Elements::Visibility_typeof(), 1, ::g::Fuse::Animations::Keyframe_typeof()),
        new uFunction("SetVisibility", NULL, (void*)KeyframeAccessors__SetVisibility1_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Animations::Keyframe_typeof(), ::g::Fuse::Elements::Visibility_typeof()));
}

uClassType* KeyframeAccessors_typeof()
{
    static uSStrong<uClassType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.TypeSize = sizeof(uClassType);
    type = uClassType::New("Fuse.Controls.KeyframeAccessors", options);
    type->fp_build_ = KeyframeAccessors_build;
    return type;
}

// public static Fuse.Elements.Visibility SetVisibility(Fuse.Animations.Keyframe kf) :382
void KeyframeAccessors__SetVisibility_fn(::g::Fuse::Animations::Keyframe* kf, int* __retval)
{
    *__retval = KeyframeAccessors::SetVisibility(kf);
}

// public static void SetVisibility(Fuse.Animations.Keyframe kf, Fuse.Elements.Visibility v) :376
void KeyframeAccessors__SetVisibility1_fn(::g::Fuse::Animations::Keyframe* kf, int* v)
{
    KeyframeAccessors::SetVisibility1(kf, *v);
}

// public static Fuse.Elements.Visibility SetVisibility(Fuse.Animations.Keyframe kf) [static] :382
int KeyframeAccessors::SetVisibility(::g::Fuse::Animations::Keyframe* kf)
{
    uStackFrame __("Fuse.Controls.KeyframeAccessors", "SetVisibility(Fuse.Animations.Keyframe)");
    return uUnbox<int>(::g::Fuse::Elements::Visibility_typeof(), uPtr(kf)->ObjectValue());
}

// public static void SetVisibility(Fuse.Animations.Keyframe kf, Fuse.Elements.Visibility v) [static] :376
void KeyframeAccessors::SetVisibility1(::g::Fuse::Animations::Keyframe* kf, int v)
{
    uStackFrame __("Fuse.Controls.KeyframeAccessors", "SetVisibility(Fuse.Animations.Keyframe,Fuse.Elements.Visibility)");
    uPtr(kf)->ObjectValue(uBox<int>(::g::Fuse::Elements::Visibility_typeof(), v));
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public class LayoutControl :937
// {
static void LayoutControl_build(uType* type)
{
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(95,
        ::g::Fuse::Layouts::Layout_typeof(), offsetof(::g::Fuse::Controls::LayoutControl, _layout), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("GetLayoutMaster", NULL, (void*)LayoutControl__GetLayoutMaster_fn, 0, true, ::g::Fuse::Elements::Element_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction("get_Layout", NULL, (void*)LayoutControl__get_Layout_fn, 0, false, ::g::Fuse::Layouts::Layout_typeof(), 0),
        new uFunction("set_Layout", NULL, (void*)LayoutControl__set_Layout_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Layout_typeof()),
        new uFunction(".ctor", NULL, (void*)LayoutControl__New2_fn, 0, true, type, 0),
        new uFunction("SetLayoutMaster", NULL, (void*)LayoutControl__SetLayoutMaster_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Elements::Element_typeof()));
}

::g::Fuse::Controls::Control_type* LayoutControl_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 96;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(LayoutControl);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.LayoutControl", options);
    type->fp_build_ = LayoutControl_build;
    type->fp_ctor_ = (void*)LayoutControl__New2_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))LayoutControl__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))LayoutControl__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int*))LayoutControl__IsMarginBoxDependent_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))LayoutControl__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))LayoutControl__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))LayoutControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))LayoutControl__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated LayoutControl() :937
void LayoutControl__ctor_5_fn(LayoutControl* __this)
{
    __this->ctor_5();
}

// protected override void ArrangePaddingBox(Fuse.LayoutParams lp) :1059
void LayoutControl__ArrangePaddingBox_fn(LayoutControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Elements::Element__ArrangePaddingBox_fn(__this, uCRef(lp_));

    if (__this->HasVisualChildren())
        uPtr(__this->Layout())->ArrangePaddingBox(__this->Children(), __this->Padding(), lp_);
}

// protected override float2 GetContentSize(Fuse.LayoutParams lp) :1049
void LayoutControl__GetContentSize_fn(LayoutControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret3;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::Control__GetContentSize_fn(__this, uCRef(lp_), &ret3), ret3);

    if (__this->HasVisualChildren())
        return *__retval = ::g::Uno::Math::Max3(b, uPtr(__this->Layout())->GetContentSize(__this->Children(), lp_)), void();

    return *__retval = b, void();
}

// public static Fuse.Elements.Element GetLayoutMaster(Fuse.Elements.Element elm) :1000
void LayoutControl__GetLayoutMaster_fn(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = LayoutControl::GetLayoutMaster(elm);
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :1081
void LayoutControl__IsMarginBoxDependent_fn(LayoutControl* __this, ::g::Fuse::Visual* child, int* __retval)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "IsMarginBoxDependent(Fuse.Visual)");
    int outer = uPtr(__this->BoxSizingObject())->IsContentRelativeSize(__this);
    int inner = uPtr(__this->Layout())->IsMarginBoxDependent(child);

    if (outer == 4)
    {
        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 4, void();
    }
    else if (outer == 0)
    {
        if (inner == 4)
            return *__retval = 1, void();

        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 3, void();
    }
    else
    {
        if (inner == 4)
            return *__retval = 3, void();

        if (inner == 0)
            return *__retval = 0, void();

        return *__retval = 2, void();
    }
}

// public Fuse.Layouts.Layout get_Layout() :1022
void LayoutControl__get_Layout_fn(LayoutControl* __this, ::g::Fuse::Layouts::Layout** __retval)
{
    *__retval = __this->Layout();
}

// public void set_Layout(Fuse.Layouts.Layout value) :1023
void LayoutControl__set_Layout_fn(LayoutControl* __this, ::g::Fuse::Layouts::Layout* value)
{
    __this->Layout(value);
}

// public generated LayoutControl New() :937
void LayoutControl__New2_fn(LayoutControl** __retval)
{
    *__retval = LayoutControl::New2();
}

// protected override void OnChildAdded(Fuse.Node elm) :1067
void LayoutControl__OnChildAdded_fn(LayoutControl* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnChildAdded(Fuse.Node)");

    if (uIs(elm, ::TYPES[9/*Fuse.Visual*/]))
        __this->InvalidateLayout(2);

    ::g::Fuse::Elements::Element__OnChildAdded_fn(__this, elm);
}

// protected override void OnChildRemoved(Fuse.Node elm) :1074
void LayoutControl__OnChildRemoved_fn(LayoutControl* __this, ::g::Fuse::Node* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnChildRemoved(Fuse.Node)");

    if (uIs(elm, ::TYPES[9/*Fuse.Visual*/]))
        __this->InvalidateLayout(2);

    ::g::Fuse::Elements::Element__OnChildRemoved_fn(__this, elm);
}

// protected override void OnRooted() :1035
void LayoutControl__OnRooted_fn(LayoutControl* __this)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);

    if (__this->_layout != NULL)
        uPtr(__this->_layout)->Rooted(__this);
}

// protected override void OnUnrooted() :1042
void LayoutControl__OnUnrooted_fn(LayoutControl* __this)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "OnUnrooted()");

    if (__this->_layout != NULL)
        uPtr(__this->_layout)->Unrooted(__this);

    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
}

// public static void SetLayoutMaster(Fuse.Elements.Element elm, Fuse.Elements.Element master) :983
void LayoutControl__SetLayoutMaster_fn(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element* master)
{
    LayoutControl::SetLayoutMaster(elm, master);
}

// public generated LayoutControl() [instance] :937
void LayoutControl::ctor_5()
{
    ctor_4();
}

// public Fuse.Layouts.Layout get_Layout() [instance] :1022
::g::Fuse::Layouts::Layout* LayoutControl::Layout()
{
    ::g::Fuse::Layouts::Layout* ind1 = _layout;
    return (ind1 != NULL) ? ind1 : (::g::Fuse::Layouts::Layout*)::g::Fuse::Layouts::Layouts::Default();
}

// public void set_Layout(Fuse.Layouts.Layout value) [instance] :1023
void LayoutControl::Layout(::g::Fuse::Layouts::Layout* value)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "set_Layout(Fuse.Layouts.Layout)");

    if (value != _layout)
    {
        if (IsRootingCompleted() && (_layout != NULL))
            uPtr(_layout)->Unrooted(this);

        _layout = value;

        if (IsRootingCompleted() && (_layout != NULL))
            uPtr(_layout)->Rooted(this);

        InvalidateLayout(2);
    }
}

// public static Fuse.Elements.Element GetLayoutMaster(Fuse.Elements.Element elm) [static] :1000
::g::Fuse::Elements::Element* LayoutControl::GetLayoutMaster(::g::Fuse::Elements::Element* elm)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "GetLayoutMaster(Fuse.Elements.Element)");
    return ::g::Fuse::Elements::LayoutMasterBoxSizing::GetLayoutMaster(elm);
}

// public generated LayoutControl New() [static] :937
LayoutControl* LayoutControl::New2()
{
    LayoutControl* obj2 = (LayoutControl*)uNew(LayoutControl_typeof());
    obj2->ctor_5();
    return obj2;
}

// public static void SetLayoutMaster(Fuse.Elements.Element elm, Fuse.Elements.Element master) [static] :983
void LayoutControl::SetLayoutMaster(::g::Fuse::Elements::Element* elm, ::g::Fuse::Elements::Element* master)
{
    uStackFrame __("Fuse.Controls.LayoutControl", "SetLayoutMaster(Fuse.Elements.Element,Fuse.Elements.Element)");

    if (master == NULL)
    {
        uPtr(elm)->BoxSizing(0);
        elm->LayoutRole(0);
        ::g::Fuse::Elements::LayoutMasterBoxSizing::SetLayoutMaster(elm, NULL);
    }
    else
    {
        uPtr(elm)->BoxSizing(3);
        elm->LayoutRole(3);
        ::g::Fuse::Elements::LayoutMasterBoxSizing::SetLayoutMaster(elm, master);
    }
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// internal sealed class LoadHtmlCall :433
// {
static void LoadHtmlCall_build(uType* type)
{
    ::TYPES[43] = ::g::Fuse::Controls::IWebView_typeof();
    type->SetInterfaces(
        ::g::Fuse::Controls::BufferedWebViewCall_typeof(), offsetof(LoadHtmlCall_type, interface0));
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::LoadHtmlCall, baseUrl), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::LoadHtmlCall, html), 0);
}

LoadHtmlCall_type* LoadHtmlCall_typeof()
{
    static uSStrong<LoadHtmlCall_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 2;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(LoadHtmlCall);
    options.TypeSize = sizeof(LoadHtmlCall_type);
    type = (LoadHtmlCall_type*)uClassType::New("Fuse.Controls.LoadHtmlCall", options);
    type->fp_build_ = LoadHtmlCall_build;
    type->interface0.fp_Apply = (void(*)(uObject*, uObject*))LoadHtmlCall__Apply_fn;
    return type;
}

// public LoadHtmlCall(string html, string baseUrl) :437
void LoadHtmlCall__ctor__fn(LoadHtmlCall* __this, uString* html1, uString* baseUrl1)
{
    __this->ctor_(html1, baseUrl1);
}

// public void Apply(Fuse.Controls.IWebView wv) :442
void LoadHtmlCall__Apply_fn(LoadHtmlCall* __this, uObject* wv)
{
    __this->Apply(wv);
}

// public LoadHtmlCall New(string html, string baseUrl) :437
void LoadHtmlCall__New1_fn(uString* html1, uString* baseUrl1, LoadHtmlCall** __retval)
{
    *__retval = LoadHtmlCall::New1(html1, baseUrl1);
}

// public LoadHtmlCall(string html, string baseUrl) [instance] :437
void LoadHtmlCall::ctor_(uString* html1, uString* baseUrl1)
{
    html = html1;
    baseUrl = baseUrl1;
}

// public void Apply(Fuse.Controls.IWebView wv) [instance] :442
void LoadHtmlCall::Apply(uObject* wv)
{
    uStackFrame __("Fuse.Controls.LoadHtmlCall", "Apply(Fuse.Controls.IWebView)");
    ::g::Fuse::Controls::IWebView::LoadHtml1(uInterface(uPtr(wv), ::TYPES[43/*Fuse.Controls.IWebView*/]), html, baseUrl);
}

// public LoadHtmlCall New(string html, string baseUrl) [static] :437
LoadHtmlCall* LoadHtmlCall::New1(uString* html1, uString* baseUrl1)
{
    LoadHtmlCall* obj1 = (LoadHtmlCall*)uNew(LoadHtmlCall_typeof());
    obj1->ctor_(html1, baseUrl1);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// internal partial sealed class MobileTextEdit :1177
// {
static void MobileTextEdit_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    ::TYPES[44] = ::g::Fuse::Controls::Native::ITextEdit_typeof();
    ::TYPES[45] = ::g::Fuse::Controls::Native::ViewHandle_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[46] = ::g::Uno::IDisposable_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(MobileTextEdit_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(MobileTextEdit_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(MobileTextEdit_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(MobileTextEdit_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(MobileTextEdit_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(MobileTextEdit_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(MobileTextEdit_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(MobileTextEdit_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(MobileTextEdit_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(MobileTextEdit_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(MobileTextEdit_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(MobileTextEdit_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(MobileTextEdit_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(MobileTextEdit_type, interface15),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(MobileTextEdit_type, interface16),
        ::g::Fuse::Controls::Native::ITextEditHost_typeof(), offsetof(MobileTextEdit_type, interface17),
        ::g::Fuse::Input::INotifyFocus_typeof(), offsetof(MobileTextEdit_type, interface18));
    type->SetFields(106,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::MobileTextEdit, _isMultiline1), 0,
        ::g::Fuse::Controls::SingleViewHost_typeof(), offsetof(::g::Fuse::Controls::MobileTextEdit, _singelViewHost), 0,
        ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/], offsetof(::g::Fuse::Controls::MobileTextEdit, _textEdit), 0);
}

MobileTextEdit_type* MobileTextEdit_typeof()
{
    static uSStrong<MobileTextEdit_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextEdit_typeof();
    options.FieldCount = 109;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(MobileTextEdit);
    options.TypeSize = sizeof(MobileTextEdit_type);
    type = (MobileTextEdit_type*)uClassType::New("Fuse.Controls.MobileTextEdit", options);
    type->fp_build_ = MobileTextEdit_build;
    type->fp_InvalidateRenderer = (void(*)(::g::Fuse::Controls::TextControl*))MobileTextEdit__InvalidateRenderer_fn;
    type->fp_OnActionStyleChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnActionStyleChanged_fn;
    type->fp_OnAutoCapitalizationHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnAutoCapitalizationHintChanged_fn;
    type->fp_OnAutoCorrectHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnAutoCorrectHintChanged_fn;
    type->fp_OnCaretColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnCaretColorChanged_fn;
    type->fp_OnInputHintChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnInputHintChanged_fn;
    type->fp_OnIsPasswordChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnIsPasswordChanged_fn;
    type->fp_OnIsReadOnlyChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnIsReadOnlyChanged_fn;
    type->fp_OnPlaceholderColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnPlaceholderColorChanged_fn;
    type->fp_OnPlaceholderTextChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnPlaceholderTextChanged_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))MobileTextEdit__OnRooted_fn;
    type->fp_OnSelectionColorChanged = (void(*)(::g::Fuse::Controls::TextEdit*))MobileTextEdit__OnSelectionColorChanged_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))MobileTextEdit__OnUnrooted_fn;
    type->fp_OnValueChanged = (void(*)(::g::Fuse::Controls::TextControl*, uObject*))MobileTextEdit__OnValueChanged_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))MobileTextEdit__PushPropertiesToNativeView_fn;
    type->fp_get_RenderValue = (void(*)(::g::Fuse::Controls::TextControl*, uString**))MobileTextEdit__get_RenderValue_fn;
    type->interface17.fp_OnValueChanged = (void(*)(uObject*, uString*))MobileTextEdit__FuseControlsNativeITextEditHostOnValueChanged_fn;
    type->interface17.fp_OnInputAction = (void(*)(uObject*, int*, bool*))MobileTextEdit__FuseControlsNativeITextEditHostOnInputAction_fn;
    type->interface17.fp_OnFocusGained = (void(*)(uObject*))MobileTextEdit__FuseControlsNativeITextEditHostOnFocusGained_fn;
    type->interface17.fp_OnFocusLost = (void(*)(uObject*))MobileTextEdit__FuseControlsNativeITextEditHostOnFocusLost_fn;
    type->interface18.fp_OnFocusGained = (void(*)(uObject*))MobileTextEdit__FuseInputINotifyFocusOnFocusGained_fn;
    type->interface18.fp_OnFocusLost = (void(*)(uObject*))MobileTextEdit__FuseInputINotifyFocusOnFocusLost_fn;
    type->interface16.fp_get_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextEdit__get_IsPassword_fn;
    type->interface16.fp_set_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextEdit__set_IsPassword_fn;
    type->interface16.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextEdit__add_ActionTriggered_fn;
    type->interface16.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextEdit__remove_ActionTriggered_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public MobileTextEdit(bool multiline) :1294
void MobileTextEdit__ctor_8_fn(MobileTextEdit* __this, bool* multiline)
{
    __this->ctor_8(*multiline);
}

// private extern void DisableRenderToTexture() :1423
void MobileTextEdit__DisableRenderToTexture_fn(MobileTextEdit* __this)
{
    __this->DisableRenderToTexture();
}

// private extern void EnabledRenderToTexture() :1434
void MobileTextEdit__EnabledRenderToTexture_fn(MobileTextEdit* __this)
{
    __this->EnabledRenderToTexture();
}

// private void Fuse.Controls.Native.ITextEditHost.OnFocusGained() :1388
void MobileTextEdit__FuseControlsNativeITextEditHostOnFocusGained_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnFocusGained()");
    ::g::Fuse::Input::Focus::Obtained(__this);
    __this->DisableRenderToTexture();
}

// private void Fuse.Controls.Native.ITextEditHost.OnFocusLost() :1394
void MobileTextEdit__FuseControlsNativeITextEditHostOnFocusLost_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnFocusLost()");
    ::g::Fuse::Input::Focus::ReleaseFrom(__this);
    __this->EnabledRenderToTexture();
}

// private bool Fuse.Controls.Native.ITextEditHost.OnInputAction(Fuse.Controls.TextInputActionType type) :1383
void MobileTextEdit__FuseControlsNativeITextEditHostOnInputAction_fn(MobileTextEdit* __this, int* type, bool* __retval)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnInputAction(Fuse.Controls.TextInputActionType)");
    int type_ = *type;
    return *__retval = __this->OnAction(type_), void();
}

// private void Fuse.Controls.Native.ITextEditHost.OnValueChanged(string newValue) :1378
void MobileTextEdit__FuseControlsNativeITextEditHostOnValueChanged_fn(MobileTextEdit* __this, uString* newValue)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Controls.Native.ITextEditHost.OnValueChanged(string)");
    __this->SetValueInternal(newValue);
}

// private void Fuse.Input.INotifyFocus.OnFocusGained() :1400
void MobileTextEdit__FuseInputINotifyFocusOnFocusGained_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Input.INotifyFocus.OnFocusGained()");
    __this->DisableRenderToTexture();

    if (__this->NativeEdit() != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::FocusGained(uInterface(uPtr(__this->NativeEdit()), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]));
}

// private void Fuse.Input.INotifyFocus.OnFocusLost() :1407
void MobileTextEdit__FuseInputINotifyFocusOnFocusLost_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "Fuse.Input.INotifyFocus.OnFocusLost()");

    if (__this->NativeEdit() != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::FocusLost(uInterface(uPtr(__this->NativeEdit()), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]));

    __this->EnabledRenderToTexture();
}

// private Fuse.Controls.Native.ITextEdit GetITextEdit() :1179
void MobileTextEdit__GetITextEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->GetITextEdit();
}

// private extern Fuse.Controls.Native.IViewHandleRenderer InstatiateRenderer() :1347
void MobileTextEdit__InstatiateRenderer_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->InstatiateRenderer();
}

// private extern Fuse.Controls.Native.ITextEdit InstatiateTextEdit() :1338
void MobileTextEdit__InstatiateTextEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->InstatiateTextEdit();
}

// private extern void InvalidateNativeViewHost() :1447
void MobileTextEdit__InvalidateNativeViewHost_fn(MobileTextEdit* __this)
{
    __this->InvalidateNativeViewHost();
}

// protected override sealed void InvalidateRenderer() :1414
void MobileTextEdit__InvalidateRenderer_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InvalidateRenderer()");
    __this->InvalidateNativeViewHost();
    __this->InvalidateRenderBounds();
}

// private Fuse.Controls.Native.ITextEdit get_NativeEdit() :1305
void MobileTextEdit__get_NativeEdit_fn(MobileTextEdit* __this, uObject** __retval)
{
    *__retval = __this->NativeEdit();
}

// public MobileTextEdit New(bool multiline) :1294
void MobileTextEdit__New3_fn(bool* multiline, MobileTextEdit** __retval)
{
    *__retval = MobileTextEdit::New3(*multiline);
}

// protected override sealed void OnActionStyleChanged() :1235
void MobileTextEdit__OnActionStyleChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnActionStyleChanged()");
    ::g::Fuse::Controls::TextEdit__OnActionStyleChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::ActionStyle(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->ActionStyle());
}

// protected override sealed void OnAutoCapitalizationHintChanged() :1249
void MobileTextEdit__OnAutoCapitalizationHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnAutoCapitalizationHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnAutoCapitalizationHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::AutoCapitalizationHint(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->AutoCapitalizationHint());
}

// protected override sealed void OnAutoCorrectHintChanged() :1242
void MobileTextEdit__OnAutoCorrectHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnAutoCorrectHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnAutoCorrectHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::AutoCorrectHint(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->AutoCorrectHint());
}

// protected override sealed void OnCaretColorChanged() :1221
void MobileTextEdit__OnCaretColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnCaretColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnCaretColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::CaretColor(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->CaretColor());
}

// protected override sealed void OnInputHintChanged() :1214
void MobileTextEdit__OnInputHintChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnInputHintChanged()");
    ::g::Fuse::Controls::TextEdit__OnInputHintChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::InputHint(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->InputHint());
}

// protected override sealed void OnIsPasswordChanged() :1200
void MobileTextEdit__OnIsPasswordChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnIsPasswordChanged()");
    ::g::Fuse::Controls::TextEdit__OnIsPasswordChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::IsPassword(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->IsPassword());
}

// protected override sealed void OnIsReadOnlyChanged() :1207
void MobileTextEdit__OnIsReadOnlyChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnIsReadOnlyChanged()");
    ::g::Fuse::Controls::TextEdit__OnIsReadOnlyChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::IsReadOnly(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->IsReadOnly());
}

// protected override sealed void OnPlaceholderColorChanged() :1267
void MobileTextEdit__OnPlaceholderColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnPlaceholderColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnPlaceholderColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::PlaceholderColor(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->PlaceholderColor());

    __this->InvalidateVisual();
    __this->InvalidateRenderer();
}

// protected override sealed void OnPlaceholderTextChanged() :1256
void MobileTextEdit__OnPlaceholderTextChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnPlaceholderTextChanged()");
    ::g::Fuse::Controls::TextEdit__OnPlaceholderTextChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::PlaceholderText(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->PlaceholderText());

    __this->InvalidateVisual();
    __this->InvalidateLayout(2);
    __this->InvalidateRenderer();
}

// protected override sealed extern void OnRooted() :1320
void MobileTextEdit__OnRooted_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnRooted()");
    ::g::Fuse::Controls::TextControl__OnRooted_fn(__this);

    if (__this->VisualContext() == 1)
    {
        __this->_textEdit = __this->InstatiateTextEdit();
        __this->NativeView(__this->_textEdit);
        __this->_singelViewHost = ::g::Fuse::Controls::SingleViewHost::New2(0, uAs< ::g::Fuse::Controls::Native::ViewHandle*>(__this->_textEdit, ::TYPES[45/*Fuse.Controls.Native.ViewHandle*/]), __this->InstatiateRenderer());
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_singelViewHost);
        __this->PushPropertiesToNativeView();
        __this->InvalidateNativeViewHost();
    }
}

// protected override sealed void OnSelectionColorChanged() :1228
void MobileTextEdit__OnSelectionColorChanged_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnSelectionColorChanged()");
    ::g::Fuse::Controls::TextEdit__OnSelectionColorChanged_fn(__this);
    uObject* edit = __this->GetITextEdit();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextEdit::SelectionColor(uInterface(uPtr(edit), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->SelectionColor());
}

// protected override sealed extern void OnUnrooted() :1356
void MobileTextEdit__OnUnrooted_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnUnrooted()");
    bool ret3;
    ::g::Fuse::Controls::TextControl__OnUnrooted_fn(__this);

    if (__this->_singelViewHost != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_singelViewHost, &ret3);
        uPtr(__this->_singelViewHost)->Dispose();
        __this->_singelViewHost = NULL;
    }

    if (__this->_textEdit != NULL)
    {
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(__this->_textEdit), ::TYPES[46/*Uno.IDisposable*/]));
        __this->_textEdit = NULL;
    }

    __this->NativeView(NULL);
}

// protected override sealed void OnValueChanged(Uno.UX.IPropertyListener origin) :1373
void MobileTextEdit__OnValueChanged_fn(MobileTextEdit* __this, uObject* origin)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "OnValueChanged(Uno.UX.IPropertyListener)");
    ::g::Fuse::Controls::TextControl__OnValueChanged_fn(__this, origin);
}

// protected override sealed void PushPropertiesToNativeView() :1184
void MobileTextEdit__PushPropertiesToNativeView_fn(MobileTextEdit* __this)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::TextControl__PushPropertiesToNativeView_fn(__this);
    uObject* tv = uAs<uObject*>(__this->NativeView(), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]);
    ::g::Fuse::Controls::Native::ITextEdit::IsPassword(uInterface(uPtr(tv), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->IsPassword());
    ::g::Fuse::Controls::Native::ITextEdit::IsReadOnly(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->IsReadOnly());
    ::g::Fuse::Controls::Native::ITextEdit::InputHint(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->InputHint());
    ::g::Fuse::Controls::Native::ITextEdit::CaretColor(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->CaretColor());
    ::g::Fuse::Controls::Native::ITextEdit::SelectionColor(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->SelectionColor());
    ::g::Fuse::Controls::Native::ITextEdit::ActionStyle(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->ActionStyle());
    ::g::Fuse::Controls::Native::ITextEdit::AutoCorrectHint(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->AutoCorrectHint());
    ::g::Fuse::Controls::Native::ITextEdit::AutoCapitalizationHint(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->AutoCapitalizationHint());
    ::g::Fuse::Controls::Native::ITextEdit::PlaceholderText(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->PlaceholderText());
    ::g::Fuse::Controls::Native::ITextEdit::PlaceholderColor(uInterface(tv, ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]), __this->PlaceholderColor());
}

// internal override sealed string get_RenderValue() :1311
void MobileTextEdit__get_RenderValue_fn(MobileTextEdit* __this, uString** __retval)
{
    return *__retval = NULL, void();
}

// public MobileTextEdit(bool multiline) [instance] :1294
void MobileTextEdit::ctor_8(bool multiline)
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", ".ctor(bool)");
    ctor_7(multiline);
    _isMultiline1 = multiline;
    MobileTextEdit__AndroidTemplate* androidAppearance = MobileTextEdit__AndroidTemplate::New2(this);
    MobileTextEdit__iOSTemplate* iosAppearance = MobileTextEdit__iOSTemplate::New2(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), androidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iosAppearance);
}

// private extern void DisableRenderToTexture() [instance] :1423
void MobileTextEdit::DisableRenderToTexture()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "DisableRenderToTexture()");

    if (_singelViewHost != NULL)
        uPtr(_singelViewHost)->RenderToTexture(1);
}

// private extern void EnabledRenderToTexture() [instance] :1434
void MobileTextEdit::EnabledRenderToTexture()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "EnabledRenderToTexture()");

    if (_singelViewHost != NULL)
    {
        uPtr(_singelViewHost)->RenderToTexture(0);
        uPtr(_singelViewHost)->InvalidateVisual();
        uPtr(_singelViewHost)->InvalidateRenderBounds();
    }
}

// private Fuse.Controls.Native.ITextEdit GetITextEdit() [instance] :1179
uObject* MobileTextEdit::GetITextEdit()
{
    return uAs<uObject*>(NativeView(), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]);
}

// private extern Fuse.Controls.Native.IViewHandleRenderer InstatiateRenderer() [instance] :1347
uObject* MobileTextEdit::InstatiateRenderer()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InstatiateRenderer()");
    return (uObject*)::g::Fuse::Controls::TextEditRenderer::New1();
}

// private extern Fuse.Controls.Native.ITextEdit InstatiateTextEdit() [instance] :1338
uObject* MobileTextEdit::InstatiateTextEdit()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InstatiateTextEdit()");
    return uAs<uObject*>(uPtr(FindTemplate(::STRINGS[0/*"AndroidAppe...*/]))->New1(), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]);
}

// private extern void InvalidateNativeViewHost() [instance] :1447
void MobileTextEdit::InvalidateNativeViewHost()
{
    uStackFrame __("Fuse.Controls.MobileTextEdit", "InvalidateNativeViewHost()");

    if (_singelViewHost != NULL)
    {
        uPtr(_singelViewHost)->InvalidateVisual();
        uPtr(_singelViewHost)->InvalidateLayout(2);
    }
}

// private Fuse.Controls.Native.ITextEdit get_NativeEdit() [instance] :1305
uObject* MobileTextEdit::NativeEdit()
{
    uObject* ind1 = _textEdit;
    return (ind1 != NULL) ? ind1 : uAs<uObject*>(NativeView(), ::TYPES[44/*Fuse.Controls.Native.ITextEdit*/]);
}

// public MobileTextEdit New(bool multiline) [static] :1294
MobileTextEdit* MobileTextEdit::New3(bool multiline)
{
    MobileTextEdit* obj2 = (MobileTextEdit*)uNew(MobileTextEdit_typeof());
    obj2->ctor_8(multiline);
    return obj2;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class MultiLayout :1125
// {
static void MultiLayout_build(uType* type)
{
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[47] = ::g::Fuse::Controls::Placeholder_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(13,
        ::g::Fuse::Elements::Element_typeof(), offsetof(::g::Fuse::Controls::MultiLayout, _layoutElement), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LayoutElement", NULL, (void*)MultiLayout__get_LayoutElement_fn, 0, false, ::g::Fuse::Elements::Element_typeof(), 0),
        new uFunction("set_LayoutElement", NULL, (void*)MultiLayout__set_LayoutElement_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)MultiLayout__New2_fn, 0, true, type, 0));
}

::g::Fuse::Node_type* MultiLayout_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Behavior_typeof();
    options.FieldCount = 14;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(MultiLayout);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.MultiLayout", options);
    type->fp_build_ = MultiLayout_build;
    type->fp_ctor_ = (void*)MultiLayout__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))MultiLayout__OnRooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated MultiLayout() :1125
void MultiLayout__ctor_3_fn(MultiLayout* __this)
{
    __this->ctor_3();
}

// private void ChangeLayout(Fuse.Visual layoutRoot) :1134
void MultiLayout__ChangeLayout_fn(MultiLayout* __this, ::g::Fuse::Visual* layoutRoot)
{
    __this->ChangeLayout(layoutRoot);
}

// public Fuse.Elements.Element get_LayoutElement() :1157
void MultiLayout__get_LayoutElement_fn(MultiLayout* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) :1161
void MultiLayout__set_LayoutElement_fn(MultiLayout* __this, ::g::Fuse::Elements::Element* value)
{
    __this->LayoutElement(value);
}

// public generated MultiLayout New() :1125
void MultiLayout__New2_fn(MultiLayout** __retval)
{
    *__retval = MultiLayout::New2();
}

// protected override sealed void OnRooted() :1127
void MultiLayout__OnRooted_fn(MultiLayout* __this)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "OnRooted()");
    ::g::Fuse::Node__OnRooted_fn(__this);
    __this->ChangeLayout(__this->_layoutElement);
}

// public generated MultiLayout() [instance] :1125
void MultiLayout::ctor_3()
{
    ctor_2();
}

// private void ChangeLayout(Fuse.Visual layoutRoot) [instance] :1134
void MultiLayout::ChangeLayout(::g::Fuse::Visual* layoutRoot)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "ChangeLayout(Fuse.Visual)");
    ::g::Fuse::Node* ret2;

    if (layoutRoot == NULL)
        return;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(layoutRoot)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); i++)
        if (uIs((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(layoutRoot)->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret2), ret2), __type))
            return;

    if (uIs(layoutRoot, ::TYPES[47/*Fuse.Controls.Placeholder*/]))
        uPtr(uCast< ::g::Fuse::Controls::Placeholder*>(layoutRoot, ::TYPES[47/*Fuse.Controls.Placeholder*/]))->AcquireTarget();

    for (int i1 = 0; i1 < uPtr(layoutRoot)->ZOrderChildCount(); i1++)
        ChangeLayout(uPtr(layoutRoot)->GetZOrderChild(i1));
}

// public Fuse.Elements.Element get_LayoutElement() [instance] :1157
::g::Fuse::Elements::Element* MultiLayout::LayoutElement()
{
    return _layoutElement;
}

// public void set_LayoutElement(Fuse.Elements.Element value) [instance] :1161
void MultiLayout::LayoutElement(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.MultiLayout", "set_LayoutElement(Fuse.Elements.Element)");

    if (_layoutElement != value)
    {
        _layoutElement = value;
        ChangeLayout(_layoutElement);
    }
}

// public generated MultiLayout New() [static] :1125
MultiLayout* MultiLayout::New2()
{
    MultiLayout* obj1 = (MultiLayout*)uNew(MultiLayout_typeof());
    obj1->ctor_3();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class MultiLayoutPanel :1216
// {
static void MultiLayoutPanel_build(uType* type)
{
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Controls::MultiLayout_typeof(), offsetof(::g::Fuse::Controls::MultiLayoutPanel, _multiLayout), 0);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LayoutElement", NULL, (void*)MultiLayoutPanel__get_LayoutElement_fn, 0, false, ::g::Fuse::Elements::Element_typeof(), 0),
        new uFunction("set_LayoutElement", NULL, (void*)MultiLayoutPanel__set_LayoutElement_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Element_typeof()),
        new uFunction(".ctor", NULL, (void*)MultiLayoutPanel__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* MultiLayoutPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(MultiLayoutPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.MultiLayoutPanel", options);
    type->fp_build_ = MultiLayoutPanel_build;
    type->fp_ctor_ = (void*)MultiLayoutPanel__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public MultiLayoutPanel() :1219
void MultiLayoutPanel__ctor_7_fn(MultiLayoutPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Elements.Element get_LayoutElement() :1226
void MultiLayoutPanel__get_LayoutElement_fn(MultiLayoutPanel* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) :1227
void MultiLayoutPanel__set_LayoutElement_fn(MultiLayoutPanel* __this, ::g::Fuse::Elements::Element* value)
{
    __this->LayoutElement(value);
}

// public MultiLayoutPanel New() :1219
void MultiLayoutPanel__New4_fn(MultiLayoutPanel** __retval)
{
    *__retval = MultiLayoutPanel::New4();
}

// public MultiLayoutPanel() [instance] :1219
void MultiLayoutPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", ".ctor()");
    _multiLayout = ::g::Fuse::Controls::MultiLayout::New2();
    ctor_6();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _multiLayout);
}

// public Fuse.Elements.Element get_LayoutElement() [instance] :1226
::g::Fuse::Elements::Element* MultiLayoutPanel::LayoutElement()
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", "get_LayoutElement()");
    return uPtr(_multiLayout)->LayoutElement();
}

// public void set_LayoutElement(Fuse.Elements.Element value) [instance] :1227
void MultiLayoutPanel::LayoutElement(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.MultiLayoutPanel", "set_LayoutElement(Fuse.Elements.Element)");
    uPtr(_multiLayout)->LayoutElement(value);
}

// public MultiLayoutPanel New() [static] :1219
MultiLayoutPanel* MultiLayoutPanel::New4()
{
    MultiLayoutPanel* obj1 = (MultiLayoutPanel*)uNew(MultiLayoutPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class NativeViewHost :1374
// {
static void NativeViewHost_build(uType* type)
{
    ::STRINGS[38] = uString::Const(" could not find an IProxyHost");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[39] = uString::Const("OnRooted");
    ::STRINGS[40] = uString::Const(" does not have an IProxyHost and will malfunction");
    ::TYPES[42] = ::g::Fuse::Controls::IProxyHost_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    ::TYPES[11] = ::g::Fuse::Elements::ITreeRenderer_typeof();
    ::TYPES[48] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL);
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[13] = ::g::Fuse::Controls::Control_typeof();
    ::TYPES[46] = ::g::Uno::IDisposable_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(NativeViewHost_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(NativeViewHost_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(NativeViewHost_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NativeViewHost_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(NativeViewHost_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NativeViewHost_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(NativeViewHost_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(NativeViewHost_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(NativeViewHost_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(NativeViewHost_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(NativeViewHost_type, interface14),
        ::TYPES[11/*Fuse.Elements.ITreeRenderer*/], offsetof(NativeViewHost_type, interface15),
        ::g::Fuse::Controls::Native::IOffscreenRendererHost_typeof(), offsetof(NativeViewHost_type, interface16));
    type->SetFields(96,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _draw), 0,
        ::g::Fuse::Controls::Native::NativeViewRenderer_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _glRenderer), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _isVisible), 0,
        ::TYPES[11/*Fuse.Elements.ITreeRenderer*/], offsetof(::g::Fuse::Controls::NativeViewHost, _nativeRenderer), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _offscreenEnabled), 0,
        ::TYPES[42/*Fuse.Controls.IProxyHost*/], offsetof(::g::Fuse::Controls::NativeViewHost, _proxyHost), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _renderToTexture), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _root), 0,
        ::TYPES[46/*Uno.IDisposable*/], offsetof(::g::Fuse::Controls::NativeViewHost, _toggeling), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NativeViewHost, _updateTransform), 0);
    type->Reflection.SetFunctions(4,
        new uFunction(".ctor", NULL, (void*)NativeViewHost__New3_fn, 0, true, type, 0),
        new uFunction(".ctor", NULL, (void*)NativeViewHost__New4_fn, 0, true, type, 1, NativeViewHost__InitialState_typeof()),
        new uFunction("get_RenderToTexture", NULL, (void*)NativeViewHost__get_RenderToTexture_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_RenderToTexture", NULL, (void*)NativeViewHost__set_RenderToTexture_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

NativeViewHost_type* NativeViewHost_typeof()
{
    static uSStrong<NativeViewHost_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 106;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(NativeViewHost);
    options.TypeSize = sizeof(NativeViewHost_type);
    type = (NativeViewHost_type*)uClassType::New("Fuse.Controls.NativeViewHost", options);
    type->fp_build_ = NativeViewHost_build;
    type->fp_ctor_ = (void*)NativeViewHost__New3_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))NativeViewHost__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))NativeViewHost__DrawWithChildren_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))NativeViewHost__OnInvalidateVisual_fn;
    type->fp_OnInvalidateWorldTransform = (void(*)(::g::Fuse::Visual*))NativeViewHost__OnInvalidateWorldTransform_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NativeViewHost__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NativeViewHost__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))NativeViewHost__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int*))NativeViewHost__get_VisualContext_fn;
    type->interface15.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererRootingStarted_fn;
    type->interface15.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererRooted_fn;
    type->interface15.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererUnrooted_fn;
    type->interface15.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))NativeViewHost__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface15.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))NativeViewHost__FuseElementsITreeRendererMeasure_fn;
    type->interface15.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface15.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface15.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))NativeViewHost__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface15.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface15.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))NativeViewHost__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface15.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Uno::Collections::List*))NativeViewHost__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface15.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererTransformChanged_fn;
    type->interface15.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))NativeViewHost__FuseElementsITreeRendererPlaced_fn;
    type->interface16.fp_get_RenderToTexture = (void(*)(uObject*, bool*))NativeViewHost__get_RenderToTexture_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public NativeViewHost() :1447
void NativeViewHost__ctor_6_fn(NativeViewHost* __this)
{
    __this->ctor_6();
}

// public NativeViewHost(Fuse.Controls.NativeViewHost.InitialState initialState) :1449
void NativeViewHost__ctor_7_fn(NativeViewHost* __this, int* initialState)
{
    __this->ctor_7(*initialState);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :1506
void NativeViewHost__CalcRenderBounds_fn(NativeViewHost* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret4;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret4), ret4);

    if (__this->_draw)
        b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    return *__retval = b, void();
}

// private float4x4 CalcTransform() :1695
void NativeViewHost__CalcTransform_fn(NativeViewHost* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->CalcTransform();
}

// private extern void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) :1652
void NativeViewHost__ClearRoot_fn(NativeViewHost* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->ClearRoot(viewHandle);
}

// private void DisableOffscreen() :1667
void NativeViewHost__DisableOffscreen_fn(NativeViewHost* __this)
{
    __this->DisableOffscreen();
}

// protected override sealed extern void DrawWithChildren(Fuse.DrawContext dc) :1493
void NativeViewHost__DrawWithChildren_fn(NativeViewHost* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "DrawWithChildren(Fuse.DrawContext)");

    if (!__this->IsInGraphicsContext())
        ::g::Fuse::Elements::Element__DrawWithChildren_fn(__this, dc);
    else if (__this->_draw && (__this->_glRenderer != NULL))
        uPtr(__this->_glRenderer)->Draw(__this->_root, uPtr(dc)->GetLocalToClipTransform(__this), ::g::Uno::Float2__New1(0.0f), __this->ActualSize(), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])));
}

// private void EnableOffscreen() :1658
void NativeViewHost__EnableOffscreen_fn(NativeViewHost* __this)
{
    __this->EnableOffscreen();
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :1553
void NativeViewHost__FuseElementsITreeRendererBackgroundChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    ::g::Fuse::Elements::ITreeRenderer::BackgroundChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, background);
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :1578
void NativeViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Elements::ITreeRenderer::ClipToBoundsChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :1580
void NativeViewHost__FuseElementsITreeRendererHitTestModeChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    ::g::Fuse::Elements::ITreeRenderer::HitTestModeChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :1574
void NativeViewHost__FuseElementsITreeRendererIsEnabledChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    ::g::Fuse::Elements::ITreeRenderer::IsEnabledChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :1558
void NativeViewHost__FuseElementsITreeRendererIsVisibleChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;

    if (e == __this)
    {
        __this->_isVisible = isVisible_;

        if (__this->_isVisible)
            __this->DisableOffscreen();
        else
            __this->EnableOffscreen();
    }
    else
        ::g::Fuse::Elements::ITreeRenderer::IsVisibleChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :1555
void NativeViewHost__FuseElementsITreeRendererMeasure_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    return *__retval = ::g::Fuse::Elements::ITreeRenderer::Measure(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, lp_, size), void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :1576
void NativeViewHost__FuseElementsITreeRendererOpacityChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;
    ::g::Fuse::Elements::ITreeRenderer::OpacityChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, opacity_);
}

// private extern void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :1593
void NativeViewHost__FuseElementsITreeRendererPlaced_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
    else
        ::g::Fuse::Elements::ITreeRenderer::Placed(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :1549
void NativeViewHost__FuseElementsITreeRendererRooted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Rooted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :1547
void NativeViewHost__FuseElementsITreeRendererRootingStarted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::RootingStarted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :1584
void NativeViewHost__FuseElementsITreeRendererTransformChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
    else
        ::g::Fuse::Elements::ITreeRenderer::TransformChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :1551
void NativeViewHost__FuseElementsITreeRendererUnrooted_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    ::g::Fuse::Elements::ITreeRenderer::Unrooted(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e);
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) :1582
void NativeViewHost__FuseElementsITreeRendererZOrderChanged_fn(NativeViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element,Uno.Collections.List<Fuse.Visual>)");
    ::g::Fuse::Elements::ITreeRenderer::ZOrderChanged(uInterface(uPtr(__this->_nativeRenderer), ::TYPES[11/*Fuse.Elements.ITreeRenderer*/]), e, zorder);
}

// private bool get_IsInGraphicsContext() :1531
void NativeViewHost__get_IsInGraphicsContext_fn(NativeViewHost* __this, bool* __retval)
{
    *__retval = __this->IsInGraphicsContext();
}

// public NativeViewHost New() :1447
void NativeViewHost__New3_fn(NativeViewHost** __retval)
{
    *__retval = NativeViewHost::New3();
}

// public NativeViewHost New(Fuse.Controls.NativeViewHost.InitialState initialState) :1449
void NativeViewHost__New4_fn(int* initialState, NativeViewHost** __retval)
{
    *__retval = NativeViewHost::New4(*initialState);
}

// protected override sealed extern void OnInvalidateVisual() :1485
void NativeViewHost__OnInvalidateVisual_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnInvalidateVisual()");
    ::g::Fuse::Elements::Element__OnInvalidateVisual_fn(__this);

    if (__this->_glRenderer != NULL)
        uPtr(__this->_glRenderer)->Invalidate();
}

// protected override sealed extern void OnInvalidateWorldTransform() :1723
void NativeViewHost__OnInvalidateWorldTransform_fn(NativeViewHost* __this)
{
    ::g::Fuse::Visual__OnInvalidateWorldTransform_fn(__this);

    if (__this->RenderToTexture() || !__this->IsInGraphicsContext())
        return;

    __this->PostUpdateTransform();
}

// protected override sealed extern void OnRooted() :1621
void NativeViewHost__OnRooted_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnRooted()");

    if (__this->IsInGraphicsContext())
    {
        __this->_glRenderer = ::g::Fuse::Controls::Native::NativeViewRenderer::New1();
        __this->_root = ::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup();
        __this->_proxyHost = ::g::Fuse::Controls::IProxyHostExtensions::FindProxyHost(__this);

        if (__this->_proxyHost == NULL)
            ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, ::STRINGS[38/*" could not ...*/]), NULL, ::STRINGS[21/*"/Users/medb...*/], 1630, ::STRINGS[39/*"OnRooted"*/]);

        __this->_nativeRenderer = (uObject*)::g::Fuse::Controls::TreeRenderer::New1(uDelegate::New(::TYPES[48/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)NativeViewHost__SetRoot_fn, __this), uDelegate::New(::TYPES[48/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)NativeViewHost__ClearRoot_fn, __this));

        if (__this->_proxyHost != NULL)
        {
            if (!__this->_offscreenEnabled)
                ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(__this->_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), __this->_root);
        }
        else
            ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition(__this, ::STRINGS[40/*" does not h...*/]), NULL, ::STRINGS[21/*"/Users/medb...*/], 1640, ::STRINGS[39/*"OnRooted"*/]);
    }

    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
}

// protected override sealed extern void OnUnrooted() :1703
void NativeViewHost__OnUnrooted_fn(NativeViewHost* __this)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "OnUnrooted()");

    if ((__this->IsInGraphicsContext() && (__this->_proxyHost != NULL)) && !__this->_offscreenEnabled)
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(__this->_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), __this->_root);

    if (__this->IsInGraphicsContext())
        uPtr(__this->_glRenderer)->Dispose();

    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
    __this->_root = NULL;
    __this->_nativeRenderer = NULL;
    __this->_proxyHost = NULL;
    __this->_glRenderer = NULL;
}

// private extern void PostUpdateTransform() :1733
void NativeViewHost__PostUpdateTransform_fn(NativeViewHost* __this)
{
    __this->PostUpdateTransform();
}

// public bool get_RenderToTexture() :1467
void NativeViewHost__get_RenderToTexture_fn(NativeViewHost* __this, bool* __retval)
{
    *__retval = __this->RenderToTexture();
}

// public void set_RenderToTexture(bool value) :1468
void NativeViewHost__set_RenderToTexture_fn(NativeViewHost* __this, bool* value)
{
    __this->RenderToTexture(*value);
}

// private extern void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) :1646
void NativeViewHost__SetRoot_fn(NativeViewHost* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->SetRoot(viewHandle);
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :1536
void NativeViewHost__get_TreeRenderer_fn(NativeViewHost* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "get_TreeRenderer()");
    uObject* ret6;
    return *__retval = __this->IsInGraphicsContext() ? (uObject*)__this : (::g::Fuse::Elements::Element__get_TreeRenderer_fn(__this, &ret6), ret6), void();
}

// private extern void UpdateHostViewTransform() :1678
void NativeViewHost__UpdateHostViewTransform_fn(NativeViewHost* __this)
{
    __this->UpdateHostViewTransform();
}

// public override sealed Fuse.VisualContext get_VisualContext() :1521
void NativeViewHost__get_VisualContext_fn(NativeViewHost* __this, int* __retval)
{
    return *__retval = 2, void();
}

// public NativeViewHost() [instance] :1447
void NativeViewHost::ctor_6()
{
    _isVisible = true;
    ctor_7(1);
}

// public NativeViewHost(Fuse.Controls.NativeViewHost.InitialState initialState) [instance] :1449
void NativeViewHost::ctor_7(int initialState)
{
    _isVisible = true;
    ctor_5();
    bool renderToTexture = initialState == 0;
    _draw = renderToTexture;
    _renderToTexture = renderToTexture;
    _offscreenEnabled = renderToTexture;
}

// private float4x4 CalcTransform() [instance] :1695
::g::Uno::Float4x4 NativeViewHost::CalcTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "CalcTransform()");
    return IsInGraphicsContext() ? ::g::Uno::Matrix::Mul8(::g::Uno::Matrix::Invert2(::g::Fuse::Controls::IProxyHost::LocalTransform(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]))), WorldTransform()) : LocalTransform();
}

// private extern void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :1652
void NativeViewHost::ClearRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "ClearRoot(Fuse.Controls.Native.ViewHandle)");
    uPtr(_root)->RemoveChild(viewHandle);
}

// private void DisableOffscreen() [instance] :1667
void NativeViewHost::DisableOffscreen()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "DisableOffscreen()");

    if (_offscreenEnabled && _isVisible)
    {
        ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), _root);
        _offscreenEnabled = false;
    }
}

// private void EnableOffscreen() [instance] :1658
void NativeViewHost::EnableOffscreen()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "EnableOffscreen()");

    if (!_offscreenEnabled && !_isVisible)
    {
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), _root);
        _offscreenEnabled = true;
    }
}

// private bool get_IsInGraphicsContext() [instance] :1531
bool NativeViewHost::IsInGraphicsContext()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "get_IsInGraphicsContext()");
    int ret5;
    return (::g::Fuse::Visual__get_VisualContext_fn(this, &ret5), ret5) == 1;
}

// private extern void PostUpdateTransform() [instance] :1733
void NativeViewHost::PostUpdateTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "PostUpdateTransform()");

    if (!_updateTransform)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)NativeViewHost__UpdateHostViewTransform_fn, this), 1, ::g::Fuse::LayoutPriority::Post());
        _updateTransform = true;
    }
}

// public bool get_RenderToTexture() [instance] :1467
bool NativeViewHost::RenderToTexture()
{
    return _renderToTexture;
}

// public void set_RenderToTexture(bool value) [instance] :1468
void NativeViewHost::RenderToTexture(bool value)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "set_RenderToTexture(bool)");

    if (_renderToTexture == value)
        return;

    _renderToTexture = value;

    if (_toggeling != NULL)
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_toggeling), ::TYPES[46/*Uno.IDisposable*/]));

    if (_renderToTexture)
        _toggeling = (uObject*)NativeViewHost__Enable::New1(this);
    else
        _toggeling = (uObject*)NativeViewHost__Disable::New1(this);
}

// private extern void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :1646
void NativeViewHost::SetRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "SetRoot(Fuse.Controls.Native.ViewHandle)");
    uPtr(_root)->InsertChild(viewHandle);
}

// private extern void UpdateHostViewTransform() [instance] :1678
void NativeViewHost::UpdateHostViewTransform()
{
    uStackFrame __("Fuse.Controls.NativeViewHost", "UpdateHostViewTransform()");
    _updateTransform = false;

    if (_root == NULL)
        return;

    ::g::Uno::Float4x4 transform = CalcTransform();
    ::g::Uno::Float2 size = ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = Parent();

    if (uIs(p, ::TYPES[13/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[13/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(_root)->UpdateViewRect(transform, size, density);
}

// public NativeViewHost New() [static] :1447
NativeViewHost* NativeViewHost::New3()
{
    NativeViewHost* obj2 = (NativeViewHost*)uNew(NativeViewHost_typeof());
    obj2->ctor_6();
    return obj2;
}

// public NativeViewHost New(Fuse.Controls.NativeViewHost.InitialState initialState) [static] :1449
NativeViewHost* NativeViewHost::New4(int initialState)
{
    NativeViewHost* obj3 = (NativeViewHost*)uNew(NativeViewHost_typeof());
    obj3->ctor_7(initialState);
    return obj3;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class NavigationBar :255
// {
static void NavigationBar_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)NavigationBar__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* NavigationBar_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 103;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(NavigationBar);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.NavigationBar", options);
    type->fp_build_ = NavigationBar_build;
    type->fp_ctor_ = (void*)NavigationBar__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated NavigationBar() :255
void NavigationBar__ctor_7_fn(NavigationBar* __this)
{
    __this->ctor_7();
}

// public generated NavigationBar New() :255
void NavigationBar__New4_fn(NavigationBar** __retval)
{
    *__retval = NavigationBar::New4();
}

// public generated NavigationBar() [instance] :255
void NavigationBar::ctor_7()
{
    ctor_6();
}

// public generated NavigationBar New() [static] :255
NavigationBar* NavigationBar::New4()
{
    NavigationBar* obj1 = (NavigationBar*)uNew(NavigationBar_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public interfacemodifiers class NavigationControl :314
// {
// static NavigationControl() :316
static void NavigationControl__cctor_4_fn(uType* __type)
{
    NavigationControl::_pageDataProperty_ = ::g::Fuse::Properties::CreateHandle();
    NavigationControl::_propTransition_ = ::g::Fuse::Properties::CreateHandle();
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[16/*Fuse.Scripting.ScriptMember[]*/], 2, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[49/*Fuse.Scripting.ScriptMethod<Fuse.Controls.NavigationControl>*/], ::STRINGS[41/*"gotoPath"*/], uDelegate::New(::TYPES[50/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.NavigationControl, object[]>*/], (void*)NavigationControl__gotoPath_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[49/*Fuse.Scripting.ScriptMethod<Fuse.Controls.NavigationControl>*/], ::STRINGS[42/*"seekToPath"*/], uDelegate::New(::TYPES[50/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.NavigationControl, object[]>*/], (void*)NavigationControl__seekToPath_fn), 2)));
}

static void NavigationControl_build(uType* type)
{
    ::STRINGS[41] = uString::Const("gotoPath");
    ::STRINGS[42] = uString::Const("seekToPath");
    ::STRINGS[43] = uString::Const("NavigationControl.");
    ::STRINGS[44] = uString::Const(" requires 1 or 2 arguments");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[45] = uString::Const("alterPath");
    ::STRINGS[46] = uString::Const("Must be an IRouterOutlet");
    ::STRINGS[23] = uString::Const("");
    ::TYPES[15] = ::g::Uno::Type_typeof();
    ::TYPES[16] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[49] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[50] = ::g::Uno::Action3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), NULL);
    ::TYPES[51] = ::g::Fuse::Navigation::IRouterOutlet_typeof();
    ::TYPES[52] = ::g::Fuse::Marshal_typeof()->MakeMethod(0/*ToType<string>*/, ::g::Uno::String_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[53] = NavigationControl__PageData_typeof();
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[54] = ::g::Fuse::Navigation::NavigationHandler_typeof();
    ::TYPES[55] = ::g::Fuse::Visual_typeof()->MakeMethod(3/*FirstChild<Fuse.Triggers.Transition>*/, ::g::Fuse::Triggers::Transition_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(NavigationControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(NavigationControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(NavigationControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(NavigationControl_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(NavigationControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(NavigationControl_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(NavigationControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(NavigationControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(NavigationControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(NavigationControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(NavigationControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(NavigationControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(NavigationControl_type, interface14),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(NavigationControl_type, interface15),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(NavigationControl_type, interface16));
    type->SetFields(103,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NavigationControl, _isRouterOutlet), 0,
        ::g::Fuse::Navigation::VisualNavigation_typeof(), offsetof(::g::Fuse::Controls::NavigationControl, _navigation), 0,
        ::g::Fuse::Controls::NavigationControlTransition_typeof(), offsetof(::g::Fuse::Controls::NavigationControl, _transition), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::NavigationControl::_pageDataProperty_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::NavigationControl::_propTransition_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(26,
        new uFunction("get_Active", NULL, (void*)NavigationControl__get_Active_fn, 0, false, ::g::Fuse::Visual_typeof(), 0),
        new uFunction("set_Active", NULL, (void*)NavigationControl__set_Active_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("add_ActivePageChanged", NULL, (void*)NavigationControl__add_ActivePageChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::ActivePageChangedHandler_typeof()),
        new uFunction("remove_ActivePageChanged", NULL, (void*)NavigationControl__remove_ActivePageChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::ActivePageChangedHandler_typeof()),
        new uFunction("get_CanGoBack", NULL, (void*)NavigationControl__get_CanGoBack_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanGoForward", NULL, (void*)NavigationControl__get_CanGoForward_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("GetTransition", NULL, (void*)NavigationControl__GetTransition_fn, 0, true, ::g::Fuse::Controls::NavigationControlTransition_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("GoBack", NULL, (void*)NavigationControl__GoBack_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("GoForward", NULL, (void*)NavigationControl__GoForward_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("Goto", NULL, (void*)NavigationControl__Goto_fn, 0, false, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Navigation::NavigationGotoMode_typeof()),
        new uFunction("add_HistoryChanged", NULL, (void*)NavigationControl__add_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::HistoryChangedHandler_typeof()),
        new uFunction("remove_HistoryChanged", NULL, (void*)NavigationControl__remove_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::HistoryChangedHandler_typeof()),
        new uFunction("get_IsRouterOutlet", NULL, (void*)NavigationControl__get_IsRouterOutlet_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsRouterOutlet", NULL, (void*)NavigationControl__set_IsRouterOutlet_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("add_Navigated", NULL, (void*)NavigationControl__add_Navigated_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigatedHandler_typeof()),
        new uFunction("remove_Navigated", NULL, (void*)NavigationControl__remove_Navigated_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigatedHandler_typeof()),
        new uFunction("add_PageCountChanged", NULL, (void*)NavigationControl__add_PageCountChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationPageCountHandler_typeof()),
        new uFunction("remove_PageCountChanged", NULL, (void*)NavigationControl__remove_PageCountChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::NavigationPageCountHandler_typeof()),
        new uFunction("add_PageProgressChanged", NULL, (void*)NavigationControl__add_PageProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[54/*Fuse.Navigation.NavigationHandler*/]),
        new uFunction("remove_PageProgressChanged", NULL, (void*)NavigationControl__remove_PageProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[54/*Fuse.Navigation.NavigationHandler*/]),
        new uFunction("SetTransition", NULL, (void*)NavigationControl__SetTransition_fn, 0, true, uVoid_typeof(), 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::NavigationControlTransition_typeof()),
        new uFunction("add_StateChanged", NULL, (void*)NavigationControl__add_StateChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Fuse::Navigation::NavigationState_typeof(), NULL)),
        new uFunction("remove_StateChanged", NULL, (void*)NavigationControl__remove_StateChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Fuse::Navigation::NavigationState_typeof(), NULL)),
        new uFunction("Toggle", NULL, (void*)NavigationControl__Toggle_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("get_Transition", NULL, (void*)NavigationControl__get_Transition_fn, 0, false, ::g::Fuse::Controls::NavigationControlTransition_typeof(), 0),
        new uFunction("set_Transition", NULL, (void*)NavigationControl__set_Transition_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlTransition_typeof()));
}

NavigationControl_type* NavigationControl_typeof()
{
    static uSStrong<NavigationControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(NavigationControl);
    options.TypeSize = sizeof(NavigationControl_type);
    type = (NavigationControl_type*)uClassType::New("Fuse.Controls.NavigationControl", options);
    type->fp_build_ = NavigationControl_build;
    type->fp_cctor_ = NavigationControl__cctor_4_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))NavigationControl__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))NavigationControl__OnChildRemoved_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NavigationControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NavigationControl__OnUnrooted_fn;
    type->fp_UpdateInteraction = NavigationControl__UpdateInteraction_fn;
    type->fp_UpdateProgress = NavigationControl__UpdateProgress_fn;
    type->interface15.fp_GetPage = (void(*)(uObject*, int*, ::g::Fuse::Visual**))NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface15.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface15.fp_get_PageCount = (void(*)(uObject*, int*))NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface15.fp_get_PageProgress = (void(*)(uObject*, double*))NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface15.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface15.fp_get_State = (void(*)(uObject*, int*))NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface15.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int*))NavigationControl__Goto_fn;
    type->interface15.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))NavigationControl__Toggle_fn;
    type->interface15.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_PageCountChanged_fn;
    type->interface15.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_PageCountChanged_fn;
    type->interface15.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_PageProgressChanged_fn;
    type->interface15.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_PageProgressChanged_fn;
    type->interface15.fp_add_Navigated = (void(*)(uObject*, uDelegate*))NavigationControl__add_Navigated_fn;
    type->interface15.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))NavigationControl__remove_Navigated_fn;
    type->interface15.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_ActivePageChanged_fn;
    type->interface15.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_ActivePageChanged_fn;
    type->interface15.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_StateChanged_fn;
    type->interface15.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_StateChanged_fn;
    type->interface16.fp_GoForward = (void(*)(uObject*))NavigationControl__GoForward_fn;
    type->interface16.fp_GoBack = (void(*)(uObject*))NavigationControl__GoBack_fn;
    type->interface16.fp_get_CanGoBack = (void(*)(uObject*, bool*))NavigationControl__get_CanGoBack_fn;
    type->interface16.fp_get_CanGoForward = (void(*)(uObject*, bool*))NavigationControl__get_CanGoForward_fn;
    type->interface16.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))NavigationControl__add_HistoryChanged_fn;
    type->interface16.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))NavigationControl__remove_HistoryChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// internal NavigationControl() :435
void NavigationControl__ctor_7_fn(NavigationControl* __this)
{
    __this->ctor_7();
}

// public Fuse.Visual get_Active() :475
void NavigationControl__get_Active_fn(NavigationControl* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->Active();
}

// public void set_Active(Fuse.Visual value) :476
void NavigationControl__set_Active_fn(NavigationControl* __this, ::g::Fuse::Visual* value)
{
    __this->Active(value);
}

// public void add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) :747
void NavigationControl__add_ActivePageChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_ActivePageChanged(value);
}

// public void remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) :748
void NavigationControl__remove_ActivePageChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_ActivePageChanged(value);
}

// private static void alterPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args, string opName, Fuse.Navigation.NavigationGotoMode gotoMode) :351
void NavigationControl__alterPath_fn(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args, uString* opName, int* gotoMode)
{
    NavigationControl::alterPath(c, nav, args, opName, *gotoMode);
}

// public bool get_CanGoBack() :755
void NavigationControl__get_CanGoBack_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :757
void NavigationControl__get_CanGoForward_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// private void CleanupTriggers(Fuse.Elements.Element page, Fuse.Controls.NavigationControl.PageData data) :560
void NavigationControl__CleanupTriggers_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* page, NavigationControl__PageData* data)
{
    __this->CleanupTriggers(page, data);
}

// public Fuse.Visual Fuse.Navigation.INavigation.get_ActivePage() :707
void NavigationControl__FuseNavigationINavigationget_ActivePage_fn(NavigationControl* __this, ::g::Fuse::Visual** __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_ActivePage()");
    return *__retval = uPtr(__this->Navigation())->ActivePage(), void();
}

// public Fuse.Visual Fuse.Navigation.INavigation.GetPage(int index) :705
void NavigationControl__FuseNavigationINavigationGetPage_fn(NavigationControl* __this, int* index, ::g::Fuse::Visual** __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.GetPage(int)");
    int index_ = *index;
    return *__retval = uPtr(__this->Navigation())->GetPage(index_), void();
}

// public Fuse.Navigation.NavigationPageState Fuse.Navigation.INavigation.GetPageState(Fuse.Visual page) :709
void NavigationControl__FuseNavigationINavigationGetPageState_fn(NavigationControl* __this, ::g::Fuse::Visual* page, ::g::Fuse::Navigation::NavigationPageState* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.GetPageState(Fuse.Visual)");
    return *__retval = uPtr(__this->Navigation())->GetPageState(page), void();
}

// public int Fuse.Navigation.INavigation.get_PageCount() :701
void NavigationControl__FuseNavigationINavigationget_PageCount_fn(NavigationControl* __this, int* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_PageCount()");
    return *__retval = uPtr(__this->Navigation())->PageCount(), void();
}

// public double Fuse.Navigation.INavigation.get_PageProgress() :703
void NavigationControl__FuseNavigationINavigationget_PageProgress_fn(NavigationControl* __this, double* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_PageProgress()");
    return *__retval = uPtr(__this->Navigation())->PageProgress(), void();
}

// public Fuse.Navigation.NavigationState Fuse.Navigation.INavigation.get_State() :711
void NavigationControl__FuseNavigationINavigationget_State_fn(NavigationControl* __this, int* __retval)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Fuse.Navigation.INavigation.get_State()");
    return *__retval = uPtr(__this->Navigation())->State(), void();
}

// internal static Fuse.Controls.NavigationControl.PageData GetPageData(Fuse.Visual elm, [bool create]) :657
void NavigationControl__GetPageData_fn(::g::Fuse::Visual* elm, bool* create, NavigationControl__PageData** __retval)
{
    *__retval = NavigationControl::GetPageData(elm, *create);
}

// public static Fuse.Controls.NavigationControlTransition GetTransition(Fuse.Visual elm) :679
void NavigationControl__GetTransition_fn(::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = NavigationControl::GetTransition(elm);
}

// public void GoBack() :753
void NavigationControl__GoBack_fn(NavigationControl* __this)
{
    __this->GoBack();
}

// public void GoForward() :751
void NavigationControl__GoForward_fn(NavigationControl* __this)
{
    __this->GoForward();
}

// public void Goto(Fuse.Visual node, Fuse.Navigation.NavigationGotoMode mode) :759
void NavigationControl__Goto_fn(NavigationControl* __this, ::g::Fuse::Visual* node, int* mode)
{
    __this->Goto(node, *mode);
}

// private static void gotoPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args) :332
void NavigationControl__gotoPath_fn(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args)
{
    NavigationControl::gotoPath(c, nav, args);
}

// public void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :741
void NavigationControl__add_HistoryChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :742
void NavigationControl__remove_HistoryChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// public bool get_IsRouterOutlet() :621
void NavigationControl__get_IsRouterOutlet_fn(NavigationControl* __this, bool* __retval)
{
    *__retval = __this->IsRouterOutlet();
}

// public void set_IsRouterOutlet(bool value) :622
void NavigationControl__set_IsRouterOutlet_fn(NavigationControl* __this, bool* value)
{
    __this->IsRouterOutlet(*value);
}

// public void add_Navigated(Fuse.Navigation.NavigatedHandler value) :735
void NavigationControl__add_Navigated_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_Navigated(value);
}

// public void remove_Navigated(Fuse.Navigation.NavigatedHandler value) :736
void NavigationControl__remove_Navigated_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_Navigated(value);
}

// internal Fuse.Navigation.VisualNavigation get_Navigation() :467
void NavigationControl__get_Navigation_fn(NavigationControl* __this, ::g::Fuse::Navigation::VisualNavigation** __retval)
{
    *__retval = __this->Navigation();
}

// protected override sealed void OnChildAdded(Fuse.Node n) :479
void NavigationControl__OnChildAdded_fn(NavigationControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Elements::Element* v = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[10/*Fuse.Elements.Element*/]);

    if (v != NULL)
        __this->UpdateChild(v);

    ::g::Fuse::Controls::LayoutControl__OnChildAdded_fn(__this, n);
}

// protected override sealed void OnChildRemoved(Fuse.Node n) :584
void NavigationControl__OnChildRemoved_fn(NavigationControl* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Elements::Element* pc = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[10/*Fuse.Elements.Element*/]);

    if (pc != NULL)
    {
        NavigationControl__PageData* pd = NavigationControl::GetPageData(pc, false);

        if (pd != NULL)
            __this->CleanupTriggers(pc, pd);
    }

    ::g::Fuse::Controls::LayoutControl__OnChildRemoved_fn(__this, n);
}

// private void OnPageProgressChanged(object page, Fuse.Navigation.NavigationArgs args) :599
void NavigationControl__OnPageProgressChanged_fn(NavigationControl* __this, uObject* page, ::g::Fuse::Navigation::NavigationArgs* args)
{
    __this->OnPageProgressChanged(page, args);
}

// protected override void OnRooted() :487
void NavigationControl__OnRooted_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnRooted()");
    ::g::Fuse::Node* ret6;
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->UpdateInteraction();

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Elements::Element* c = uAs< ::g::Fuse::Elements::Element*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(__this->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret6), ret6), ::TYPES[10/*Fuse.Elements.Element*/]);

        if (c != NULL)
            __this->UpdateChild(c);
    }

    uPtr(__this->Navigation())->add_PageProgressChanged(uDelegate::New(::TYPES[54/*Fuse.Navigation.NavigationHandler*/], (void*)NavigationControl__OnPageProgressChanged_fn, __this));
}

// protected override void OnUnrooted() :542
void NavigationControl__OnUnrooted_fn(NavigationControl* __this)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnUnrooted()");
    ::g::Fuse::Node* ret7;
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
    uPtr(__this->Navigation())->remove_PageProgressChanged(uDelegate::New(::TYPES[54/*Fuse.Navigation.NavigationHandler*/], (void*)NavigationControl__OnPageProgressChanged_fn, __this));

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Elements::Element* c = uAs< ::g::Fuse::Elements::Element*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(__this->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret7), ret7), ::TYPES[10/*Fuse.Elements.Element*/]);

        if (c == NULL)
            continue;

        NavigationControl__PageData* pd = NavigationControl::GetPageData(c, false);

        if (pd == NULL)
            continue;

        __this->CleanupTriggers(c, pd);
    }
}

// public void add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) :716
void NavigationControl__add_PageCountChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_PageCountChanged(value);
}

// public void remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) :717
void NavigationControl__remove_PageCountChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_PageCountChanged(value);
}

// public void add_PageProgressChanged(Fuse.Navigation.NavigationHandler value) :722
void NavigationControl__add_PageProgressChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_PageProgressChanged(value);
}

// public void remove_PageProgressChanged(Fuse.Navigation.NavigationHandler value) :723
void NavigationControl__remove_PageProgressChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_PageProgressChanged(value);
}

// protected Fuse.Controls.NavigationControlTransition PageTransition(Fuse.Visual elm) :687
void NavigationControl__PageTransition_fn(NavigationControl* __this, ::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = __this->PageTransition(elm);
}

// protected Fuse.Navigation.OutletType get_RouterOutletType() :632
void NavigationControl__get_RouterOutletType_fn(NavigationControl* __this, int* __retval)
{
    *__retval = __this->RouterOutletType();
}

// private static void seekToPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args) :346
void NavigationControl__seekToPath_fn(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args)
{
    NavigationControl::seekToPath(c, nav, args);
}

// internal void SetNavigation(Fuse.Navigation.VisualNavigation nav) :441
void NavigationControl__SetNavigation_fn(NavigationControl* __this, ::g::Fuse::Navigation::VisualNavigation* nav)
{
    __this->SetNavigation(nav);
}

// public static void SetTransition(Fuse.Visual elm, Fuse.Controls.NavigationControlTransition value) :673
void NavigationControl__SetTransition_fn(::g::Fuse::Visual* elm, int* value)
{
    NavigationControl::SetTransition(elm, *value);
}

// public void add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) :728
void NavigationControl__add_StateChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->add_StateChanged(value);
}

// public void remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) :729
void NavigationControl__remove_StateChanged_fn(NavigationControl* __this, uDelegate* value)
{
    __this->remove_StateChanged(value);
}

// public void Toggle(Fuse.Visual node) :761
void NavigationControl__Toggle_fn(NavigationControl* __this, ::g::Fuse::Visual* node)
{
    __this->Toggle(node);
}

// public Fuse.Controls.NavigationControlTransition get_Transition() :454
void NavigationControl__get_Transition_fn(NavigationControl* __this, int* __retval)
{
    *__retval = __this->Transition();
}

// public void set_Transition(Fuse.Controls.NavigationControlTransition value) :455
void NavigationControl__set_Transition_fn(NavigationControl* __this, int* value)
{
    __this->Transition(*value);
}

// private void UpdateChild(Fuse.Elements.Element c) :508
void NavigationControl__UpdateChild_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* c)
{
    __this->UpdateChild(c);
}

// protected virtual void UpdateInteraction() :506
void NavigationControl__UpdateInteraction_fn(NavigationControl* __this)
{
}

// protected virtual void UpdateProgress(Fuse.Elements.Element page, Fuse.Navigation.NavigationPageState state, Fuse.Controls.NavigationControl.PageData pd) :611
void NavigationControl__UpdateProgress_fn(NavigationControl* __this, ::g::Fuse::Elements::Element* page, ::g::Fuse::Navigation::NavigationPageState* state, NavigationControl__PageData* pd)
{
}

uSStrong< ::g::Fuse::PropertyHandle*> NavigationControl::_pageDataProperty_;
uSStrong< ::g::Fuse::PropertyHandle*> NavigationControl::_propTransition_;

// internal NavigationControl() [instance] :435
void NavigationControl::ctor_7()
{
    uStackFrame __("Fuse.Controls.NavigationControl", ".ctor()");
    _transition = 2;
    _isRouterOutlet = true;
    ctor_6();
    ClipToBounds(true);
}

// public Fuse.Visual get_Active() [instance] :475
::g::Fuse::Visual* NavigationControl::Active()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_Active()");
    return uPtr(_navigation)->Active();
}

// public void set_Active(Fuse.Visual value) [instance] :476
void NavigationControl::Active(::g::Fuse::Visual* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "set_Active(Fuse.Visual)");
    uPtr(_navigation)->Active(value);
}

// public void add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) [instance] :747
void NavigationControl::add_ActivePageChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler)");
    uPtr(Navigation())->add_ActivePageChanged(value);
}

// public void remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler value) [instance] :748
void NavigationControl::remove_ActivePageChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_ActivePageChanged(Fuse.Navigation.ActivePageChangedHandler)");
    uPtr(Navigation())->remove_ActivePageChanged(value);
}

// public bool get_CanGoBack() [instance] :755
bool NavigationControl::CanGoBack()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_CanGoBack()");
    return uPtr(Navigation())->CanGoBack();
}

// public bool get_CanGoForward() [instance] :757
bool NavigationControl::CanGoForward()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "get_CanGoForward()");
    return uPtr(Navigation())->CanGoForward();
}

// private void CleanupTriggers(Fuse.Elements.Element page, Fuse.Controls.NavigationControl.PageData data) [instance] :560
void NavigationControl::CleanupTriggers(::g::Fuse::Elements::Element* page, NavigationControl__PageData* data)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "CleanupTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.PageData)");
    bool ret2;
    bool ret3;
    bool ret4;
    bool ret5;

    if (uPtr(data)->Enter != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Enter, &ret2);
        data->Enter = NULL;
    }

    if (uPtr(data)->Exit != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Exit, &ret3);
        data->Exit = NULL;
    }

    if (uPtr(data)->Inactive != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Inactive, &ret4);
        data->Inactive = NULL;
    }

    if (uPtr(data)->Removing != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(page)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(data)->Removing, &ret5);
        data->Removing = NULL;
    }
}

// public void GoBack() [instance] :753
void NavigationControl::GoBack()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GoBack()");
    uPtr(Navigation())->GoBack();
}

// public void GoForward() [instance] :751
void NavigationControl::GoForward()
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GoForward()");
    uPtr(Navigation())->GoForward();
}

// public void Goto(Fuse.Visual node, Fuse.Navigation.NavigationGotoMode mode) [instance] :759
void NavigationControl::Goto(::g::Fuse::Visual* node, int mode)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Goto(Fuse.Visual,Fuse.Navigation.NavigationGotoMode)");
    uPtr(Navigation())->Goto(node, mode);
}

// public void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :741
void NavigationControl::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    uPtr(Navigation())->add_HistoryChanged(value);
}

// public void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :742
void NavigationControl::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    uPtr(Navigation())->remove_HistoryChanged(value);
}

// public bool get_IsRouterOutlet() [instance] :621
bool NavigationControl::IsRouterOutlet()
{
    return _isRouterOutlet;
}

// public void set_IsRouterOutlet(bool value) [instance] :622
void NavigationControl::IsRouterOutlet(bool value)
{
    _isRouterOutlet = value;
}

// public void add_Navigated(Fuse.Navigation.NavigatedHandler value) [instance] :735
void NavigationControl::add_Navigated(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_Navigated(Fuse.Navigation.NavigatedHandler)");
    uPtr(Navigation())->add_Navigated(value);
}

// public void remove_Navigated(Fuse.Navigation.NavigatedHandler value) [instance] :736
void NavigationControl::remove_Navigated(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_Navigated(Fuse.Navigation.NavigatedHandler)");
    uPtr(Navigation())->remove_Navigated(value);
}

// internal Fuse.Navigation.VisualNavigation get_Navigation() [instance] :467
::g::Fuse::Navigation::VisualNavigation* NavigationControl::Navigation()
{
    return _navigation;
}

// private void OnPageProgressChanged(object page, Fuse.Navigation.NavigationArgs args) [instance] :599
void NavigationControl::OnPageProgressChanged(uObject* page, ::g::Fuse::Navigation::NavigationArgs* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "OnPageProgressChanged(object,Fuse.Navigation.NavigationArgs)");

    for (int i = 0; i < uPtr(Navigation())->PageCount(); ++i)
    {
        ::g::Fuse::Elements::Element* n = uAs< ::g::Fuse::Elements::Element*>(uPtr(Navigation())->GetPage(i), ::TYPES[10/*Fuse.Elements.Element*/]);

        if (n == NULL)
            return;

        UpdateProgress(n, uPtr(Navigation())->GetPageState(n), NavigationControl::GetPageData(n, true));
    }
}

// public void add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) [instance] :716
void NavigationControl::add_PageCountChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler)");
    uPtr(Navigation())->add_PageCountChanged(value);
}

// public void remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler value) [instance] :717
void NavigationControl::remove_PageCountChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_PageCountChanged(Fuse.Navigation.NavigationPageCountHandler)");
    uPtr(Navigation())->remove_PageCountChanged(value);
}

// public void add_PageProgressChanged(Fuse.Navigation.NavigationHandler value) [instance] :722
void NavigationControl::add_PageProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_PageProgressChanged(Fuse.Navigation.NavigationHandler)");
    uPtr(Navigation())->add_PageProgressChanged(value);
}

// public void remove_PageProgressChanged(Fuse.Navigation.NavigationHandler value) [instance] :723
void NavigationControl::remove_PageProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_PageProgressChanged(Fuse.Navigation.NavigationHandler)");
    uPtr(Navigation())->remove_PageProgressChanged(value);
}

// protected Fuse.Controls.NavigationControlTransition PageTransition(Fuse.Visual elm) [instance] :687
int NavigationControl::PageTransition(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "PageTransition(Fuse.Visual)");
    int t = NavigationControl::GetTransition(elm);

    if (t != 0)
        return t;

    if (((::g::Fuse::Triggers::Transition*)uPtr(elm)->FirstChild(::TYPES[55/*Fuse.Visual.FirstChild<Fuse.Triggers.Transition>*/])) != NULL)
        return 1;

    return Transition();
}

// protected Fuse.Navigation.OutletType get_RouterOutletType() [instance] :632
int NavigationControl::RouterOutletType()
{
    if (!IsRouterOutlet())
        return 0;

    return 2;
}

// internal void SetNavigation(Fuse.Navigation.VisualNavigation nav) [instance] :441
void NavigationControl::SetNavigation(::g::Fuse::Navigation::VisualNavigation* nav)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "SetNavigation(Fuse.Navigation.VisualNavigation)");
    _navigation = nav;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigation);
}

// public void add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) [instance] :728
void NavigationControl::add_StateChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "add_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState>)");
    uPtr(Navigation())->add_StateChanged(value);
}

// public void remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState> value) [instance] :729
void NavigationControl::remove_StateChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "remove_StateChanged(Uno.UX.ValueChangedHandler<Fuse.Navigation.NavigationState>)");
    uPtr(Navigation())->remove_StateChanged(value);
}

// public void Toggle(Fuse.Visual node) [instance] :761
void NavigationControl::Toggle(::g::Fuse::Visual* node)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "Toggle(Fuse.Visual)");
    uPtr(Navigation())->Toggle(node);
}

// public Fuse.Controls.NavigationControlTransition get_Transition() [instance] :454
int NavigationControl::Transition()
{
    return _transition;
}

// public void set_Transition(Fuse.Controls.NavigationControlTransition value) [instance] :455
void NavigationControl::Transition(int value)
{
    if (_transition == value)
        return;

    _transition = value;
}

// private void UpdateChild(Fuse.Elements.Element c) [instance] :508
void NavigationControl::UpdateChild(::g::Fuse::Elements::Element* c)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "UpdateChild(Fuse.Elements.Element)");

    if (!::g::Fuse::Navigation::Navigation::IsPage(c))
        return;

    NavigationControl__PageData* pd = NavigationControl::GetPageData(c, true);
    UpdateProgress(c, uPtr(Navigation())->GetPageState(c), pd);

    if ((((uPtr(pd)->Enter == NULL) || (uPtr(pd)->Exit == NULL)) || (uPtr(pd)->Inactive == NULL)) || (uPtr(pd)->Removing == NULL))
    {
        CleanupTriggers(c, pd);
        CreateTriggers(c, pd);

        if (uPtr(pd)->Enter != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Enter);

        if (uPtr(pd)->Exit != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Exit);

        if (uPtr(pd)->Inactive != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Inactive);

        if (uPtr(pd)->Removing != NULL)
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(c)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), uPtr(pd)->Removing);
    }
}

// private static void alterPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args, string opName, Fuse.Navigation.NavigationGotoMode gotoMode) [static] :351
void NavigationControl::alterPath(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args, uString* opName, int gotoMode)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "alterPath(Fuse.Scripting.Context,Fuse.Controls.NavigationControl,object[],string,Fuse.Navigation.NavigationGotoMode)");
    NavigationControl_typeof()->Init();
    uString* ret1;

    if ((uPtr(args)->Length() < 1) || (uPtr(args)->Length() > 2))
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[43/*"NavigationC...*/], opName), ::STRINGS[44/*" requires 1...*/]), nav, ::STRINGS[14/*"/Users/medb...*/], 356, ::STRINGS[45/*"alterPath"*/], NULL);
        return;
    }

    uObject* outlet = uAs<uObject*>(nav, ::TYPES[51/*Fuse.Navigation.IRouterOutlet*/]);

    if (outlet == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[46/*"Must be an ...*/], nav, ::STRINGS[14/*"/Users/medb...*/], 363, ::STRINGS[45/*"alterPath"*/]);
        return;
    }

    uString* path = (::g::Fuse::Marshal__ToType_fn(::TYPES[52/*Fuse.Marshal.ToType<string>*/], uPtr(args)->Strong<uObject*>(0), &ret1), ret1);
    uString* param = NULL;

    if (args->Length() > 1)
        param = ::g::Fuse::Json::Stringify(uPtr(args)->Strong<uObject*>(1), true);

    ::g::Fuse::Visual* active;
    ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface(uPtr(outlet), ::TYPES[51/*Fuse.Navigation.IRouterOutlet*/]), &path, &param, gotoMode, 0, ::STRINGS[23/*""*/], &active);
}

// internal static Fuse.Controls.NavigationControl.PageData GetPageData(Fuse.Visual elm, [bool create]) [static] :657
NavigationControl__PageData* NavigationControl::GetPageData(::g::Fuse::Visual* elm, bool create)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GetPageData(Fuse.Visual,[bool])");
    NavigationControl_typeof()->Init();
    uObject* v;

    if (uPtr(uPtr(elm)->Properties())->TryGet(NavigationControl::_pageDataProperty(), &v))
        return uCast<NavigationControl__PageData*>(v, ::TYPES[53/*Fuse.Controls.NavigationControl.PageData*/]);

    if (!create)
        return NULL;

    NavigationControl__PageData* sd = NavigationControl__PageData::New1();
    uPtr(uPtr(elm)->Properties())->Set(NavigationControl::_pageDataProperty(), sd);
    return sd;
}

// public static Fuse.Controls.NavigationControlTransition GetTransition(Fuse.Visual elm) [static] :679
int NavigationControl::GetTransition(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "GetTransition(Fuse.Visual)");
    NavigationControl_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(NavigationControl::_propTransition(), &res))
        return uUnbox<int>(::g::Fuse::Controls::NavigationControlTransition_typeof(), res);

    return 0;
}

// private static void gotoPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args) [static] :332
void NavigationControl::gotoPath(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "gotoPath(Fuse.Scripting.Context,Fuse.Controls.NavigationControl,object[])");
    NavigationControl_typeof()->Init();
    NavigationControl::alterPath(c, nav, args, ::STRINGS[41/*"gotoPath"*/], 0);
}

// private static void seekToPath(Fuse.Scripting.Context c, Fuse.Controls.NavigationControl nav, object[] args) [static] :346
void NavigationControl::seekToPath(::g::Fuse::Scripting::Context* c, NavigationControl* nav, uArray* args)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "seekToPath(Fuse.Scripting.Context,Fuse.Controls.NavigationControl,object[])");
    NavigationControl_typeof()->Init();
    NavigationControl::alterPath(c, nav, args, ::STRINGS[42/*"seekToPath"*/], 1);
}

// public static void SetTransition(Fuse.Visual elm, Fuse.Controls.NavigationControlTransition value) [static] :673
void NavigationControl::SetTransition(::g::Fuse::Visual* elm, int value)
{
    uStackFrame __("Fuse.Controls.NavigationControl", "SetTransition(Fuse.Visual,Fuse.Controls.NavigationControlTransition)");
    NavigationControl_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(NavigationControl::_propTransition(), uBox<int>(::g::Fuse::Controls::NavigationControlTransition_typeof(), value));
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigationControlInactiveState :395
uEnumType* NavigationControlInactiveState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlInactiveState", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Collapsed", 0LL,
        "Disabled", 1LL,
        "Unchanged", 2LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigationControlInteraction :408
uEnumType* NavigationControlInteraction_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlInteraction", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "None", 0LL,
        "Swipe", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigationControlTransition :419
uEnumType* NavigationControlTransition_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigationControlTransition", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Standard", 2LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal delegate void NavigationSwitchedHandler(object sender, Fuse.Controls.NavigatorSwitchedArgs args) :933
uDelegateType* NavigationSwitchedHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.NavigationSwitchedHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::NavigatorSwitchedArgs_typeof());
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial class Navigator :781
// {
// static Navigator() :781
static void Navigator__cctor_5_fn(uType* __type)
{
    Navigator::_propSwipeBack_ = ::g::Fuse::Properties::CreateHandle();
    Navigator::_propIsReusable_ = ::g::Fuse::Properties::CreateHandle();
    Navigator::_propReuse_ = ::g::Fuse::Properties::CreateHandle();
    Navigator::_propRemove_ = ::g::Fuse::Properties::CreateHandle();
}

static void Navigator_build(uType* type)
{
    ::STRINGS[47] = uString::Const("PartialPrepareGoto without Prepare");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[48] = uString::Const("Fuse.Navigation.IRouterOutlet.CancelPrepare");
    ::STRINGS[49] = uString::Const("Fuse.Navigation.IRouterOutlet.PartialPrepareGoto");
    ::STRINGS[50] = uString::Const("Can not navigate to '");
    ::STRINGS[51] = uString::Const("', not found!");
    ::STRINGS[52] = uString::Const("GetVisual");
    ::STRINGS[53] = uString::Const("Result of '");
    ::STRINGS[54] = uString::Const("' template is not a Visual!");
    ::STRINGS[55] = uString::Const("InstantiateTemplate");
    ::STRINGS[23] = uString::Const("");
    ::STRINGS[56] = uString::Const("\"\"");
    ::STRINGS[57] = uString::Const("{}");
    ::STRINGS[58] = uString::Const("null");
    ::STRINGS[59] = uString::Const("Navigator requires a Router for interaction");
    ::STRINGS[60] = uString::Const("RootInteraction");
    ::STRINGS[61] = uString::Const("Use `Reuse=\"Any\"` instead");
    ::STRINGS[62] = uString::Const("SetIsReusable");
    ::STRINGS[63] = uString::Const("Use `DefaultPath` instead of `DefaultTemplate`");
    ::STRINGS[64] = uString::Const("set_DefaultTemplate");
    ::TYPES[56] = ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Uno::String_typeof(), ::g::Uno::Collections::List_typeof()->MakeType(::g::Fuse::Visual_typeof(), NULL), NULL);
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[57] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[58] = ::g::Uno::Collections::List_typeof()->MakeType(::TYPES[9/*Fuse.Visual*/], NULL);
    ::TYPES[51] = ::g::Fuse::Navigation::IRouterOutlet_typeof();
    ::TYPES[31] = ::g::Fuse::Navigation::HistoryChangedHandler_typeof();
    ::TYPES[59] = ::g::Fuse::Internal::MiniList_typeof()->MakeType(uObject_typeof(), NULL);
    ::TYPES[60] = ::g::Fuse::Navigation::ExplicitNavigation_typeof();
    ::TYPES[61] = ::g::Fuse::Controls::NavigationSwitchedHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Navigator_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Navigator_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Navigator_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Navigator_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(Navigator_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Navigator_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(Navigator_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Navigator_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Navigator_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Navigator_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Navigator_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Navigator_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Navigator_type, interface14),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(Navigator_type, interface15),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(Navigator_type, interface16),
        ::TYPES[51/*Fuse.Navigation.IRouterOutlet*/], offsetof(Navigator_type, interface17));
    type->SetFields(106,
        ::TYPES[59/*Fuse.Internal.MiniList<object>*/], offsetof(::g::Fuse::Controls::Navigator, _activeTransitions), 0,
        Navigator__NavPage_typeof(), offsetof(::g::Fuse::Controls::Navigator, _current), 0,
        ::g::Fuse::Triggers::BusyTaskActivity_typeof(), offsetof(::g::Fuse::Controls::Navigator, _deferPageSwitch), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Navigator, _deferPageSwitchTimeout), 0,
        Navigator__DeferSwitch_typeof(), offsetof(::g::Fuse::Controls::Navigator, _deferred), 0,
        ::g::Fuse::Controls::NavigatorGotoState_typeof(), offsetof(::g::Fuse::Controls::Navigator, _gotoState), 0,
        ::g::Fuse::Node_typeof(), offsetof(::g::Fuse::Controls::Navigator, _listenBusy), 0,
        ::g::Uno::Double_typeof(), offsetof(::g::Fuse::Controls::Navigator, _listenStart), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Navigator, _listenTimeout), 0,
        ::g::Fuse::Controls::NavigatorSwipe_typeof(), offsetof(::g::Fuse::Controls::Navigator, _navigatorSwipeBack), 0,
        ::TYPES[56/*Uno.Collections.Dictionary<string, Uno.Collections.List<Fuse.Visual>>*/], offsetof(::g::Fuse::Controls::Navigator, _pathCache), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Navigator, _prepareBack), 0,
        Navigator__NavPage_typeof(), offsetof(::g::Fuse::Controls::Navigator, _prepared), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Navigator, _prepareReady), 0,
        ::g::Fuse::Controls::RemoveType_typeof(), offsetof(::g::Fuse::Controls::Navigator, _remove), 0,
        ::g::Fuse::Controls::ReuseType_typeof(), offsetof(::g::Fuse::Controls::Navigator, _reuse), 0,
        ::g::Fuse::Navigation::Router_typeof(), offsetof(::g::Fuse::Controls::Navigator, _router), 0,
        ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), offsetof(::g::Fuse::Controls::Navigator, _swipeBack), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Navigator, _DefaultPath), 0,
        ::TYPES[61/*Fuse.Controls.NavigationSwitchedHandler*/], offsetof(::g::Fuse::Controls::Navigator, Switched1), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::Navigator::_propIsReusable_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::Navigator::_propRemove_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::Navigator::_propReuse_, uFieldFlagsStatic,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::Navigator::_propSwipeBack_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(25,
        new uFunction("get_DefaultPath", NULL, (void*)Navigator__get_DefaultPath_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultPath", NULL, (void*)Navigator__set_DefaultPath_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DefaultTemplate", NULL, (void*)Navigator__get_DefaultTemplate_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_DefaultTemplate", NULL, (void*)Navigator__set_DefaultTemplate_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_DeferPageSwitch", NULL, (void*)Navigator__get_DeferPageSwitch_fn, 0, false, ::g::Fuse::Triggers::BusyTaskActivity_typeof(), 0),
        new uFunction("set_DeferPageSwitch", NULL, (void*)Navigator__set_DeferPageSwitch_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Triggers::BusyTaskActivity_typeof()),
        new uFunction("get_DeferPageSwitchTimeout", NULL, (void*)Navigator__get_DeferPageSwitchTimeout_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_DeferPageSwitchTimeout", NULL, (void*)Navigator__set_DeferPageSwitchTimeout_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("GetIsReusable", NULL, (void*)Navigator__GetIsReusable_fn, 0, true, ::g::Uno::Bool_typeof(), 1, ::TYPES[9/*Fuse.Visual*/]),
        new uFunction("GetRemove", NULL, (void*)Navigator__GetRemove_fn, 0, true, ::g::Fuse::Controls::RemoveType_typeof(), 1, ::TYPES[9/*Fuse.Visual*/]),
        new uFunction("GetReuse", NULL, (void*)Navigator__GetReuse_fn, 0, true, ::g::Fuse::Controls::ReuseType_typeof(), 1, ::TYPES[9/*Fuse.Visual*/]),
        new uFunction("GetSwipeBack", NULL, (void*)Navigator__GetSwipeBack_fn, 0, true, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 1, ::TYPES[9/*Fuse.Visual*/]),
        new uFunction("get_GotoState", NULL, (void*)Navigator__get_GotoState_fn, 0, false, ::g::Fuse::Controls::NavigatorGotoState_typeof(), 0),
        new uFunction("set_GotoState", NULL, (void*)Navigator__set_GotoState_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorGotoState_typeof()),
        new uFunction(".ctor", NULL, (void*)Navigator__New4_fn, 0, true, type, 0),
        new uFunction("get_Remove", NULL, (void*)Navigator__get_Remove_fn, 0, false, ::g::Fuse::Controls::RemoveType_typeof(), 0),
        new uFunction("set_Remove", NULL, (void*)Navigator__set_Remove_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::RemoveType_typeof()),
        new uFunction("get_Reuse", NULL, (void*)Navigator__get_Reuse_fn, 0, false, ::g::Fuse::Controls::ReuseType_typeof(), 0),
        new uFunction("set_Reuse", NULL, (void*)Navigator__set_Reuse_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ReuseType_typeof()),
        new uFunction("SetIsReusable", NULL, (void*)Navigator__SetIsReusable_fn, 0, true, uVoid_typeof(), 2, ::TYPES[9/*Fuse.Visual*/], ::g::Uno::Bool_typeof()),
        new uFunction("SetRemove", NULL, (void*)Navigator__SetRemove_fn, 0, true, uVoid_typeof(), 2, ::TYPES[9/*Fuse.Visual*/], ::g::Fuse::Controls::RemoveType_typeof()),
        new uFunction("SetReuse", NULL, (void*)Navigator__SetReuse_fn, 0, true, uVoid_typeof(), 2, ::TYPES[9/*Fuse.Visual*/], ::g::Fuse::Controls::ReuseType_typeof()),
        new uFunction("SetSwipeBack", NULL, (void*)Navigator__SetSwipeBack_fn, 0, true, uVoid_typeof(), 2, ::TYPES[9/*Fuse.Visual*/], ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()),
        new uFunction("get_SwipeBack", NULL, (void*)Navigator__get_SwipeBack_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 0),
        new uFunction("set_SwipeBack", NULL, (void*)Navigator__set_SwipeBack_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()));
}

Navigator_type* Navigator_typeof()
{
    static uSStrong<Navigator_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::NavigationControl_typeof();
    options.FieldCount = 130;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Navigator);
    options.TypeSize = sizeof(Navigator_type);
    type = (Navigator_type*)uClassType::New("Fuse.Controls.Navigator", options);
    type->fp_build_ = Navigator_build;
    type->fp_ctor_ = (void*)Navigator__New4_fn;
    type->fp_cctor_ = Navigator__cctor_5_fn;
    type->fp_CreateTriggers = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Controls::NavigationControl__PageData*))Navigator__CreateTriggers_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Navigator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Navigator__OnUnrooted_fn;
    type->interface17.fp_PartialPrepareGoto = (void(*)(uObject*, double*))Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface17.fp_CancelPrepare = (void(*)(uObject*))Navigator__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface17.fp_Goto = (void(*)(uObject*, uString**, uString**, int*, int*, uString*, ::g::Fuse::Visual**, int*))Navigator__FuseNavigationIRouterOutletGoto_fn;
    type->interface17.fp_GetCurrent = (void(*)(uObject*, uString**, uString**, ::g::Fuse::Visual**))Navigator__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface17.fp_GetPath = (void(*)(uObject*, ::g::Fuse::Visual*, uString**, uString**, bool*))Navigator__FuseNavigationIRouterOutletGetPath_fn;
    type->interface17.fp_get_Type = (void(*)(uObject*, int*))Navigator__FuseNavigationIRouterOutletget_Type_fn;
    type->interface15.fp_GetPage = (void(*)(uObject*, int*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface15.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface15.fp_get_PageCount = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface15.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface15.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface15.fp_get_State = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface15.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface15.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface15.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface15.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface15.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface15.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface15.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface15.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface15.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface15.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface15.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface15.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface16.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface16.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface16.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface16.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface16.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface16.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Navigator() :1027
void Navigator__ctor_8_fn(Navigator* __this)
{
    __this->ctor_8();
}

// private void AddToCache(Fuse.Controls.Navigator.NavPage page, Fuse.Visual target) :1267
void Navigator__AddToCache_fn(Navigator* __this, Navigator__NavPage* page, ::g::Fuse::Visual* target)
{
    __this->AddToCache(page, target);
}

// private void BusyChanged() :1481
void Navigator__BusyChanged_fn(Navigator* __this)
{
    __this->BusyChanged();
}

// private void CheckInteraction() :853
void Navigator__CheckInteraction_fn(Navigator* __this)
{
    __this->CheckInteraction();
}

// private void CleanupChildren([Fuse.Visual exclude]) :1595
void Navigator__CleanupChildren_fn(Navigator* __this, ::g::Fuse::Visual* exclude)
{
    __this->CleanupChildren(exclude);
}

// private void CleanupListenBusy() :1467
void Navigator__CleanupListenBusy_fn(Navigator* __this)
{
    __this->CleanupListenBusy();
}

// private void CleanupPrepared([Fuse.Visual newTarget]) :1278
void Navigator__CleanupPrepared_fn(Navigator* __this, ::g::Fuse::Visual* newTarget)
{
    __this->CleanupPrepared(newTarget);
}

// private bool CompatibleParameter(string a, string b) :1114
void Navigator__CompatibleParameter_fn(Navigator* __this, uString* a, uString* b, bool* __retval)
{
    *__retval = __this->CompatibleParameter(a, b);
}

// protected override sealed void CreateTriggers(Fuse.Elements.Element c, Fuse.Controls.NavigationControl.PageData pd) :1612
void Navigator__CreateTriggers_fn(Navigator* __this, ::g::Fuse::Elements::Element* c, ::g::Fuse::Controls::NavigationControl__PageData* pd)
{
    uStackFrame __("Fuse.Controls.Navigator", "CreateTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.PageData)");

    switch (__this->PageTransition(c))
    {
        case 1:
            break;
        case 2:
        {
            uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::NavEnterHorizontal::New3();
            pd->Exit = ::g::Fuse::Controls::NavigationInternal::NavExitHorizontal::New3();
            ::g::Fuse::Controls::NavigationInternal::NavRemoveHorizontal* q = ::g::Fuse::Controls::NavigationInternal::NavRemoveHorizontal::New3();
            ::g::Fuse::Controls::Element_Opacity_Property* t = ::g::Fuse::Controls::Element_Opacity_Property::New1(c);
            ::g::Fuse::Animations::Change* fade = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], t);
            fade->Duration(0.30000001192092896);
            ::g::Fuse::Animations::Change__set_Value_fn(fade, uCRef(0.0f));
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(q->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), fade);
            pd->Removing = q;
            break;
        }
    }
}

// public generated string get_DefaultPath() :1011
void Navigator__get_DefaultPath_fn(Navigator* __this, uString** __retval)
{
    *__retval = __this->DefaultPath();
}

// public generated void set_DefaultPath(string value) :1011
void Navigator__set_DefaultPath_fn(Navigator* __this, uString* value)
{
    __this->DefaultPath(value);
}

// public string get_DefaultTemplate() :997
void Navigator__get_DefaultTemplate_fn(Navigator* __this, uString** __retval)
{
    *__retval = __this->DefaultTemplate();
}

// public void set_DefaultTemplate(string value) :998
void Navigator__set_DefaultTemplate_fn(Navigator* __this, uString* value)
{
    __this->DefaultTemplate(value);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferPageSwitch() :1502
void Navigator__get_DeferPageSwitch_fn(Navigator* __this, int* __retval)
{
    *__retval = __this->DeferPageSwitch();
}

// public void set_DeferPageSwitch(Fuse.Triggers.BusyTaskActivity value) :1503
void Navigator__set_DeferPageSwitch_fn(Navigator* __this, int* value)
{
    __this->DeferPageSwitch(*value);
}

// public float get_DeferPageSwitchTimeout() :1514
void Navigator__get_DeferPageSwitchTimeout_fn(Navigator* __this, float* __retval)
{
    *__retval = __this->DeferPageSwitchTimeout();
}

// public void set_DeferPageSwitchTimeout(float value) :1515
void Navigator__set_DeferPageSwitchTimeout_fn(Navigator* __this, float* value)
{
    __this->DeferPageSwitchTimeout(*value);
}

// private void EnablePageSwipeBack() :858
void Navigator__EnablePageSwipeBack_fn(Navigator* __this)
{
    __this->EnablePageSwipeBack();
}

// private Fuse.Visual FindPage(Uno.UX.Selector path) :1363
void Navigator__FindPage_fn(Navigator* __this, ::g::Uno::UX::Selector* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->FindPage(*path);
}

// private void Fuse.Navigation.IRouterOutlet.CancelPrepare() :1142
void Navigator__FuseNavigationIRouterOutletCancelPrepare_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.CancelPrepare()");

    if (!__this->_prepareReady)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[47/*"PartialPrep...*/], __this, ::STRINGS[14/*"/Users/medb...*/], 1146, ::STRINGS[48/*"Fuse.Naviga...*/]);
        return;
    }

    __this->CleanupPrepared(NULL);
    uPtr(__this->Navigation1())->UpdateProgress(0);
}

// private void Fuse.Navigation.IRouterOutlet.GetCurrent(string& path, string& parameter, Fuse.Visual& active) :1403
void Navigator__FuseNavigationIRouterOutletGetCurrent_fn(Navigator* __this, uString** path, uString** parameter, ::g::Fuse::Visual** active)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.GetCurrent(string&,string&,Fuse.Visual&)");

    if (__this->_deferred != NULL)
    {
        *path = uPtr(__this->_deferred)->Path;
        *parameter = uPtr(__this->_deferred)->Parameter;
        *active = uPtr(__this->_deferred)->Page;
    }
    else
    {
        *path = uPtr(__this->_current)->Path;
        *parameter = uPtr(__this->_current)->Parameter;
        *active = uPtr(__this->_current)->Visual;
    }
}

// private bool Fuse.Navigation.IRouterOutlet.GetPath(Fuse.Visual active, string& path, string& parameter) :1420
void Navigator__FuseNavigationIRouterOutletGetPath_fn(Navigator* __this, ::g::Fuse::Visual* active, uString** path, uString** parameter, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.GetPath(Fuse.Visual,string&,string&)");
    *path = ::g::Uno::UX::Selector__op_Implicit1(uPtr(active)->Name());
    *parameter = active->Parameter();
    return *__retval = active->Parent() == __this, void();
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.Goto(string& path, string& parameter, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, Fuse.Visual& active) :1291
void Navigator__FuseNavigationIRouterOutletGoto_fn(Navigator* __this, uString** path, uString** parameter, int* gotoMode, int* operation, uString* operationStyle, ::g::Fuse::Visual** active, int* __retval)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.Goto(string&,string&,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,Fuse.Visual&)");
    ::g::Fuse::Controls::NavigatorSwitchedArgs* collection1;
    int gotoMode_ = *gotoMode;
    int operation_ = *operation;

    if (gotoMode_ == 2)
    {
        __this->CleanupPrepared(NULL);
        uPtr(__this->_prepared)->CopyFrom(__this->_current);
        bool ignore;
        int r = __this->Prepare(__this->_prepared, path, parameter, operation_, active, &ignore);
        uPtr(__this->_prepared)->Visual = *active;
        uPtr(__this->_prepared)->Path = *path;
        uPtr(__this->_prepared)->Parameter = *parameter;
        __this->_prepareReady = true;
        __this->_prepareBack = (operation_ == 3);
        collection1 = ::g::Fuse::Controls::NavigatorSwitchedArgs::New3(__this);
        uPtr(collection1)->OldPath = uPtr(__this->_current)->Path;
        uPtr(collection1)->NewPath = *path;
        uPtr(collection1)->OldParameter = uPtr(__this->_current)->Parameter;
        uPtr(collection1)->NewParameter = *parameter;
        uPtr(collection1)->OldVisual = uPtr(__this->_current)->Visual;
        uPtr(collection1)->NewVisual = *active;
        uPtr(collection1)->Operation = operation_;
        uPtr(collection1)->OperationStyle = operationStyle;
        uPtr(collection1)->Mode = gotoMode_;
        ::g::Fuse::Controls::NavigatorSwitchedArgs* args = collection1;
        __this->OnSwitched(args);
        return *__retval = r, void();
    }

    __this->ResolveDeferred();
    bool usedPrepared;
    int result = __this->Prepare(__this->_current, path, parameter, operation_, active, &usedPrepared);

    if (result != 2)
        return *__retval = result, void();

    __this->CleanupPrepared(*active);
    __this->SwitchToPage(*path, *parameter, *active, gotoMode_, operation_, operationStyle, usedPrepared);
    return *__retval = 2, void();
}

// private void Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double progress) :1124
void Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn(Navigator* __this, double* progress)
{
    uStackFrame __("Fuse.Controls.Navigator", "Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double)");
    double progress_ = *progress;

    if (!__this->_prepareReady)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[47/*"PartialPrep...*/], __this, ::STRINGS[14/*"/Users/medb...*/], 1128, ::STRINGS[49/*"Fuse.Naviga...*/]);
        return;
    }

    if (uPtr(__this->_prepared)->Visual != NULL)
        uPtr(__this->Navigation1())->SetPageProgress(uPtr(__this->_prepared)->Visual, __this->_prepareBack ? (float)progress_ - 1.0f : 1.0f - (float)progress_, false);

    uPtr(__this->Navigation1())->SetPageProgress(uPtr(__this->_current)->Visual, __this->_prepareBack ? (float)progress_ : -((float)progress_), false);
    uPtr(__this->Navigation1())->UpdateProgress(2);
}

// private Fuse.Navigation.OutletType Fuse.Navigation.IRouterOutlet.get_Type() :1105
void Navigator__FuseNavigationIRouterOutletget_Type_fn(Navigator* __this, int* __retval)
{
    return *__retval = __this->RouterOutletType(), void();
}

// private Uno.Collections.List<Fuse.Visual> GetCache(string path) :1095
void Navigator__GetCache_fn(Navigator* __this, uString* path, ::g::Uno::Collections::List** __retval)
{
    *__retval = __this->GetCache(path);
}

// public static bool GetIsReusable(Fuse.Visual elm) :1644
void Navigator__GetIsReusable_fn(::g::Fuse::Visual* elm, bool* __retval)
{
    *__retval = Navigator::GetIsReusable(elm);
}

// public static Fuse.Controls.RemoveType GetRemove(Fuse.Visual elm) :1704
void Navigator__GetRemove_fn(::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = Navigator::GetRemove(elm);
}

// public static Fuse.Controls.ReuseType GetReuse(Fuse.Visual elm) :1658
void Navigator__GetReuse_fn(::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = Navigator::GetReuse(elm);
}

// public static Fuse.Controls.NavigatorSwipeDirection GetSwipeBack(Fuse.Visual elm) :882
void Navigator__GetSwipeBack_fn(::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = Navigator::GetSwipeBack(elm);
}

// private Fuse.Visual GetVisual(string path) :1334
void Navigator__GetVisual_fn(Navigator* __this, uString* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->GetVisual(path);
}

// public Fuse.Controls.NavigatorGotoState get_GotoState() :1023
void Navigator__get_GotoState_fn(Navigator* __this, int* __retval)
{
    *__retval = __this->GotoState();
}

// public void set_GotoState(Fuse.Controls.NavigatorGotoState value) :1024
void Navigator__set_GotoState_fn(Navigator* __this, int* value)
{
    __this->GotoState(*value);
}

// private Fuse.Visual InstantiateTemplate(Uno.UX.Template f, string path) :1350
void Navigator__InstantiateTemplate_fn(Navigator* __this, ::g::Uno::UX::Template* f, uString* path, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->InstantiateTemplate(f, path);
}

// private bool IsEmptyParameter(string a) :1107
void Navigator__IsEmptyParameter_fn(Navigator* __this, uString* a, bool* __retval)
{
    *__retval = __this->IsEmptyParameter(a);
}

// private bool IsRemoveLevel(Fuse.Visual elm, Fuse.Controls.RemoveType type) :1728
void Navigator__IsRemoveLevel_fn(Navigator* __this, ::g::Fuse::Visual* elm, int* type, bool* __retval)
{
    *__retval = __this->IsRemoveLevel(elm, *type);
}

// private bool IsReuseLevel(Fuse.Visual elm, Fuse.Controls.ReuseType type) :1682
void Navigator__IsReuseLevel_fn(Navigator* __this, ::g::Fuse::Visual* elm, int* type, bool* __retval)
{
    *__retval = __this->IsReuseLevel(elm, *type);
}

// private new Fuse.Navigation.ExplicitNavigation get_Navigation() :1037
void Navigator__get_Navigation1_fn(Navigator* __this, ::g::Fuse::Navigation::ExplicitNavigation** __retval)
{
    *__retval = __this->Navigation1();
}

// private Fuse.Controls.NavigatorSwipe get_NavigatorSwipeBack() :800
void Navigator__get_NavigatorSwipeBack_fn(Navigator* __this, ::g::Fuse::Controls::NavigatorSwipe** __retval)
{
    *__retval = __this->NavigatorSwipeBack();
}

// public Navigator New() :1027
void Navigator__New4_fn(Navigator** __retval)
{
    *__retval = Navigator::New4();
}

// private void OnHistoryChanged(object sender) :848
void Navigator__OnHistoryChanged_fn(Navigator* __this, uObject* sender)
{
    __this->OnHistoryChanged(sender);
}

// protected override sealed void OnRooted() :1058
void Navigator__OnRooted_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnRooted()");
    ::g::Fuse::Controls::NavigationControl__OnRooted_fn(__this);
    __this->RootInteraction();
    __this->CleanupChildren(uPtr(__this->_current)->Visual);
    uPtr(__this->Navigation1())->UpdateProgress(1);

    if (::g::Uno::String::op_Inequality(__this->DefaultPath(), NULL))
    {
        uString* path = __this->DefaultPath();
        uString* parameter = NULL;
        ::g::Fuse::Visual* active = NULL;
        ::g::Fuse::Navigation::IRouterOutlet::Goto(uInterface(uPtr(uAs<uObject*>(__this, ::TYPES[51/*Fuse.Navigation.IRouterOutlet*/])), ::TYPES[51/*Fuse.Navigation.IRouterOutlet*/]), &path, &parameter, 1, 0, ::STRINGS[23/*""*/], &active);
    }
    else
    {
        uPtr(__this->_current)->Visual = NULL;
        uPtr(__this->_current)->Path = NULL;
        uPtr(__this->_current)->Parameter = NULL;
    }
}

// private void OnSwitched(Fuse.Controls.NavigatorSwitchedArgs args) :1589
void Navigator__OnSwitched_fn(Navigator* __this, ::g::Fuse::Controls::NavigatorSwitchedArgs* args)
{
    __this->OnSwitched(args);
}

// protected override sealed void OnUnrooted() :1084
void Navigator__OnUnrooted_fn(Navigator* __this)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnUnrooted()");
    __this->UnrootInteraction();
    ::g::Fuse::Controls::NavigationControl__OnUnrooted_fn(__this);
}

// private void OnUpdate() :1486
void Navigator__OnUpdate_fn(Navigator* __this)
{
    __this->OnUpdate();
}

// private Fuse.Controls.NavigatorSwipeDirection PageSwipeBackDirection(Fuse.Visual elm) :893
void Navigator__PageSwipeBackDirection_fn(Navigator* __this, ::g::Fuse::Visual* elm, int* __retval)
{
    *__retval = __this->PageSwipeBackDirection(elm);
}

// private Fuse.Navigation.RoutingResult Prepare(Fuse.Controls.Navigator.NavPage curPage, string& path, string& parameter, Fuse.Navigation.RoutingOperation operation, Fuse.Visual& result, bool& usedPrepared) :1154
void Navigator__Prepare_fn(Navigator* __this, Navigator__NavPage* curPage, uString** path, uString** parameter, int* operation, ::g::Fuse::Visual** result, bool* usedPrepared, int* __retval)
{
    *__retval = __this->Prepare(curPage, path, parameter, *operation, result, usedPrepared);
}

// internal void ReleasePage(Fuse.Visual v) :1741
void Navigator__ReleasePage_fn(Navigator* __this, ::g::Fuse::Visual* v)
{
    __this->ReleasePage(v);
}

// public new Fuse.Controls.RemoveType get_Remove() :1724
void Navigator__get_Remove_fn(Navigator* __this, int* __retval)
{
    *__retval = __this->Remove2();
}

// public new void set_Remove(Fuse.Controls.RemoveType value) :1725
void Navigator__set_Remove_fn(Navigator* __this, int* value)
{
    __this->Remove2(*value);
}

// private void ResolveDeferred() :1545
void Navigator__ResolveDeferred_fn(Navigator* __this)
{
    __this->ResolveDeferred();
}

// public Fuse.Controls.ReuseType get_Reuse() :1678
void Navigator__get_Reuse_fn(Navigator* __this, int* __retval)
{
    *__retval = __this->Reuse();
}

// public void set_Reuse(Fuse.Controls.ReuseType value) :1679
void Navigator__set_Reuse_fn(Navigator* __this, int* value)
{
    __this->Reuse(*value);
}

// private void RootInteraction() :812
void Navigator__RootInteraction_fn(Navigator* __this)
{
    __this->RootInteraction();
}

// public static void SetIsReusable(Fuse.Visual elm, bool value) :1636
void Navigator__SetIsReusable_fn(::g::Fuse::Visual* elm, bool* value)
{
    Navigator::SetIsReusable(elm, *value);
}

// public static void SetRemove(Fuse.Visual elm, Fuse.Controls.RemoveType value) :1698
void Navigator__SetRemove_fn(::g::Fuse::Visual* elm, int* value)
{
    Navigator::SetRemove(elm, *value);
}

// public static void SetReuse(Fuse.Visual elm, Fuse.Controls.ReuseType value) :1652
void Navigator__SetReuse_fn(::g::Fuse::Visual* elm, int* value)
{
    Navigator::SetReuse(elm, *value);
}

// public static void SetSwipeBack(Fuse.Visual elm, Fuse.Controls.NavigatorSwipeDirection value) :876
void Navigator__SetSwipeBack_fn(::g::Fuse::Visual* elm, int* value)
{
    Navigator::SetSwipeBack(elm, *value);
}

// internal void SetTransitionState(object owner, bool on) :1041
void Navigator__SetTransitionState_fn(Navigator* __this, uObject* owner, bool* on)
{
    __this->SetTransitionState(owner, *on);
}

// public Fuse.Controls.NavigatorSwipeDirection get_SwipeBack() :793
void Navigator__get_SwipeBack_fn(Navigator* __this, int* __retval)
{
    *__retval = __this->SwipeBack();
}

// public void set_SwipeBack(Fuse.Controls.NavigatorSwipeDirection value) :794
void Navigator__set_SwipeBack_fn(Navigator* __this, int* value)
{
    __this->SwipeBack(*value);
}

// private void SwitchDeferred() :1519
void Navigator__SwitchDeferred_fn(Navigator* __this)
{
    __this->SwitchDeferred();
}

// internal generated void add_Switched(Fuse.Controls.NavigationSwitchedHandler value) :1610
void Navigator__add_Switched_fn(Navigator* __this, uDelegate* value)
{
    __this->add_Switched(value);
}

// internal generated void remove_Switched(Fuse.Controls.NavigationSwitchedHandler value) :1610
void Navigator__remove_Switched_fn(Navigator* __this, uDelegate* value)
{
    __this->remove_Switched(value);
}

// private void SwitchToPage(string path, string parameter, Fuse.Visual v, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, bool usedPrepared) :1431
void Navigator__SwitchToPage_fn(Navigator* __this, uString* path, uString* parameter, ::g::Fuse::Visual* v, int* gotoMode, int* operation, uString* operationStyle, bool* usedPrepared)
{
    __this->SwitchToPage(path, parameter, v, *gotoMode, *operation, operationStyle, *usedPrepared);
}

// private void UnrootInteraction() :844
void Navigator__UnrootInteraction_fn(Navigator* __this)
{
    __this->UnrootInteraction();
}

// private void UpdateNavigationState() :1050
void Navigator__UpdateNavigationState_fn(Navigator* __this)
{
    __this->UpdateNavigationState();
}

uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propIsReusable_;
uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propRemove_;
uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propReuse_;
uSStrong< ::g::Fuse::PropertyHandle*> Navigator::_propSwipeBack_;

// public Navigator() [instance] :1027
void Navigator::ctor_8()
{
    uStackFrame __("Fuse.Controls.Navigator", ".ctor()");
    _gotoState = 1;
    _pathCache = ((::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::TYPES[56/*Uno.Collections.Dictionary<string, Uno.Collections.List<Fuse.Visual>>*/]));
    _current = Navigator__NavPage::New1();
    _prepared = Navigator__NavPage::New1();
    _deferPageSwitch = 8;
    _deferPageSwitchTimeout = 1.0f;
    _reuse = 4;
    _remove = 2;
    ctor_7();
    _transition = 2;
    SetNavigation(::g::Fuse::Navigation::ExplicitNavigation::New2());
}

// private void AddToCache(Fuse.Controls.Navigator.NavPage page, Fuse.Visual target) [instance] :1267
void Navigator::AddToCache(Navigator__NavPage* page, ::g::Fuse::Visual* target)
{
    uStackFrame __("Fuse.Controls.Navigator", "AddToCache(Fuse.Controls.Navigator.NavPage,Fuse.Visual)");

    if (uPtr(page)->Visual == target)
        return;

    if ((((uPtr(page)->Visual != NULL) && ::g::Uno::String::op_Inequality(uPtr(page)->Path, NULL)) && IsReuseLevel(uPtr(page)->Visual, 2)) && uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(uPtr(page)->Visual, true))->FromTemplate)
        ::g::Uno::Collections::List__Add_fn(uPtr(GetCache(uPtr(page)->Path)), uPtr(page)->Visual);
}

// private void BusyChanged() [instance] :1481
void Navigator::BusyChanged()
{
    ::g::Fuse::UpdateManager::AddDeferredAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), ::g::Fuse::LayoutPriority::Later());
}

// private void CheckInteraction() [instance] :853
void Navigator::CheckInteraction()
{
    uStackFrame __("Fuse.Controls.Navigator", "CheckInteraction()");
    EnablePageSwipeBack();
}

// private void CleanupChildren([Fuse.Visual exclude]) [instance] :1595
void Navigator::CleanupChildren(::g::Fuse::Visual* exclude)
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupChildren([Fuse.Visual])");
    ::g::Fuse::Node* ret5;

    for (int i = ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])) - 1; i >= 0; --i)
    {
        ::g::Fuse::Visual* c = uAs< ::g::Fuse::Visual*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret5), ret5), ::TYPES[9/*Fuse.Visual*/]);

        if (((c != NULL) && ::g::Fuse::Navigation::Navigation::IsPage(c)) && (c != exclude))
        {
            if (IsRemoveLevel(c, 2) || (Navigator::GetReuse(c) == 1))
                BeginRemoveChild(c, NULL);
            else if (::g::Uno::Math::Abs1(uPtr(Navigation1())->GetPageState(c).Progress) < 1.0f)
                uPtr(Navigation1())->SetPageProgress1(c, -1.0f, -1.0f, false);
        }
    }
}

// private void CleanupListenBusy() [instance] :1467
void Navigator::CleanupListenBusy()
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupListenBusy()");
    _listenTimeout = false;

    if (_listenBusy != NULL)
    {
        ::g::Fuse::Triggers::BusyTask::RemoveListener(_listenBusy, uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__BusyChanged_fn, this));
        ::g::Fuse::UpdateManager::RemoveAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__OnUpdate_fn, this), 0);
        _listenBusy = NULL;
    }
}

// private void CleanupPrepared([Fuse.Visual newTarget]) [instance] :1278
void Navigator::CleanupPrepared(::g::Fuse::Visual* newTarget)
{
    uStackFrame __("Fuse.Controls.Navigator", "CleanupPrepared([Fuse.Visual])");

    if ((uPtr(_prepared)->Visual != uPtr(_current)->Visual) && (uPtr(_prepared)->Visual != NULL))
        uPtr(Navigation1())->SetPageProgress(uPtr(_prepared)->Visual, (float)(_prepareBack ? 1 : -1), true);

    AddToCache(_prepared, newTarget);
    uPtr(_prepared)->Reset();
    _prepareReady = false;
}

// private bool CompatibleParameter(string a, string b) [instance] :1114
bool Navigator::CompatibleParameter(uString* a, uString* b)
{
    uStackFrame __("Fuse.Controls.Navigator", "CompatibleParameter(string,string)");

    if (::g::Uno::String::op_Equality(a, b))
        return true;

    return IsEmptyParameter(a) && IsEmptyParameter(b);
}

// public generated string get_DefaultPath() [instance] :1011
uString* Navigator::DefaultPath()
{
    return _DefaultPath;
}

// public generated void set_DefaultPath(string value) [instance] :1011
void Navigator::DefaultPath(uString* value)
{
    _DefaultPath = value;
}

// public string get_DefaultTemplate() [instance] :997
uString* Navigator::DefaultTemplate()
{
    return DefaultPath();
}

// public void set_DefaultTemplate(string value) [instance] :998
void Navigator::DefaultTemplate(uString* value)
{
    DefaultPath(value);
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[63/*"Use `Defaul...*/], this, ::STRINGS[14/*"/Users/medb...*/], 1002, ::STRINGS[64/*"set_Default...*/]);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferPageSwitch() [instance] :1502
int Navigator::DeferPageSwitch()
{
    return _deferPageSwitch;
}

// public void set_DeferPageSwitch(Fuse.Triggers.BusyTaskActivity value) [instance] :1503
void Navigator::DeferPageSwitch(int value)
{
    _deferPageSwitch = value;
}

// public float get_DeferPageSwitchTimeout() [instance] :1514
float Navigator::DeferPageSwitchTimeout()
{
    return _deferPageSwitchTimeout;
}

// public void set_DeferPageSwitchTimeout(float value) [instance] :1515
void Navigator::DeferPageSwitchTimeout(float value)
{
    _deferPageSwitchTimeout = value;
}

// private void EnablePageSwipeBack() [instance] :858
void Navigator::EnablePageSwipeBack()
{
    uStackFrame __("Fuse.Controls.Navigator", "EnablePageSwipeBack()");

    if ((_navigatorSwipeBack != NULL) && (_router != NULL))
    {
        if (!uPtr(_router)->CanGoBack())
            uPtr(NavigatorSwipeBack())->IsEnabled(false);
        else
        {
            uPtr(NavigatorSwipeBack())->IsEnabled(true);
            uPtr(NavigatorSwipeBack())->Direction(PageSwipeBackDirection(uPtr(_current)->Visual));
        }
    }
}

// private Fuse.Visual FindPage(Uno.UX.Selector path) [instance] :1363
::g::Fuse::Visual* Navigator::FindPage(::g::Uno::UX::Selector path)
{
    uStackFrame __("Fuse.Controls.Navigator", "FindPage(Uno.UX.Selector)");
    ::g::Fuse::Node* ret6;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Visual* c = uAs< ::g::Fuse::Visual*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret6), ret6), ::TYPES[9/*Fuse.Visual*/]);

        if ((c == NULL) || ::g::Uno::UX::Selector__op_Inequality(uPtr(c)->Name(), path))
            continue;

        if (uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(c, true))->FromTemplate)
            continue;

        return c;
    }

    return NULL;
}

// private Uno.Collections.List<Fuse.Visual> GetCache(string path) [instance] :1095
::g::Uno::Collections::List* Navigator::GetCache(uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetCache(string)");
    bool ret7;
    ::g::Uno::Collections::List* ret8;

    if ((::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(_pathCache), path, &ret7), ret7))
        return (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_pathCache), path, &ret8), ret8);

    ::g::Uno::Collections::List* v = (::g::Uno::Collections::List*)::g::Uno::Collections::List::New1(::TYPES[58/*Uno.Collections.List<Fuse.Visual>*/]);
    ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(_pathCache), path, v);
    return v;
}

// private Fuse.Visual GetVisual(string path) [instance] :1334
::g::Fuse::Visual* Navigator::GetVisual(uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetVisual(string)");
    ::g::Uno::UX::Template* f = FindTemplate(path);

    if (f != NULL)
        return InstantiateTemplate(f, path);

    ::g::Fuse::Visual* q = FindPage(::g::Uno::UX::Selector__New1(path));

    if (q != NULL)
        return q;

    ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[50/*"Can not nav...*/], path), ::STRINGS[51/*"', not found!"*/]), this, ::STRINGS[14/*"/Users/medb...*/], 1346, ::STRINGS[52/*"GetVisual"*/]);
    return NULL;
}

// public Fuse.Controls.NavigatorGotoState get_GotoState() [instance] :1023
int Navigator::GotoState()
{
    return _gotoState;
}

// public void set_GotoState(Fuse.Controls.NavigatorGotoState value) [instance] :1024
void Navigator::GotoState(int value)
{
    _gotoState = value;
}

// private Fuse.Visual InstantiateTemplate(Uno.UX.Template f, string path) [instance] :1350
::g::Fuse::Visual* Navigator::InstantiateTemplate(::g::Uno::UX::Template* f, uString* path)
{
    uStackFrame __("Fuse.Controls.Navigator", "InstantiateTemplate(Uno.UX.Template,string)");
    ::g::Fuse::Visual* useVisual = uAs< ::g::Fuse::Visual*>(uPtr(f)->New1(), ::TYPES[9/*Fuse.Visual*/]);

    if (useVisual == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[53/*"Result of '"*/], path), ::STRINGS[54/*"' template ...*/]), this, ::STRINGS[14/*"/Users/medb...*/], 1355, ::STRINGS[55/*"Instantiate...*/], NULL);
        return NULL;
    }

    uPtr(useVisual)->Name(::g::Uno::UX::Selector__op_Implicit(path));
    uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(useVisual, true))->FromTemplate = true;
    return useVisual;
}

// private bool IsEmptyParameter(string a) [instance] :1107
bool Navigator::IsEmptyParameter(uString* a)
{
    uStackFrame __("Fuse.Controls.Navigator", "IsEmptyParameter(string)");
    return (((::g::Uno::String::op_Equality(a, NULL) || ::g::Uno::String::op_Equality(a, ::STRINGS[23/*""*/])) || ::g::Uno::String::op_Equality(a, ::STRINGS[56/*"\"\""*/])) || ::g::Uno::String::op_Equality(a, ::STRINGS[57/*"{}"*/])) || ::g::Uno::String::op_Equality(a, ::STRINGS[58/*"null"*/]);
}

// private bool IsRemoveLevel(Fuse.Visual elm, Fuse.Controls.RemoveType type) [instance] :1728
bool Navigator::IsRemoveLevel(::g::Fuse::Visual* elm, int type)
{
    uStackFrame __("Fuse.Controls.Navigator", "IsRemoveLevel(Fuse.Visual,Fuse.Controls.RemoveType)");

    if (!uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(elm, true))->FromTemplate)
        return false;

    int q = Navigator::GetRemove(elm);

    if (q == 0)
        q = Remove2();

    return q >= type;
}

// private bool IsReuseLevel(Fuse.Visual elm, Fuse.Controls.ReuseType type) [instance] :1682
bool Navigator::IsReuseLevel(::g::Fuse::Visual* elm, int type)
{
    uStackFrame __("Fuse.Controls.Navigator", "IsReuseLevel(Fuse.Visual,Fuse.Controls.ReuseType)");

    if (!uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(elm, true))->FromTemplate)
        return true;

    int q = Navigator::GetReuse(elm);

    if (q == 0)
        q = Reuse();

    return q >= type;
}

// private new Fuse.Navigation.ExplicitNavigation get_Navigation() [instance] :1037
::g::Fuse::Navigation::ExplicitNavigation* Navigator::Navigation1()
{
    return uAs< ::g::Fuse::Navigation::ExplicitNavigation*>(Navigation(), ::TYPES[60/*Fuse.Navigation.ExplicitNavigation*/]);
}

// private Fuse.Controls.NavigatorSwipe get_NavigatorSwipeBack() [instance] :800
::g::Fuse::Controls::NavigatorSwipe* Navigator::NavigatorSwipeBack()
{
    uStackFrame __("Fuse.Controls.Navigator", "get_NavigatorSwipeBack()");

    if (_navigatorSwipeBack == NULL)
    {
        _navigatorSwipeBack = ::g::Fuse::Controls::NavigatorSwipe::New2();
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigatorSwipeBack);
    }

    return _navigatorSwipeBack;
}

// private void OnHistoryChanged(object sender) [instance] :848
void Navigator::OnHistoryChanged(uObject* sender)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnHistoryChanged(object)");
    EnablePageSwipeBack();
}

// private void OnSwitched(Fuse.Controls.NavigatorSwitchedArgs args) [instance] :1589
void Navigator::OnSwitched(::g::Fuse::Controls::NavigatorSwitchedArgs* args)
{
    uStackFrame __("Fuse.Controls.Navigator", "OnSwitched(Fuse.Controls.NavigatorSwitchedArgs)");

    if (::g::Uno::Delegate::op_Inequality(Switched1, NULL))
        uPtr(Switched1)->Invoke(2, this, args);
}

// private void OnUpdate() [instance] :1486
void Navigator::OnUpdate()
{
    double elapsed = ::g::Fuse::Time::FrameTime() - _listenStart;

    if (elapsed > (double)DeferPageSwitchTimeout())
    {
        _listenTimeout = true;
        ::g::Fuse::UpdateManager::AddDeferredAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), ::g::Fuse::LayoutPriority::Later());
    }
}

// private Fuse.Controls.NavigatorSwipeDirection PageSwipeBackDirection(Fuse.Visual elm) [instance] :893
int Navigator::PageSwipeBackDirection(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "PageSwipeBackDirection(Fuse.Visual)");
    int n = Navigator::GetSwipeBack(elm);
    return (n == 1) ? SwipeBack() : n;
}

// private Fuse.Navigation.RoutingResult Prepare(Fuse.Controls.Navigator.NavPage curPage, string& path, string& parameter, Fuse.Navigation.RoutingOperation operation, Fuse.Visual& result, bool& usedPrepared) [instance] :1154
int Navigator::Prepare(Navigator__NavPage* curPage, uString** path, uString** parameter, int operation, ::g::Fuse::Visual** result, bool* usedPrepared)
{
    uStackFrame __("Fuse.Controls.Navigator", "Prepare(Fuse.Controls.Navigator.NavPage,string&,string&,Fuse.Navigation.RoutingOperation,Fuse.Visual&,bool&)");
    ::g::Fuse::Visual* ret9;
    bool ret10;
    *result = NULL;
    *usedPrepared = false;

    if ((::g::Uno::String::op_Equality(*path, NULL) || ::g::Uno::String::op_Equality(*path, ::STRINGS[23/*""*/])) && ::g::Uno::String::op_Inequality(DefaultPath(), NULL))
        *path = DefaultPath();

    if (::g::Uno::String::op_Equality(*path, uPtr(curPage)->Path) && (uPtr(curPage)->Visual != NULL))
    {
        *result = uPtr(curPage)->Visual;

        if (::g::Uno::String::op_Equality(*parameter, curPage->Parameter))
            return 0;

        bool compat = CompatibleParameter(*parameter, curPage->Parameter);
        bool reuse = (operation == 0) && IsReuseLevel(curPage->Visual, 5);
        bool replace = (operation == 2) && IsReuseLevel(curPage->Visual, 4);
        bool nonTemplate = !uPtr(::g::Fuse::Controls::NavigationControl::GetPageData(curPage->Visual, true))->FromTemplate;

        if (((compat || reuse) || replace) || nonTemplate)
        {
            uPtr(uPtr(curPage)->Visual)->Parameter(*parameter);
            curPage->Parameter = *parameter;
            return 1;
        }
    }

    if ((curPage != _prepared) && (uPtr(_prepared)->Visual != NULL))
    {
        if (::g::Uno::String::op_Equality(uPtr(_prepared)->Path, *path) && ::g::Uno::String::op_Equality(uPtr(_prepared)->Parameter, *parameter))
        {
            AddToCache(curPage, uPtr(_prepared)->Visual);
            uPtr(curPage)->CopyFrom(_prepared);
            uPtr(curPage->Visual)->Parameter(*parameter);
            *result = curPage->Visual;
            *usedPrepared = true;
            return 2;
        }
    }

    ::g::Fuse::Visual* useVisual = NULL;

    if (::g::Uno::String::op_Equality(*path, NULL))
        useVisual = NULL;
    else
    {
        ::g::Uno::Collections::List* cache = GetCache(*path);
        int priority = 0;
        int useAt = -1;

        for (int i = 0; i < uPtr(cache)->Count(); i++)
        {
            ::g::Fuse::Visual* c = (::g::Uno::Collections::List__get_Item_fn(uPtr(cache), uCRef<int>(i), &ret9), ret9);

            if (uPtr(c)->HasPendingRemove())
                continue;

            int np = 0;

            if (uPtr(c)->IsRootingStarted())
            {
                if (::g::Uno::String::op_Equality(uPtr(c)->Parameter(), *parameter))
                    np = 10;
                else if (IsReuseLevel(c, 3))
                    np = 5;
            }
            else if (IsReuseLevel(c, 2))
                np = 1;

            if (np > priority)
            {
                priority = np;
                useAt = i;
                useVisual = c;
            }
        }

        if (useAt >= 0)
            uPtr(cache)->RemoveAt(useAt);

        if (useVisual == NULL)
        {
            useVisual = GetVisual(*path);

            if (useVisual == NULL)
                return 3;
        }
    }

    if (useVisual != NULL)
    {
        if (::g::Uno::String::op_Inequality(*parameter, NULL))
            uPtr(useVisual)->Parameter(*parameter);

        if (!(::g::Uno::Collections::ICollection::Contains_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), useVisual, &ret10), ret10))
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), useVisual);
    }

    *result = useVisual;
    return 2;
}

// internal void ReleasePage(Fuse.Visual v) [instance] :1741
void Navigator::ReleasePage(::g::Fuse::Visual* v)
{
    uStackFrame __("Fuse.Controls.Navigator", "ReleasePage(Fuse.Visual)");

    if (IsRemoveLevel(v, 3) || (Navigator::GetReuse(v) == 1))
        BeginRemoveChild(v, NULL);
}

// public new Fuse.Controls.RemoveType get_Remove() [instance] :1724
int Navigator::Remove2()
{
    return _remove;
}

// public new void set_Remove(Fuse.Controls.RemoveType value) [instance] :1725
void Navigator::Remove2(int value)
{
    _remove = value;
}

// private void ResolveDeferred() [instance] :1545
void Navigator::ResolveDeferred()
{
    uStackFrame __("Fuse.Controls.Navigator", "ResolveDeferred()");

    if (_deferred == NULL)
        return;

    Navigator__DeferSwitch* deferred = _deferred;
    _deferred = NULL;

    if (((uPtr(deferred)->Page != uPtr(_current)->Visual) && (uPtr(_current)->Visual != NULL)) && (uPtr(deferred)->Operation != 0))
        uPtr(Navigation1())->SetPageProgress1(uPtr(_current)->Visual, (float)((uPtr(deferred)->Operation == 1) ? -1 : 1), 0.0f, false);

    AddToCache(_current, uPtr(deferred)->Page);
    uPtr(_current)->Path = deferred->Path;
    uPtr(_current)->Parameter = deferred->Parameter;
    uPtr(_current)->Visual = deferred->Page;

    if (deferred->Operation == 0)
        CleanupChildren(uPtr(deferred)->Page);

    if ((deferred->Page != NULL) && (GotoState() == 1))
        BringToFront(uPtr(deferred)->Page);

    uPtr(Navigation1())->Goto(deferred->Page, deferred->GotoMode);
    CheckInteraction();
    UpdateNavigationState();
}

// public Fuse.Controls.ReuseType get_Reuse() [instance] :1678
int Navigator::Reuse()
{
    return _reuse;
}

// public void set_Reuse(Fuse.Controls.ReuseType value) [instance] :1679
void Navigator::Reuse(int value)
{
    _reuse = value;
}

// private void RootInteraction() [instance] :812
void Navigator::RootInteraction()
{
    uStackFrame __("Fuse.Controls.Navigator", "RootInteraction()");
    bool ret11;

    if (SwipeBack() == 0)
    {
        if (_navigatorSwipeBack != NULL)
        {
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _navigatorSwipeBack, &ret11);
            _navigatorSwipeBack = NULL;
        }

        return;
    }

    uPtr(NavigatorSwipeBack())->Direction(SwipeBack());
    uPtr(NavigatorSwipeBack())->How(0);
    HitTestMode(HitTestMode() | 2);
    _router = ::g::Fuse::Navigation::Router::TryFindRouter(this);

    if (_router == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[59/*"Navigator r...*/], this, ::STRINGS[14/*"/Users/medb...*/], 835, ::STRINGS[60/*"RootInterac...*/], NULL);
        return;
    }

    uPtr(_router)->add_HistoryChanged(uDelegate::New(::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/], (void*)Navigator__OnHistoryChanged_fn, this));
    OnHistoryChanged(NULL);
}

// internal void SetTransitionState(object owner, bool on) [instance] :1041
void Navigator::SetTransitionState(uObject* owner, bool on)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetTransitionState(object,bool)");

    if (!on)
        _activeTransitions.Remove(::TYPES[59/*Fuse.Internal.MiniList<object>*/], owner);
    else if (!_activeTransitions.Contains(::TYPES[59/*Fuse.Internal.MiniList<object>*/], owner))
        _activeTransitions.Add(::TYPES[59/*Fuse.Internal.MiniList<object>*/], owner);

    UpdateNavigationState();
}

// public Fuse.Controls.NavigatorSwipeDirection get_SwipeBack() [instance] :793
int Navigator::SwipeBack()
{
    return _swipeBack;
}

// public void set_SwipeBack(Fuse.Controls.NavigatorSwipeDirection value) [instance] :794
void Navigator::SwipeBack(int value)
{
    _swipeBack = value;
}

// private void SwitchDeferred() [instance] :1519
void Navigator::SwitchDeferred()
{
    uStackFrame __("Fuse.Controls.Navigator", "SwitchDeferred()");
    Navigator__DeferSwitch* deferred = _deferred;

    if (deferred == NULL)
        return;

    if ((uPtr(deferred)->Page != NULL) && !_listenTimeout)
    {
        int busy = ::g::Fuse::Triggers::BusyTask::GetBusyActivity(uPtr(deferred)->Page, 0);

        if ((busy & DeferPageSwitch()) != 0)
        {
            if (_listenBusy == NULL)
            {
                _listenBusy = uPtr(deferred)->Page;
                _listenStart = ::g::Fuse::Time::FrameTime();
                _listenTimeout = false;
                ::g::Fuse::Triggers::BusyTask::AddListener(_listenBusy, uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__BusyChanged_fn, this));
                ::g::Fuse::UpdateManager::AddAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__OnUpdate_fn, this), 0);
            }

            return;
        }
    }

    ResolveDeferred();
}

// internal generated void add_Switched(Fuse.Controls.NavigationSwitchedHandler value) [instance] :1610
void Navigator::add_Switched(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Navigator", "add_Switched(Fuse.Controls.NavigationSwitchedHandler)");
    Switched1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(Switched1, value), ::TYPES[61/*Fuse.Controls.NavigationSwitchedHandler*/]);
}

// internal generated void remove_Switched(Fuse.Controls.NavigationSwitchedHandler value) [instance] :1610
void Navigator::remove_Switched(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Navigator", "remove_Switched(Fuse.Controls.NavigationSwitchedHandler)");
    Switched1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(Switched1, value), ::TYPES[61/*Fuse.Controls.NavigationSwitchedHandler*/]);
}

// private void SwitchToPage(string path, string parameter, Fuse.Visual v, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation operation, string operationStyle, bool usedPrepared) [instance] :1431
void Navigator::SwitchToPage(uString* path, uString* parameter, ::g::Fuse::Visual* v, int gotoMode, int operation, uString* operationStyle, bool usedPrepared)
{
    uStackFrame __("Fuse.Controls.Navigator", "SwitchToPage(string,string,Fuse.Visual,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,bool)");
    ::g::Fuse::Controls::NavigatorSwitchedArgs* collection2;
    Navigator__DeferSwitch* collection3;
    collection2 = ::g::Fuse::Controls::NavigatorSwitchedArgs::New3(this);
    uPtr(collection2)->OldPath = uPtr(_current)->Path;
    uPtr(collection2)->NewPath = path;
    uPtr(collection2)->OldParameter = uPtr(_current)->Parameter;
    uPtr(collection2)->NewParameter = parameter;
    uPtr(collection2)->OldVisual = uPtr(_current)->Visual;
    uPtr(collection2)->NewVisual = v;
    uPtr(collection2)->Operation = operation;
    uPtr(collection2)->OperationStyle = operationStyle;
    uPtr(collection2)->Mode = gotoMode;
    ::g::Fuse::Controls::NavigatorSwitchedArgs* args = collection2;
    OnSwitched(args);

    if ((v != NULL) && !usedPrepared)
    {
        int ds = (operation == 3) ? -1 : (operation == 0) ? 1 : 1;
        uPtr(Navigation1())->SetPageProgress1(v, (float)ds, (float)ds, false);
        uPtr(Navigation1())->UpdateProgress(1);
    }

    _deferred = (collection3 = Navigator__DeferSwitch::New1(), uPtr(collection3)->Path = path, uPtr(collection3)->Parameter = parameter, uPtr(collection3)->Page = v, uPtr(collection3)->GotoMode = gotoMode, uPtr(collection3)->Operation = operation, collection3);
    CleanupListenBusy();
    UpdateNavigationState();
    ::g::Fuse::UpdateManager::AddDeferredAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Navigator__SwitchDeferred_fn, this), ::g::Fuse::LayoutPriority::Later());
}

// private void UnrootInteraction() [instance] :844
void Navigator::UnrootInteraction()
{
}

// private void UpdateNavigationState() [instance] :1050
void Navigator::UpdateNavigationState()
{
    uStackFrame __("Fuse.Controls.Navigator", "UpdateNavigationState()");
    bool hasTrans = _activeTransitions.Count(::TYPES[59/*Fuse.Internal.MiniList<object>*/]) > 0;
    bool hasDefer = _deferred != NULL;
    bool isOn = hasTrans || hasDefer;
    uPtr(Navigation1())->SetState(isOn ? 2 : 0);
}

// public static bool GetIsReusable(Fuse.Visual elm) [static] :1644
bool Navigator::GetIsReusable(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetIsReusable(Fuse.Visual)");
    Navigator_typeof()->Init();
    return Navigator::GetReuse(elm) == 5;
}

// public static Fuse.Controls.RemoveType GetRemove(Fuse.Visual elm) [static] :1704
int Navigator::GetRemove(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetRemove(Fuse.Visual)");
    Navigator_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propRemove(), &res))
        return uUnbox<int>(::g::Fuse::Controls::RemoveType_typeof(), res);

    return 0;
}

// public static Fuse.Controls.ReuseType GetReuse(Fuse.Visual elm) [static] :1658
int Navigator::GetReuse(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetReuse(Fuse.Visual)");
    Navigator_typeof()->Init();
    uObject* res;

    if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propReuse(), &res))
        return uUnbox<int>(::g::Fuse::Controls::ReuseType_typeof(), res);

    return 0;
}

// public static Fuse.Controls.NavigatorSwipeDirection GetSwipeBack(Fuse.Visual elm) [static] :882
int Navigator::GetSwipeBack(::g::Fuse::Visual* elm)
{
    uStackFrame __("Fuse.Controls.Navigator", "GetSwipeBack(Fuse.Visual)");
    Navigator_typeof()->Init();

    if (elm != NULL)
    {
        uObject* res;

        if (uPtr(uPtr(elm)->Properties())->TryGet(Navigator::_propSwipeBack(), &res))
            return uUnbox<int>(::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), res);
    }

    return 1;
}

// public Navigator New() [static] :1027
Navigator* Navigator::New4()
{
    Navigator* obj4 = (Navigator*)uNew(Navigator_typeof());
    obj4->ctor_8();
    return obj4;
}

// public static void SetIsReusable(Fuse.Visual elm, bool value) [static] :1636
void Navigator::SetIsReusable(::g::Fuse::Visual* elm, bool value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetIsReusable(Fuse.Visual,bool)");
    Navigator_typeof()->Init();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[61/*"Use `Reuse=...*/], elm, ::STRINGS[14/*"/Users/medb...*/], 1639, ::STRINGS[62/*"SetIsReusable"*/]);
    Navigator::SetReuse(elm, value ? 5 : 4);
}

// public static void SetRemove(Fuse.Visual elm, Fuse.Controls.RemoveType value) [static] :1698
void Navigator::SetRemove(::g::Fuse::Visual* elm, int value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetRemove(Fuse.Visual,Fuse.Controls.RemoveType)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propRemove(), uBox<int>(::g::Fuse::Controls::RemoveType_typeof(), value));
}

// public static void SetReuse(Fuse.Visual elm, Fuse.Controls.ReuseType value) [static] :1652
void Navigator::SetReuse(::g::Fuse::Visual* elm, int value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetReuse(Fuse.Visual,Fuse.Controls.ReuseType)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propReuse(), uBox<int>(::g::Fuse::Controls::ReuseType_typeof(), value));
}

// public static void SetSwipeBack(Fuse.Visual elm, Fuse.Controls.NavigatorSwipeDirection value) [static] :876
void Navigator::SetSwipeBack(::g::Fuse::Visual* elm, int value)
{
    uStackFrame __("Fuse.Controls.Navigator", "SetSwipeBack(Fuse.Visual,Fuse.Controls.NavigatorSwipeDirection)");
    Navigator_typeof()->Init();
    uPtr(uPtr(elm)->Properties())->Set(Navigator::_propSwipeBack(), uBox<int>(::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), value));
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigatorGotoState :910
uEnumType* NavigatorGotoState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorGotoState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Unchanged", 0LL,
        "BringToFront", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class NavigatorSwipe :1839
// {
static void NavigatorSwipe_build(uType* type)
{
    ::STRINGS[65] = uString::Const("SwipeNavigator requires a Router for interaction");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[39] = uString::Const("OnRooted");
    ::STRINGS[66] = uString::Const("SwipeNavigator requires an Element parent");
    ::TYPES[62] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Triggers::Actions::TriggerAction_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[63] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(17,
        ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _direction), 0,
        ::g::Fuse::Controls::NavigatorSwipeHow_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _how), 0,
        ::g::Fuse::Navigation::RouterModify_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _modify), 0,
        ::g::Fuse::Animations::Animator_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _prepareAnim), 0,
        ::g::Fuse::Navigation::Router_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _router), 0,
        ::g::Fuse::Gestures::SwipingAnimation_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _swipeAnim), 0,
        ::g::Fuse::Gestures::Swiped_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _swipedCancelled), 0,
        ::g::Fuse::Gestures::Swiped_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _swipedCompleted), 0,
        ::g::Fuse::Gestures::SwipeGesture_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwipe, _swipeGesture), 0);
    type->Reflection.SetFunctions(11,
        new uFunction("get_Bookmark", NULL, (void*)NavigatorSwipe__get_Bookmark_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Bookmark", NULL, (void*)NavigatorSwipe__set_Bookmark_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_Direction", NULL, (void*)NavigatorSwipe__get_Direction_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof(), 0),
        new uFunction("set_Direction", NULL, (void*)NavigatorSwipe__set_Direction_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeDirection_typeof()),
        new uFunction("get_How", NULL, (void*)NavigatorSwipe__get_How_fn, 0, false, ::g::Fuse::Controls::NavigatorSwipeHow_typeof(), 0),
        new uFunction("set_How", NULL, (void*)NavigatorSwipe__set_How_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigatorSwipeHow_typeof()),
        new uFunction("get_IsEnabled", NULL, (void*)NavigatorSwipe__get_IsEnabled_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsEnabled", NULL, (void*)NavigatorSwipe__set_IsEnabled_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)NavigatorSwipe__New2_fn, 0, true, type, 0),
        new uFunction("get_Style", NULL, (void*)NavigatorSwipe__get_Style_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Style", NULL, (void*)NavigatorSwipe__set_Style_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

::g::Fuse::Node_type* NavigatorSwipe_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::NodeGroupBase_typeof();
    options.FieldCount = 26;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(NavigatorSwipe);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.NavigatorSwipe", options);
    type->fp_build_ = NavigatorSwipe_build;
    type->fp_ctor_ = (void*)NavigatorSwipe__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))NavigatorSwipe__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))NavigatorSwipe__OnUnrooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public NavigatorSwipe() :1922
void NavigatorSwipe__ctor_4_fn(NavigatorSwipe* __this)
{
    __this->ctor_4();
}

// public string get_Bookmark() :1904
void NavigatorSwipe__get_Bookmark_fn(NavigatorSwipe* __this, uString** __retval)
{
    *__retval = __this->Bookmark();
}

// public void set_Bookmark(string value) :1905
void NavigatorSwipe__set_Bookmark_fn(NavigatorSwipe* __this, uString* value)
{
    __this->Bookmark(value);
}

// public Fuse.Controls.NavigatorSwipeDirection get_Direction() :1844
void NavigatorSwipe__get_Direction_fn(NavigatorSwipe* __this, int* __retval)
{
    *__retval = __this->Direction();
}

// public void set_Direction(Fuse.Controls.NavigatorSwipeDirection value) :1845
void NavigatorSwipe__set_Direction_fn(NavigatorSwipe* __this, int* value)
{
    __this->Direction(*value);
}

// private Fuse.Gestures.SwipeDirection get_GestureSwipeDirection() :1858
void NavigatorSwipe__get_GestureSwipeDirection_fn(NavigatorSwipe* __this, int* __retval)
{
    *__retval = __this->GestureSwipeDirection();
}

// public Fuse.Controls.NavigatorSwipeHow get_How() :1882
void NavigatorSwipe__get_How_fn(NavigatorSwipe* __this, int* __retval)
{
    *__retval = __this->How();
}

// public void set_How(Fuse.Controls.NavigatorSwipeHow value) :1883
void NavigatorSwipe__set_How_fn(NavigatorSwipe* __this, int* value)
{
    __this->How(*value);
}

// public bool get_IsEnabled() :1875
void NavigatorSwipe__get_IsEnabled_fn(NavigatorSwipe* __this, bool* __retval)
{
    *__retval = __this->IsEnabled();
}

// public void set_IsEnabled(bool value) :1876
void NavigatorSwipe__set_IsEnabled_fn(NavigatorSwipe* __this, bool* value)
{
    __this->IsEnabled(*value);
}

// public NavigatorSwipe New() :1922
void NavigatorSwipe__New2_fn(NavigatorSwipe** __retval)
{
    *__retval = NavigatorSwipe::New2();
}

// protected override sealed void OnRooted() :1945
void NavigatorSwipe__OnRooted_fn(NavigatorSwipe* __this)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "OnRooted()");
    ::g::Fuse::Animations::Change* collection3;
    ::g::Fuse::NodeGroupBase__OnRooted_fn(__this);
    __this->_router = ::g::Fuse::Navigation::Router::TryFindRouter(__this);

    if (__this->_router == NULL)
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[65/*"SwipeNaviga...*/], __this, ::STRINGS[14/*"/Users/medb...*/], 1952, ::STRINGS[39/*"OnRooted"*/], NULL);
        return;
    }

    if (!uIs((::g::Fuse::Visual*)__this->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]))
    {
        ::g::Fuse::Diagnostics::UserError(::STRINGS[66/*"SwipeNaviga...*/], __this, ::STRINGS[14/*"/Users/medb...*/], 1957, ::STRINGS[39/*"OnRooted"*/], NULL);
        return;
    }

    uPtr(__this->_swipeGesture)->Direction(__this->GestureSwipeDirection());
    uPtr(__this->_swipeGesture)->LengthNode(uAs< ::g::Fuse::Elements::Element*>(__this->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]));
    uPtr(__this->_swipeGesture)->IsEnabled(__this->Direction() != 0);
    __this->_prepareAnim = (collection3 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[63/*Fuse.Animations.Change<double>*/], ::g::Fuse::Controls::Router_PrepareProgress_Property::New1(__this->_router)), ::g::Fuse::Animations::Change__set_Value_fn(uPtr(collection3), uCRef(1.0)), 1.0, collection3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->_swipeAnim)->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), __this->_prepareAnim);
}

// protected override sealed void OnUnrooted() :1971
void NavigatorSwipe__OnUnrooted_fn(NavigatorSwipe* __this)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "OnUnrooted()");
    bool ret5;
    ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(__this->_swipeAnim)->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), __this->_prepareAnim, &ret5);
    __this->_prepareAnim = NULL;
    __this->_router = NULL;
    ::g::Fuse::NodeGroupBase__OnUnrooted_fn(__this);
}

// public string get_Style() :1910
void NavigatorSwipe__get_Style_fn(NavigatorSwipe* __this, uString** __retval)
{
    *__retval = __this->Style();
}

// public void set_Style(string value) :1911
void NavigatorSwipe__set_Style_fn(NavigatorSwipe* __this, uString* value)
{
    __this->Style(value);
}

// public NavigatorSwipe() [instance] :1922
void NavigatorSwipe::ctor_4()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", ".ctor()");
    ::g::Fuse::Navigation::RouterModify* collection1;
    ::g::Fuse::Navigation::RouterModify* collection2;
    _swipeGesture = ::g::Fuse::Gestures::SwipeGesture::New2();
    _modify = (collection1 = ::g::Fuse::Navigation::RouterModify::New2(), uPtr(collection1)->When(3), 3, collection1);
    ctor_3();
    UseContent(true);
    How(0);
    _swipeAnim = ::g::Fuse::Gestures::SwipingAnimation::New2(_swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipeAnim)->Actions()), ::TYPES[62/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), _modify);
    _swipedCompleted = ::g::Fuse::Gestures::Swiped::New2(_swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipedCompleted)->Actions()), ::TYPES[62/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), (collection2 = ::g::Fuse::Navigation::RouterModify::New2(), uPtr(collection2)->How(7), 7, collection2));
    _swipedCancelled = ::g::Fuse::Gestures::Swiped::New2(_swipeGesture);
    uPtr(_swipedCancelled)->How(3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_swipedCancelled)->Actions()), ::TYPES[62/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), ::g::Fuse::Navigation::RouterCancelNavigation::New2());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipeGesture);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipeAnim);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipedCompleted);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Nodes()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _swipedCancelled);
}

// public string get_Bookmark() [instance] :1904
uString* NavigatorSwipe::Bookmark()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "get_Bookmark()");
    return uPtr(_modify)->Bookmark();
}

// public void set_Bookmark(string value) [instance] :1905
void NavigatorSwipe::Bookmark(uString* value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Bookmark(string)");
    uPtr(_modify)->Bookmark(value);
}

// public Fuse.Controls.NavigatorSwipeDirection get_Direction() [instance] :1844
int NavigatorSwipe::Direction()
{
    return _direction;
}

// public void set_Direction(Fuse.Controls.NavigatorSwipeDirection value) [instance] :1845
void NavigatorSwipe::Direction(int value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Direction(Fuse.Controls.NavigatorSwipeDirection)");
    _direction = value;

    if (_swipeGesture != NULL)
    {
        uPtr(_swipeGesture)->Direction(GestureSwipeDirection());
        uPtr(_swipeGesture)->IsEnabled(Direction() != 0);
    }
}

// private Fuse.Gestures.SwipeDirection get_GestureSwipeDirection() [instance] :1858
int NavigatorSwipe::GestureSwipeDirection()
{
    switch (Direction())
    {
        case 2:
            return 0;
        case 4:
            return 2;
        case 3:
            return 1;
        case 5:
            return 3;
    }

    return 0;
}

// public Fuse.Controls.NavigatorSwipeHow get_How() [instance] :1882
int NavigatorSwipe::How()
{
    return _how;
}

// public void set_How(Fuse.Controls.NavigatorSwipeHow value) [instance] :1883
void NavigatorSwipe::How(int value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_How(Fuse.Controls.NavigatorSwipeHow)");
    _how = value;

    switch (_how)
    {
        case 0:
        {
            uPtr(_modify)->How(4);
            break;
        }
        case 1:
        {
            uPtr(_modify)->How(5);
            break;
        }
        case 2:
        {
            uPtr(_modify)->How(6);
            break;
        }
    }
}

// public bool get_IsEnabled() [instance] :1875
bool NavigatorSwipe::IsEnabled()
{
    return UseContent();
}

// public void set_IsEnabled(bool value) [instance] :1876
void NavigatorSwipe::IsEnabled(bool value)
{
    UseContent(value);
}

// public string get_Style() [instance] :1910
uString* NavigatorSwipe::Style()
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "get_Style()");
    return uPtr(_modify)->Style();
}

// public void set_Style(string value) [instance] :1911
void NavigatorSwipe::Style(uString* value)
{
    uStackFrame __("Fuse.Controls.NavigatorSwipe", "set_Style(string)");
    uPtr(_modify)->Style(value);
}

// public NavigatorSwipe New() [static] :1922
NavigatorSwipe* NavigatorSwipe::New2()
{
    NavigatorSwipe* obj4 = (NavigatorSwipe*)uNew(NavigatorSwipe_typeof());
    obj4->ctor_4();
    return obj4;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigatorSwipeDirection :1774
uEnumType* NavigatorSwipeDirection_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorSwipeDirection", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "None", 0LL,
        "Default", 1LL,
        "Left", 2LL,
        "Up", 3LL,
        "Right", 4LL,
        "Down", 5LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum NavigatorSwipeHow :1786
uEnumType* NavigatorSwipeHow_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.NavigatorSwipeHow", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Back", 0LL,
        "PushBookmark", 1LL,
        "GotoBookmark", 2LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class NavigatorSwitchedArgs :918
// {
static void NavigatorSwitchedArgs_build(uType* type)
{
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(::g::Fuse::VisualEventArgs_type, interface0));
    type->SetFields(2,
        ::g::Fuse::Navigation::NavigationGotoMode_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, Mode), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, NewParameter), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, NewPath), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, NewVisual), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, OldParameter), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, OldPath), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, OldVisual), 0,
        ::g::Fuse::Navigation::RoutingOperation_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, Operation), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::NavigatorSwitchedArgs, OperationStyle), 0);
}

::g::Fuse::VisualEventArgs_type* NavigatorSwitchedArgs_typeof()
{
    static uSStrong< ::g::Fuse::VisualEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::VisualEventArgs_typeof();
    options.FieldCount = 11;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(NavigatorSwitchedArgs);
    options.TypeSize = sizeof(::g::Fuse::VisualEventArgs_type);
    type = (::g::Fuse::VisualEventArgs_type*)uClassType::New("Fuse.Controls.NavigatorSwitchedArgs", options);
    type->fp_build_ = NavigatorSwitchedArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))::g::Fuse::VisualEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public NavigatorSwitchedArgs(Fuse.Visual v) :927
void NavigatorSwitchedArgs__ctor_2_fn(NavigatorSwitchedArgs* __this, ::g::Fuse::Visual* v)
{
    __this->ctor_2(v);
}

// public NavigatorSwitchedArgs New(Fuse.Visual v) :927
void NavigatorSwitchedArgs__New3_fn(::g::Fuse::Visual* v, NavigatorSwitchedArgs** __retval)
{
    *__retval = NavigatorSwitchedArgs::New3(v);
}

// public NavigatorSwitchedArgs(Fuse.Visual v) [instance] :927
void NavigatorSwitchedArgs::ctor_2(::g::Fuse::Visual* v)
{
    uStackFrame __("Fuse.Controls.NavigatorSwitchedArgs", ".ctor(Fuse.Visual)");
    ctor_1(v);
}

// public NavigatorSwitchedArgs New(Fuse.Visual v) [static] :927
NavigatorSwitchedArgs* NavigatorSwitchedArgs::New3(::g::Fuse::Visual* v)
{
    NavigatorSwitchedArgs* obj1 = (NavigatorSwitchedArgs*)uNew(NavigatorSwitchedArgs_typeof());
    obj1->ctor_2(v);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// private sealed class Navigator.NavPage :1380
// {
static void Navigator__NavPage_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Navigator__NavPage, Parameter), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Navigator__NavPage, Path), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::Navigator__NavPage, Visual), 0);
}

uType* Navigator__NavPage_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 3;
    options.ObjectSize = sizeof(Navigator__NavPage);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Navigator.NavPage", options);
    type->fp_build_ = Navigator__NavPage_build;
    type->fp_ctor_ = (void*)Navigator__NavPage__New1_fn;
    return type;
}

// public generated NavPage() :1380
void Navigator__NavPage__ctor__fn(Navigator__NavPage* __this)
{
    __this->ctor_();
}

// public void CopyFrom(Fuse.Controls.Navigator.NavPage o) :1393
void Navigator__NavPage__CopyFrom_fn(Navigator__NavPage* __this, Navigator__NavPage* o)
{
    __this->CopyFrom(o);
}

// public generated NavPage New() :1380
void Navigator__NavPage__New1_fn(Navigator__NavPage** __retval)
{
    *__retval = Navigator__NavPage::New1();
}

// public void Reset() :1386
void Navigator__NavPage__Reset_fn(Navigator__NavPage* __this)
{
    __this->Reset();
}

// public generated NavPage() [instance] :1380
void Navigator__NavPage::ctor_()
{
}

// public void CopyFrom(Fuse.Controls.Navigator.NavPage o) [instance] :1393
void Navigator__NavPage::CopyFrom(Navigator__NavPage* o)
{
    uStackFrame __("Fuse.Controls.Navigator.NavPage", "CopyFrom(Fuse.Controls.Navigator.NavPage)");
    Path = uPtr(o)->Path;
    Parameter = o->Parameter;
    Visual = o->Visual;
}

// public void Reset() [instance] :1386
void Navigator__NavPage::Reset()
{
    Path = NULL;
    Parameter = NULL;
    Visual = NULL;
}

// public generated NavPage New() [static] :1380
Navigator__NavPage* Navigator__NavPage::New1()
{
    Navigator__NavPage* obj1 = (Navigator__NavPage*)uNew(Navigator__NavPage_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public sealed class Number :1639
// {
// static Number() :1639
static void Number__cctor_4_fn(uType* __type)
{
    Number::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void Number_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[67] = uString::Const("F0");
    ::STRINGS[68] = uString::Const("{0:F0}");
    ::STRINGS[69] = uString::Const("The Number control has been deprecated. Use a Text control instead and do the formatting inside JavaScript.");
    ::STRINGS[70] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    ::STRINGS[71] = uString::Const("{0:");
    ::STRINGS[72] = uString::Const("}");
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[64] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[65] = ::g::Uno::Exception_typeof();
    ::TYPES[66] = uObject_typeof()->Array();
    ::TYPES[67] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Number_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Number_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Number_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Number_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Number_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Number_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(Number_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Number_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Number_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Number_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Number_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Number_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Number_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(Number_type, interface15));
    type->SetFields(103,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Number, _format), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Number, _formatString), 0,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(::g::Fuse::Controls::Number, _text), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Number, _value), 0,
        ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/], offsetof(::g::Fuse::Controls::Number, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Number::_valueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(9,
        new uFunction("get_Format", NULL, (void*)Number__get_Format_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Format", NULL, (void*)Number__set_Format_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_FormatString", NULL, (void*)Number__get_FormatString_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_FormatString", NULL, (void*)Number__set_FormatString_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction(".ctor", NULL, (void*)Number__New4_fn, 0, true, type, 0),
        new uFunction("get_Value", NULL, (void*)Number__get_Value_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)Number__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)Number__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)Number__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]));
}

Number_type* Number_typeof()
{
    static uSStrong<Number_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 109;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(Number);
    options.TypeSize = sizeof(Number_type);
    type = (Number_type*)uClassType::New("Fuse.Controls.Number", options);
    type->fp_build_ = Number_build;
    type->fp_ctor_ = (void*)Number__New4_fn;
    type->fp_cctor_ = Number__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Number__OnRooted_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))Number__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))Number__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))Number__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))Number__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Number() :1642
void Number__ctor_7_fn(Number* __this)
{
    __this->ctor_7();
}

// public string get_Format() :1658
void Number__get_Format_fn(Number* __this, uString** __retval)
{
    *__retval = __this->Format();
}

// public void set_Format(string value) :1659
void Number__set_Format_fn(Number* __this, uString* value)
{
    __this->Format(value);
}

// public string get_FormatString() :1674
void Number__get_FormatString_fn(Number* __this, uString** __retval)
{
    *__retval = __this->FormatString();
}

// public void set_FormatString(string value) :1675
void Number__set_FormatString_fn(Number* __this, uString* value)
{
    __this->FormatString(value);
}

// public Number New() :1642
void Number__New4_fn(Number** __retval)
{
    *__retval = Number::New4();
}

// protected override sealed void OnRooted() :1649
void Number__OnRooted_fn(Number* __this)
{
    uStackFrame __("Fuse.Controls.Number", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->UpdateValue();
}

// private void OnValueChanged(float n, Uno.UX.IPropertyListener origin) :1703
void Number__OnValueChanged_fn(Number* __this, float* n, uObject* origin)
{
    __this->OnValueChanged(*n, origin);
}

// private void UpdateValue() :1713
void Number__UpdateValue_fn(Number* __this)
{
    __this->UpdateValue();
}

// public float get_Value() :1688
void Number__get_Value_fn(Number* __this, float* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(float value) :1689
void Number__set_Value_fn(Number* __this, float* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float> value) :1701
void Number__add_ValueChanged_fn(Number* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float> value) :1701
void Number__remove_ValueChanged_fn(Number* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector Number::_valueName_;

// public Number() [instance] :1642
void Number::ctor_7()
{
    uStackFrame __("Fuse.Controls.Number", ".ctor()");
    _format = ::STRINGS[67/*"F0"*/];
    _formatString = ::STRINGS[68/*"{0:F0}"*/];
    ctor_6();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[69/*"The Number ...*/], this, ::STRINGS[70/*"/Users/medb...*/], 1644, ::STRINGS[19/*".ctor"*/]);
    _text = ::g::Fuse::Controls::Text::New3();
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _text);
}

// public string get_Format() [instance] :1658
uString* Number::Format()
{
    return _format;
}

// public void set_Format(string value) [instance] :1659
void Number::Format(uString* value)
{
    uStackFrame __("Fuse.Controls.Number", "set_Format(string)");
    uString* newFormatString = ::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[71/*"{0:"*/], value), ::STRINGS[72/*"}"*/]);

    if (::g::Uno::String::op_Inequality(_format, value) || ::g::Uno::String::op_Inequality(_formatString, newFormatString))
    {
        _format = value;
        _formatString = newFormatString;
        UpdateValue();
    }
}

// public string get_FormatString() [instance] :1674
uString* Number::FormatString()
{
    return _formatString;
}

// public void set_FormatString(string value) [instance] :1675
void Number::FormatString(uString* value)
{
    uStackFrame __("Fuse.Controls.Number", "set_FormatString(string)");

    if (::g::Uno::String::op_Inequality(_formatString, value))
    {
        _formatString = value;
        UpdateValue();
    }
}

// private void OnValueChanged(float n, Uno.UX.IPropertyListener origin) [instance] :1703
void Number::OnValueChanged(float n, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Number", "OnValueChanged(float,Uno.UX.IPropertyListener)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    OnPropertyChanged(Number::_valueName());

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
    {
        ::g::Uno::UX::ValueChangedArgs* args = (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[64/*Uno.UX.ValueChangedArgs<float>*/], uCRef(n), &ret2), ret2);
        uPtr(ValueChanged1)->Invoke(2, uBox(::g::Uno::Float_typeof(), n), args);
    }
}

// private void UpdateValue() [instance] :1713
void Number::UpdateValue()
{
    uStackFrame __("Fuse.Controls.Number", "UpdateValue()");

    try
    {
        uPtr(_text)->Value(::g::Uno::String::Format(FormatString(), uArray::Init<uObject*>(::TYPES[66/*object[]*/], 1, uBox(::g::Uno::Float_typeof(), Value()))));
    }
    catch (const uThrowable& __t)
    {
        ::g::Uno::Exception* e = __t.Exception;
        U_THROW(e);
    }
}

// public float get_Value() [instance] :1688
float Number::Value()
{
    return _value;
}

// public void set_Value(float value) [instance] :1689
void Number::Value(float value)
{
    uStackFrame __("Fuse.Controls.Number", "set_Value(float)");

    if (_value != value)
    {
        _value = value;
        UpdateValue();
        OnValueChanged(value, (uObject*)this);
    }
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :1701
void Number::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Number", "add_ValueChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :1701
void Number::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Number", "remove_ValueChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public Number New() [static] :1642
Number* Number::New4()
{
    Number* obj1 = (Number*)uNew(Number_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public class Page :2031
// {
static void Page_build(uType* type)
{
    ::STRINGS[73] = uString::Const("Title");
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[68] = ::g::Uno::String_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Controls::PageFreeze_typeof(), offsetof(::g::Fuse::Controls::Page, _freeze), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::Page, _freezeTrigger), 0);
    type->Reflection.SetFunctions(7,
        new uFunction("get_Freeze", NULL, (void*)Page__get_Freeze_fn, 0, false, ::g::Fuse::Controls::PageFreeze_typeof(), 0),
        new uFunction("set_Freeze", NULL, (void*)Page__set_Freeze_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::PageFreeze_typeof()),
        new uFunction(".ctor", NULL, (void*)Page__New4_fn, 0, true, type, 0),
        new uFunction("RestoreState", NULL, (void*)Page__RestoreState_fn, 0, false, uVoid_typeof(), 1, uObject_typeof()),
        new uFunction("SaveState", NULL, (void*)Page__SaveState_fn, 0, false, uObject_typeof(), 0),
        new uFunction("get_Title", NULL, (void*)Page__get_Title_fn, 0, false, ::TYPES[68/*string*/], 0),
        new uFunction("set_Title", NULL, (void*)Page__set_Title_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]));
}

::g::Fuse::Controls::Control_type* Page_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Page);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.Page", options);
    type->fp_build_ = Page_build;
    type->fp_ctor_ = (void*)Page__New4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Page__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Page__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Page() :2033
void Page__ctor_7_fn(Page* __this)
{
    __this->ctor_7();
}

// private void CleanupFreezeTrigger() :2100
void Page__CleanupFreezeTrigger_fn(Page* __this)
{
    __this->CleanupFreezeTrigger();
}

// public Fuse.Controls.PageFreeze get_Freeze() :2129
void Page__get_Freeze_fn(Page* __this, int* __retval)
{
    *__retval = __this->Freeze();
}

// public void set_Freeze(Fuse.Controls.PageFreeze value) :2130
void Page__set_Freeze_fn(Page* __this, int* value)
{
    __this->Freeze(*value);
}

// public Page New() :2033
void Page__New4_fn(Page** __retval)
{
    *__retval = Page::New4();
}

// protected void OnRestoreState(object state) :2054
void Page__OnRestoreState_fn(Page* __this, uObject* state)
{
    __this->OnRestoreState(state);
}

// protected override sealed void OnRooted() :2078
void Page__OnRooted_fn(Page* __this)
{
    uStackFrame __("Fuse.Controls.Page", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    __this->SetupFreezeTrigger();
}

// protected object OnSaveState() :2044
void Page__OnSaveState_fn(Page* __this, uObject** __retval)
{
    *__retval = __this->OnSaveState();
}

// protected override sealed void OnUnrooted() :2109
void Page__OnUnrooted_fn(Page* __this)
{
    uStackFrame __("Fuse.Controls.Page", "OnUnrooted()");
    __this->CleanupFreezeTrigger();
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// public void RestoreState(object state) :2049
void Page__RestoreState_fn(Page* __this, uObject* state)
{
    __this->RestoreState(state);
}

// public object SaveState() :2039
void Page__SaveState_fn(Page* __this, uObject** __retval)
{
    *__retval = __this->SaveState();
}

// private void SetupFreezeTrigger() :2084
void Page__SetupFreezeTrigger_fn(Page* __this)
{
    __this->SetupFreezeTrigger();
}

// public string get_Title() :2060
void Page__get_Title_fn(Page* __this, uString** __retval)
{
    *__retval = __this->Title();
}

// public void set_Title(string value) :2067
void Page__set_Title_fn(Page* __this, uString* value)
{
    __this->Title(value);
}

// public Page() [instance] :2033
void Page::ctor_7()
{
    ctor_6();
    DeferFreeze(10);
}

// private void CleanupFreezeTrigger() [instance] :2100
void Page::CleanupFreezeTrigger()
{
    uStackFrame __("Fuse.Controls.Page", "CleanupFreezeTrigger()");
    bool ret2;

    if (_freezeTrigger != NULL)
    {
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _freezeTrigger, &ret2);
        _freezeTrigger = NULL;
    }
}

// public Fuse.Controls.PageFreeze get_Freeze() [instance] :2129
int Page::Freeze()
{
    return _freeze;
}

// public void set_Freeze(Fuse.Controls.PageFreeze value) [instance] :2130
void Page::Freeze(int value)
{
    _freeze = value;
}

// protected void OnRestoreState(object state) [instance] :2054
void Page::OnRestoreState(uObject* state)
{
}

// protected object OnSaveState() [instance] :2044
uObject* Page::OnSaveState()
{
    return NULL;
}

// public void RestoreState(object state) [instance] :2049
void Page::RestoreState(uObject* state)
{
    uStackFrame __("Fuse.Controls.Page", "RestoreState(object)");
    OnRestoreState(state);
}

// public object SaveState() [instance] :2039
uObject* Page::SaveState()
{
    uStackFrame __("Fuse.Controls.Page", "SaveState()");
    return OnSaveState();
}

// private void SetupFreezeTrigger() [instance] :2084
void Page::SetupFreezeTrigger()
{
    uStackFrame __("Fuse.Controls.Page", "SetupFreezeTrigger()");
    CleanupFreezeTrigger();

    switch (Freeze())
    {
        case 0:
            break;
        case 1:
        {
            _freezeTrigger = ::g::Fuse::Controls::NavigationInternal::PageWhileNavigatingFreeze::New3(this);
            break;
        }
    }

    if (_freezeTrigger != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _freezeTrigger);
}

// public string get_Title() [instance] :2060
uString* Page::Title()
{
    uStackFrame __("Fuse.Controls.Page", "get_Title()");
    uObject* v;

    if (TryGetResource(::STRINGS[73/*"Title"*/], NULL, &v))
        return uAs<uString*>(v, ::TYPES[68/*string*/]);

    return NULL;
}

// public void set_Title(string value) [instance] :2067
void Page::Title(uString* value)
{
    uStackFrame __("Fuse.Controls.Page", "set_Title(string)");

    if (::g::Uno::String::op_Inequality(Title(), value))
    {
        SetResource(::STRINGS[73/*"Title"*/], value);
        OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[73/*"Title"*/]));
    }
}

// public Page New() [static] :2033
Page* Page::New4()
{
    Page* obj1 = (Page*)uNew(Page_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class PageControl :2217
// {
// static PageControl() :2219
static void PageControl__cctor_5_fn(uType* __type)
{
    PageControl::ActiveIndexName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[74/*"ActiveIndex"*/]);
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[16/*Fuse.Scripting.ScriptMember[]*/], 1, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[69/*Fuse.Scripting.ScriptMethod<Fuse.Controls.PageControl>*/], ::STRINGS[75/*"goto"*/], uDelegate::New(::TYPES[70/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.PageControl, object[]>*/], (void*)PageControl__gotoPage_fn), 2)));
}

static void PageControl_build(uType* type)
{
    ::STRINGS[74] = uString::Const("ActiveIndex");
    ::STRINGS[75] = uString::Const("goto");
    ::STRINGS[23] = uString::Const("");
    ::STRINGS[50] = uString::Const("Can not navigate to '");
    ::STRINGS[51] = uString::Const("', not found!");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[76] = uString::Const("Fuse.Navigation.IRouterOutlet.Goto");
    ::STRINGS[77] = uString::Const("PageControl.goto() : Argument must be a node object");
    ::STRINGS[78] = uString::Const("gotoPage");
    ::TYPES[15] = ::g::Uno::Type_typeof();
    ::TYPES[16] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[69] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[70] = ::g::Uno::Action3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[71] = ::g::Fuse::Navigation::ISeekableNavigation_typeof();
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[72] = ::g::Fuse::Motion::MotionConfig_typeof();
    ::TYPES[73] = ::g::Fuse::Navigation::StructuredNavigation_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(PageControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(PageControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(PageControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PageControl_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(PageControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(PageControl_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(PageControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PageControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(PageControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(PageControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(PageControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(PageControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(PageControl_type, interface14),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(PageControl_type, interface15),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(PageControl_type, interface16),
        ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/], offsetof(PageControl_type, interface17),
        ::g::Fuse::Navigation::IRouterOutlet_typeof(), offsetof(PageControl_type, interface18));
    type->SetFields(106,
        ::g::Fuse::Controls::NavigationControlInactiveState_typeof(), offsetof(::g::Fuse::Controls::PageControl, _inactive), 0,
        ::g::Fuse::Controls::NavigationControlInteraction_typeof(), offsetof(::g::Fuse::Controls::PageControl, _interaction), 0,
        ::g::Fuse::Layouts::Orientation_typeof(), offsetof(::g::Fuse::Controls::PageControl, _orient), 0,
        ::g::Fuse::Navigation::SwipeNavigate_typeof(), offsetof(::g::Fuse::Controls::PageControl, _swipe), 0,
        ::g::Fuse::Navigation::AllowedNavigationDirections_typeof(), offsetof(::g::Fuse::Controls::PageControl, _swipeAllow), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::PageControl::ActiveIndexName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ActiveIndexName", 111));
    type->Reflection.SetFunctions(18,
        new uFunction("get_ActiveIndex", NULL, (void*)PageControl__get_ActiveIndex_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_ActiveIndex", NULL, (void*)PageControl__set_ActiveIndex_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_AllowedSwipeDirections", NULL, (void*)PageControl__get_AllowedSwipeDirections_fn, 0, false, ::g::Fuse::Navigation::AllowedNavigationDirections_typeof(), 0),
        new uFunction("set_AllowedSwipeDirections", NULL, (void*)PageControl__set_AllowedSwipeDirections_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Navigation::AllowedNavigationDirections_typeof()),
        new uFunction("get_InactiveState", NULL, (void*)PageControl__get_InactiveState_fn, 0, false, ::g::Fuse::Controls::NavigationControlInactiveState_typeof(), 0),
        new uFunction("set_InactiveState", NULL, (void*)PageControl__set_InactiveState_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlInactiveState_typeof()),
        new uFunction("get_Interaction", NULL, (void*)PageControl__get_Interaction_fn, 0, false, ::g::Fuse::Controls::NavigationControlInteraction_typeof(), 0),
        new uFunction("set_Interaction", NULL, (void*)PageControl__set_Interaction_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::NavigationControlInteraction_typeof()),
        new uFunction("get_Motion", NULL, (void*)PageControl__get_Motion_fn, 0, false, ::TYPES[72/*Fuse.Motion.MotionConfig*/], 0),
        new uFunction("set_Motion", NULL, (void*)PageControl__set_Motion_fn, 0, false, uVoid_typeof(), 1, ::TYPES[72/*Fuse.Motion.MotionConfig*/]),
        new uFunction(".ctor", NULL, (void*)PageControl__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)PageControl__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)PageControl__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()),
        new uFunction("SetActiveIndex", NULL, (void*)PageControl__SetActiveIndex_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Int_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_TransitionDuration", NULL, (void*)PageControl__get_TransitionDuration_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_TransitionDuration", NULL, (void*)PageControl__set_TransitionDuration_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_TransitionEasing", NULL, (void*)PageControl__get_TransitionEasing_fn, 0, false, ::g::Fuse::Animations::Easing_typeof(), 0),
        new uFunction("set_TransitionEasing", NULL, (void*)PageControl__set_TransitionEasing_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Animations::Easing_typeof()));
}

PageControl_type* PageControl_typeof()
{
    static uSStrong<PageControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::NavigationControl_typeof();
    options.FieldCount = 112;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(PageControl);
    options.TypeSize = sizeof(PageControl_type);
    type = (PageControl_type*)uClassType::New("Fuse.Controls.PageControl", options);
    type->fp_build_ = PageControl_build;
    type->fp_ctor_ = (void*)PageControl__New4_fn;
    type->fp_cctor_ = PageControl__cctor_5_fn;
    type->fp_CreateTriggers = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Controls::NavigationControl__PageData*))PageControl__CreateTriggers_fn;
    type->fp_UpdateInteraction = (void(*)(::g::Fuse::Controls::NavigationControl*))PageControl__UpdateInteraction_fn;
    type->fp_UpdateProgress = (void(*)(::g::Fuse::Controls::NavigationControl*, ::g::Fuse::Elements::Element*, ::g::Fuse::Navigation::NavigationPageState*, ::g::Fuse::Controls::NavigationControl__PageData*))PageControl__UpdateProgress_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))PageControl__UnoUXIPropertyListenerOnPropertyChanged_fn;
    type->interface18.fp_PartialPrepareGoto = (void(*)(uObject*, double*))PageControl__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface18.fp_CancelPrepare = (void(*)(uObject*))PageControl__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface18.fp_Goto = (void(*)(uObject*, uString**, uString**, int*, int*, uString*, ::g::Fuse::Visual**, int*))PageControl__FuseNavigationIRouterOutletGoto_fn;
    type->interface18.fp_GetCurrent = (void(*)(uObject*, uString**, uString**, ::g::Fuse::Visual**))PageControl__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface18.fp_GetPath = (void(*)(uObject*, ::g::Fuse::Visual*, uString**, uString**, bool*))PageControl__FuseNavigationIRouterOutletGetPath_fn;
    type->interface17.fp_BeginSeek = (void(*)(uObject*))PageControl__FuseNavigationISeekableNavigationBeginSeek_fn;
    type->interface17.fp_Seek = (void(*)(uObject*, ::g::Fuse::Navigation::UpdateSeekArgs*))PageControl__FuseNavigationISeekableNavigationSeek_fn;
    type->interface17.fp_EndSeek = (void(*)(uObject*, ::g::Fuse::Navigation::EndSeekArgs*))PageControl__FuseNavigationISeekableNavigationEndSeek_fn;
    type->interface18.fp_get_Type = (void(*)(uObject*, int*))PageControl__FuseNavigationIRouterOutletget_Type_fn;
    type->interface17.fp_get_SeekRange = (void(*)(uObject*, ::g::Uno::Float2*))PageControl__FuseNavigationISeekableNavigationget_SeekRange_fn;
    type->interface15.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface15.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface15.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface15.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface15.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface15.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface15.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface15.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface15.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface15.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface15.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface15.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface16.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface16.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface16.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface16.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface16.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface16.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface15.fp_GetPage = (void(*)(uObject*, int*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface15.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface15.fp_get_PageCount = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface15.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface15.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface15.fp_get_State = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageControl() :2243
void PageControl__ctor_8_fn(PageControl* __this)
{
    __this->ctor_8();
}

// public int get_ActiveIndex() :2503
void PageControl__get_ActiveIndex_fn(PageControl* __this, int* __retval)
{
    *__retval = __this->ActiveIndex();
}

// public void set_ActiveIndex(int value) :2504
void PageControl__set_ActiveIndex_fn(PageControl* __this, int* value)
{
    __this->ActiveIndex(*value);
}

// public Fuse.Navigation.AllowedNavigationDirections get_AllowedSwipeDirections() :2411
void PageControl__get_AllowedSwipeDirections_fn(PageControl* __this, int* __retval)
{
    *__retval = __this->AllowedSwipeDirections();
}

// public void set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections value) :2412
void PageControl__set_AllowedSwipeDirections_fn(PageControl* __this, int* value)
{
    __this->AllowedSwipeDirections(*value);
}

// private bool get_CollapseInactive() :2373
void PageControl__get_CollapseInactive_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->CollapseInactive();
}

// protected override sealed void CreateTriggers(Fuse.Elements.Element c, Fuse.Controls.NavigationControl.PageData pd) :2349
void PageControl__CreateTriggers_fn(PageControl* __this, ::g::Fuse::Elements::Element* c, ::g::Fuse::Controls::NavigationControl__PageData* pd)
{
    uStackFrame __("Fuse.Controls.PageControl", "CreateTriggers(Fuse.Elements.Element,Fuse.Controls.NavigationControl.PageData)");

    switch (__this->PageTransition(c))
    {
        case 1:
            break;
        case 2:
        {
            if (__this->IsHorizontal())
            {
                uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::EnterHorizontal::New3();
                pd->Exit = ::g::Fuse::Controls::NavigationInternal::ExitHorizontal::New3();
            }
            else
            {
                uPtr(pd)->Enter = ::g::Fuse::Controls::NavigationInternal::EnterVertical::New3();
                pd->Exit = ::g::Fuse::Controls::NavigationInternal::ExitVertical::New3();
            }

            break;
        }
    }
}

// private bool get_DisableInactive() :2378
void PageControl__get_DisableInactive_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->DisableInactive();
}

// private void Fuse.Navigation.IRouterOutlet.CancelPrepare() :2273
void PageControl__FuseNavigationIRouterOutletCancelPrepare_fn(PageControl* __this)
{
}

// private void Fuse.Navigation.IRouterOutlet.GetCurrent(string& path, string& parameter, Fuse.Visual& active) :2305
void PageControl__FuseNavigationIRouterOutletGetCurrent_fn(PageControl* __this, uString** path, uString** parameter, ::g::Fuse::Visual** active)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.GetCurrent(string&,string&,Fuse.Visual&)");

    if (__this->Active() == NULL)
    {
        *path = ::STRINGS[23/*""*/];
        *parameter = NULL;
        *active = NULL;
    }
    else
    {
        *path = ::g::Uno::UX::Selector__op_Implicit1(uPtr(__this->Active())->Name());
        *parameter = uPtr(__this->Active())->Parameter();
        *active = __this->Active();
    }
}

// private bool Fuse.Navigation.IRouterOutlet.GetPath(Fuse.Visual active, string& path, string& parameter) :2321
void PageControl__FuseNavigationIRouterOutletGetPath_fn(PageControl* __this, ::g::Fuse::Visual* active, uString** path, uString** parameter, bool* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.GetPath(Fuse.Visual,string&,string&)");
    *path = ::g::Uno::UX::Selector__op_Implicit1(uPtr(active)->Name());
    *parameter = active->Parameter();
    return *__retval = active->Parent() == __this, void();
}

// private Fuse.Navigation.RoutingResult Fuse.Navigation.IRouterOutlet.Goto(string& path, string& parameter, Fuse.Navigation.NavigationGotoMode gotoMode, Fuse.Navigation.RoutingOperation direction, string operationStyle, Fuse.Visual& page) :2277
void PageControl__FuseNavigationIRouterOutletGoto_fn(PageControl* __this, uString** path, uString** parameter, int* gotoMode, int* direction, uString* operationStyle, ::g::Fuse::Visual** page, int* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.IRouterOutlet.Goto(string&,string&,Fuse.Navigation.NavigationGotoMode,Fuse.Navigation.RoutingOperation,string,Fuse.Visual&)");
    ::g::Fuse::Node* ret2;
    int gotoMode_ = *gotoMode;
    *page = NULL;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Node* n = (::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(__this->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret2), ret2);

        if (::g::Uno::String::op_Equality(::g::Uno::UX::Selector__op_Implicit1(uPtr(n)->Name()), *path))
        {
            *page = uAs< ::g::Fuse::Visual*>(n, ::TYPES[9/*Fuse.Visual*/]);
            break;
        }
    }

    if (!::g::Fuse::Navigation::Navigation::IsPage(*page))
    {
        ::g::Fuse::Diagnostics::InternalError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[50/*"Can not nav...*/], *path), ::STRINGS[51/*"', not found!"*/]), __this, ::STRINGS[14/*"/Users/medb...*/], 2292, ::STRINGS[76/*"Fuse.Naviga...*/]);
        return *__retval = 3, void();
    }

    bool same = ::g::Uno::String::op_Equality(uPtr(*page)->Parameter(), *parameter);
    uPtr(*page)->Parameter(*parameter);

    if (*page == __this->Active())
        return *__retval = same ? 0 : 1, void();

    uPtr(__this->Navigation1())->Goto(*page, gotoMode_);
    return *__retval = 2, void();
}

// private void Fuse.Navigation.IRouterOutlet.PartialPrepareGoto(double progress) :2269
void PageControl__FuseNavigationIRouterOutletPartialPrepareGoto_fn(PageControl* __this, double* progress)
{
}

// private Fuse.Navigation.OutletType Fuse.Navigation.IRouterOutlet.get_Type() :2267
void PageControl__FuseNavigationIRouterOutletget_Type_fn(PageControl* __this, int* __retval)
{
    return *__retval = __this->RouterOutletType(), void();
}

// private void Fuse.Navigation.ISeekableNavigation.BeginSeek() :2512
void PageControl__FuseNavigationISeekableNavigationBeginSeek_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.BeginSeek()");
    ::g::Fuse::Navigation::ISeekableNavigation::BeginSeek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/])), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/]));
}

// private void Fuse.Navigation.ISeekableNavigation.EndSeek(Fuse.Navigation.EndSeekArgs args) :2515
void PageControl__FuseNavigationISeekableNavigationEndSeek_fn(PageControl* __this, ::g::Fuse::Navigation::EndSeekArgs* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.EndSeek(Fuse.Navigation.EndSeekArgs)");
    ::g::Fuse::Navigation::ISeekableNavigation::EndSeek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/])), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/]), args);
}

// private void Fuse.Navigation.ISeekableNavigation.Seek(Fuse.Navigation.UpdateSeekArgs args) :2514
void PageControl__FuseNavigationISeekableNavigationSeek_fn(PageControl* __this, ::g::Fuse::Navigation::UpdateSeekArgs* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.Seek(Fuse.Navigation.UpdateSeekArgs)");
    ::g::Fuse::Navigation::ISeekableNavigation::Seek(uInterface(uPtr(uAs<uObject*>(__this->Navigation1(), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/])), ::TYPES[71/*Fuse.Navigation.ISeekableNavigation*/]), args);
}

// private float2 Fuse.Navigation.ISeekableNavigation.get_SeekRange() :2513
void PageControl__FuseNavigationISeekableNavigationget_SeekRange_fn(PageControl* __this, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.PageControl", "Fuse.Navigation.ISeekableNavigation.get_SeekRange()");
    return *__retval = uPtr(__this->Navigation1())->SeekRange(), void();
}

// private static void gotoPage(Fuse.Scripting.Context c, Fuse.Controls.PageControl pc, object[] args) :2231
void PageControl__gotoPage_fn(::g::Fuse::Scripting::Context* c, PageControl* pc, uArray* args)
{
    PageControl::gotoPage(c, pc, args);
}

// public Fuse.Controls.NavigationControlInactiveState get_InactiveState() :2334
void PageControl__get_InactiveState_fn(PageControl* __this, int* __retval)
{
    *__retval = __this->InactiveState();
}

// public void set_InactiveState(Fuse.Controls.NavigationControlInactiveState value) :2335
void PageControl__set_InactiveState_fn(PageControl* __this, int* value)
{
    __this->InactiveState(*value);
}

// public Fuse.Controls.NavigationControlInteraction get_Interaction() :2428
void PageControl__get_Interaction_fn(PageControl* __this, int* __retval)
{
    *__retval = __this->Interaction();
}

// public void set_Interaction(Fuse.Controls.NavigationControlInteraction value) :2429
void PageControl__set_Interaction_fn(PageControl* __this, int* value)
{
    __this->Interaction(*value);
}

// private bool get_IsHorizontal() :2469
void PageControl__get_IsHorizontal_fn(PageControl* __this, bool* __retval)
{
    *__retval = __this->IsHorizontal();
}

// public Fuse.Motion.MotionConfig get_Motion() :2446
void PageControl__get_Motion_fn(PageControl* __this, ::g::Fuse::Motion::MotionConfig** __retval)
{
    *__retval = __this->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) :2451
void PageControl__set_Motion_fn(PageControl* __this, ::g::Fuse::Motion::MotionConfig* value)
{
    __this->Motion(value);
}

// internal new Fuse.Navigation.StructuredNavigation get_Navigation() :2240
void PageControl__get_Navigation1_fn(PageControl* __this, ::g::Fuse::Navigation::StructuredNavigation** __retval)
{
    *__retval = __this->Navigation1();
}

// public PageControl New() :2243
void PageControl__New4_fn(PageControl** __retval)
{
    *__retval = PageControl::New4();
}

// public Fuse.Layouts.Orientation get_Orientation() :2465
void PageControl__get_Orientation_fn(PageControl* __this, int* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :2466
void PageControl__set_Orientation_fn(PageControl* __this, int* value)
{
    __this->Orientation(*value);
}

// public void SetActiveIndex(int value, Uno.UX.IPropertyListener origin) :2506
void PageControl__SetActiveIndex_fn(PageControl* __this, int* value, uObject* origin)
{
    __this->SetActiveIndex(*value, origin);
}

// public double get_TransitionDuration() :2488
void PageControl__get_TransitionDuration_fn(PageControl* __this, double* __retval)
{
    *__retval = __this->TransitionDuration();
}

// public void set_TransitionDuration(double value) :2489
void PageControl__set_TransitionDuration_fn(PageControl* __this, double* value)
{
    __this->TransitionDuration(*value);
}

// public Fuse.Animations.Easing get_TransitionEasing() :2478
void PageControl__get_TransitionEasing_fn(PageControl* __this, ::g::Fuse::Animations::Easing** __retval)
{
    *__retval = __this->TransitionEasing();
}

// public void set_TransitionEasing(Fuse.Animations.Easing value) :2479
void PageControl__set_TransitionEasing_fn(PageControl* __this, ::g::Fuse::Animations::Easing* value)
{
    __this->TransitionEasing(value);
}

// private void Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector property) :2257
void PageControl__UnoUXIPropertyListenerOnPropertyChanged_fn(PageControl* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* property)
{
    uStackFrame __("Fuse.Controls.PageControl", "Uno.UX.IPropertyListener.OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector property_ = *property;

    if (obj == __this->Navigation1())
    {
        if (::g::Uno::UX::Selector__op_Equality(property_, ::g::Fuse::Navigation::VisualNavigation::ActiveIndexName()))
            __this->OnPropertyChanged(PageControl::ActiveIndexName());
    }
}

// protected override sealed void UpdateInteraction() :2383
void PageControl__UpdateInteraction_fn(PageControl* __this)
{
    uStackFrame __("Fuse.Controls.PageControl", "UpdateInteraction()");
    bool ret3;
    bool needSwipe = __this->_interaction == 1;

    if (needSwipe)
    {
        if (__this->_swipe == NULL)
        {
            __this->_swipe = ::g::Fuse::Navigation::SwipeNavigate::New2();
            uPtr(__this->_swipe)->SwipeDirection(__this->IsHorizontal() ? 1 : 3);
            uPtr(__this->_swipe)->AllowedDirections(__this->_swipeAllow);
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_swipe);
        }
    }
    else
    {
        if (__this->_swipe != NULL)
            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_swipe, &ret3);

        __this->_swipe = NULL;
    }
}

// protected override sealed void UpdateProgress(Fuse.Elements.Element page, Fuse.Navigation.NavigationPageState state, Fuse.Controls.NavigationControl.PageData pd) :2338
void PageControl__UpdateProgress_fn(PageControl* __this, ::g::Fuse::Elements::Element* page, ::g::Fuse::Navigation::NavigationPageState* state, ::g::Fuse::Controls::NavigationControl__PageData* pd)
{
    uStackFrame __("Fuse.Controls.PageControl", "UpdateProgress(Fuse.Elements.Element,Fuse.Navigation.NavigationPageState,Fuse.Controls.NavigationControl.PageData)");
    ::g::Fuse::Navigation::NavigationPageState state_ = *state;
    uPtr(pd)->Active = (::g::Uno::Math::Abs1(state_.Progress) < 1.0f);
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(page, ::TYPES[10/*Fuse.Elements.Element*/]);

    if ((elm != NULL) && __this->CollapseInactive())
        uPtr(elm)->Visibility(!uPtr(pd)->Active ? 1 : 0);

    if (__this->DisableInactive())
        uPtr(page)->IsEnabled(uPtr(pd)->Active);
}

::g::Uno::UX::Selector PageControl::ActiveIndexName_;

// public PageControl() [instance] :2243
void PageControl::ctor_8()
{
    uStackFrame __("Fuse.Controls.PageControl", ".ctor()");
    _swipeAllow = 3;
    _interaction = 1;
    ctor_7();
    HitTestMode(6);
    _interaction = 1;
    _transition = 2;
    ::g::Fuse::Navigation::LinearNavigation* nav = ::g::Fuse::Navigation::LinearNavigation::New2();
    nav->AddPropertyListener((uObject*)this);
    SetNavigation(nav);
}

// public int get_ActiveIndex() [instance] :2503
int PageControl::ActiveIndex()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_ActiveIndex()");
    return uPtr(Navigation1())->ActiveIndex();
}

// public void set_ActiveIndex(int value) [instance] :2504
void PageControl::ActiveIndex(int value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_ActiveIndex(int)");
    SetActiveIndex(value, NULL);
}

// public Fuse.Navigation.AllowedNavigationDirections get_AllowedSwipeDirections() [instance] :2411
int PageControl::AllowedSwipeDirections()
{
    return _swipeAllow;
}

// public void set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections value) [instance] :2412
void PageControl::AllowedSwipeDirections(int value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_AllowedSwipeDirections(Fuse.Navigation.AllowedNavigationDirections)");
    _swipeAllow = value;

    if (_swipe != NULL)
        uPtr(_swipe)->AllowedDirections(value);
}

// private bool get_CollapseInactive() [instance] :2373
bool PageControl::CollapseInactive()
{
    return _inactive == 0;
}

// private bool get_DisableInactive() [instance] :2378
bool PageControl::DisableInactive()
{
    return (_inactive == 0) || (_inactive == 1);
}

// public Fuse.Controls.NavigationControlInactiveState get_InactiveState() [instance] :2334
int PageControl::InactiveState()
{
    return _inactive;
}

// public void set_InactiveState(Fuse.Controls.NavigationControlInactiveState value) [instance] :2335
void PageControl::InactiveState(int value)
{
    _inactive = value;
}

// public Fuse.Controls.NavigationControlInteraction get_Interaction() [instance] :2428
int PageControl::Interaction()
{
    return _interaction;
}

// public void set_Interaction(Fuse.Controls.NavigationControlInteraction value) [instance] :2429
void PageControl::Interaction(int value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_Interaction(Fuse.Controls.NavigationControlInteraction)");

    if (_interaction == value)
        return;

    _interaction = value;

    if (IsRootingCompleted())
        UpdateInteraction();
}

// private bool get_IsHorizontal() [instance] :2469
bool PageControl::IsHorizontal()
{
    return _orient == 0;
}

// public Fuse.Motion.MotionConfig get_Motion() [instance] :2446
::g::Fuse::Motion::MotionConfig* PageControl::Motion()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_Motion()");
    ::g::Fuse::Navigation::StructuredNavigation* q = Navigation1();
    return (q == NULL) ? uCast< ::g::Fuse::Motion::MotionConfig*>(NULL, ::TYPES[72/*Fuse.Motion.MotionConfig*/]) : (::g::Fuse::Motion::MotionConfig*)uPtr(q)->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) [instance] :2451
void PageControl::Motion(::g::Fuse::Motion::MotionConfig* value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_Motion(Fuse.Motion.MotionConfig)");
    ::g::Fuse::Navigation::StructuredNavigation* q = Navigation1();

    if (q != NULL)
        uPtr(q)->Motion(value);
}

// internal new Fuse.Navigation.StructuredNavigation get_Navigation() [instance] :2240
::g::Fuse::Navigation::StructuredNavigation* PageControl::Navigation1()
{
    return uAs< ::g::Fuse::Navigation::StructuredNavigation*>(this->Navigation(), ::TYPES[73/*Fuse.Navigation.StructuredNavigation*/]);
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :2465
int PageControl::Orientation()
{
    return _orient;
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :2466
void PageControl::Orientation(int value)
{
    _orient = value;
}

// public void SetActiveIndex(int value, Uno.UX.IPropertyListener origin) [instance] :2506
void PageControl::SetActiveIndex(int value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.PageControl", "SetActiveIndex(int,Uno.UX.IPropertyListener)");
    uPtr(Navigation1())->SetActiveIndex(value, origin);
}

// public double get_TransitionDuration() [instance] :2488
double PageControl::TransitionDuration()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_TransitionDuration()");
    return uPtr(Navigation1())->Duration();
}

// public void set_TransitionDuration(double value) [instance] :2489
void PageControl::TransitionDuration(double value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_TransitionDuration(double)");
    uPtr(Navigation1())->Duration(value);
}

// public Fuse.Animations.Easing get_TransitionEasing() [instance] :2478
::g::Fuse::Animations::Easing* PageControl::TransitionEasing()
{
    uStackFrame __("Fuse.Controls.PageControl", "get_TransitionEasing()");
    return uPtr(Navigation1())->Easing();
}

// public void set_TransitionEasing(Fuse.Animations.Easing value) [instance] :2479
void PageControl::TransitionEasing(::g::Fuse::Animations::Easing* value)
{
    uStackFrame __("Fuse.Controls.PageControl", "set_TransitionEasing(Fuse.Animations.Easing)");
    uPtr(Navigation1())->Easing(value);
}

// private static void gotoPage(Fuse.Scripting.Context c, Fuse.Controls.PageControl pc, object[] args) [static] :2231
void PageControl::gotoPage(::g::Fuse::Scripting::Context* c, PageControl* pc, uArray* args)
{
    uStackFrame __("Fuse.Controls.PageControl", "gotoPage(Fuse.Scripting.Context,Fuse.Controls.PageControl,object[])");
    PageControl_typeof()->Init();
    ::g::Fuse::Visual* target = uAs< ::g::Fuse::Visual*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[9/*Fuse.Visual*/]);

    if (target != NULL)
        uPtr(pc)->Active(target);
    else
        ::g::Fuse::Diagnostics::UserError(::STRINGS[77/*"PageControl...*/], pc, ::STRINGS[14/*"/Users/medb...*/], 2235, ::STRINGS[78/*"gotoPage"*/], NULL);
}

// public PageControl New() [static] :2243
PageControl* PageControl::New4()
{
    PageControl* obj1 = (PageControl*)uNew(PageControl_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class NavigationControl.PageData :643
// {
static void NavigationControl__PageData_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, Active), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, Enter), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, Exit), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, FromTemplate), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, Inactive), 0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::NavigationControl__PageData, Removing), 0);
    type->Reflection.SetFields(6,
        new uField("Active", 0),
        new uField("Enter", 1),
        new uField("Exit", 2),
        new uField("FromTemplate", 3),
        new uField("Inactive", 4),
        new uField("Removing", 5));
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)NavigationControl__PageData__New1_fn, 0, true, type, 0));
}

uType* NavigationControl__PageData_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 6;
    options.ObjectSize = sizeof(NavigationControl__PageData);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.NavigationControl.PageData", options);
    type->fp_build_ = NavigationControl__PageData_build;
    type->fp_ctor_ = (void*)NavigationControl__PageData__New1_fn;
    return type;
}

// public generated PageData() :643
void NavigationControl__PageData__ctor__fn(NavigationControl__PageData* __this)
{
    __this->ctor_();
}

// public generated PageData New() :643
void NavigationControl__PageData__New1_fn(NavigationControl__PageData** __retval)
{
    *__retval = NavigationControl__PageData::New1();
}

// public generated PageData() [instance] :643
void NavigationControl__PageData::ctor_()
{
}

// public generated PageData New() [static] :643
NavigationControl__PageData* NavigationControl__PageData::New1()
{
    NavigationControl__PageData* obj1 = (NavigationControl__PageData*)uNew(NavigationControl__PageData_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// private sealed class EdgeNavigator.PageData :220
// {
static void EdgeNavigator__PageData_build(uType* type)
{
    type->SetFields(0,
        ::g::Fuse::Triggers::Trigger_typeof(), offsetof(::g::Fuse::Controls::EdgeNavigator__PageData, Enter), 0);
}

uType* EdgeNavigator__PageData_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.ObjectSize = sizeof(EdgeNavigator__PageData);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.EdgeNavigator.PageData", options);
    type->fp_build_ = EdgeNavigator__PageData_build;
    type->fp_ctor_ = (void*)EdgeNavigator__PageData__New1_fn;
    return type;
}

// public generated PageData() :220
void EdgeNavigator__PageData__ctor__fn(EdgeNavigator__PageData* __this)
{
    __this->ctor_();
}

// public generated PageData New() :220
void EdgeNavigator__PageData__New1_fn(EdgeNavigator__PageData** __retval)
{
    *__retval = EdgeNavigator__PageData::New1();
}

// public generated PageData() [instance] :220
void EdgeNavigator__PageData::ctor_()
{
}

// public generated PageData New() [static] :220
EdgeNavigator__PageData* EdgeNavigator__PageData::New1()
{
    EdgeNavigator__PageData* obj1 = (EdgeNavigator__PageData*)uNew(EdgeNavigator__PageData_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum PageFreeze :2000
uEnumType* PageFreeze_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.PageFreeze", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Never", 0LL,
        "WhileNavigating", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class PageIndicator :2567
// {
// static PageIndicator() :8
static void PageIndicator__cctor_4_fn(uType* __type)
{
}

static void PageIndicator_build(uType* type)
{
    ::STRINGS[79] = uString::Const("PageIndicator.DotFactory is deprecated, use ux:Template=\"Dot\" instead.");
    ::STRINGS[14] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno");
    ::STRINGS[80] = uString::Const("set_DotFactory");
    ::STRINGS[81] = uString::Const("Dot");
    ::STRINGS[82] = uString::Const("PageIndicator.DotTemplate is deprecated, use ux:Template=\"Dot\" instead.");
    ::STRINGS[83] = uString::Const("set_DotTemplate");
    ::TYPES[74] = ::g::Fuse::Navigation::INavigation_typeof();
    ::TYPES[75] = ::g::Fuse::Navigation::NavigationPageCountHandler_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[9] = ::g::Fuse::Visual_typeof();
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(104,
        ::g::Uno::UX::Template_typeof(), offsetof(::g::Fuse::Controls::PageIndicator, _dotTemplate), 0,
        ::TYPES[74/*Fuse.Navigation.INavigation*/], offsetof(::g::Fuse::Controls::PageIndicator, _pageProgress), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_DotFactory", NULL, (void*)PageIndicator__get_DotFactory_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_DotFactory", NULL, (void*)PageIndicator__set_DotFactory_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction("get_DotTemplate", NULL, (void*)PageIndicator__get_DotTemplate_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_DotTemplate", NULL, (void*)PageIndicator__set_DotTemplate_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction(".ctor", NULL, (void*)PageIndicator__New5_fn, 0, true, type, 1, ::TYPES[74/*Fuse.Navigation.INavigation*/]));
}

::g::Fuse::Controls::Control_type* PageIndicator_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::StackPanel_typeof();
    options.FieldCount = 106;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(PageIndicator);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.PageIndicator", options);
    type->fp_build_ = PageIndicator_build;
    type->fp_cctor_ = PageIndicator__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))PageIndicator__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))PageIndicator__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageIndicator(Fuse.Navigation.INavigation navigation) :2572
void PageIndicator__ctor_8_fn(PageIndicator* __this, uObject* navigation)
{
    __this->ctor_8(navigation);
}

// public Uno.UX.Template get_DotFactory() :2597
void PageIndicator__get_DotFactory_fn(PageIndicator* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->DotFactory();
}

// public void set_DotFactory(Uno.UX.Template value) :2598
void PageIndicator__set_DotFactory_fn(PageIndicator* __this, ::g::Uno::UX::Template* value)
{
    __this->DotFactory(value);
}

// public Uno.UX.Template get_DotTemplate() :2583
void PageIndicator__get_DotTemplate_fn(PageIndicator* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->DotTemplate();
}

// public void set_DotTemplate(Uno.UX.Template value) :2584
void PageIndicator__set_DotTemplate_fn(PageIndicator* __this, ::g::Uno::UX::Template* value)
{
    __this->DotTemplate(value);
}

// private void InitializeUX() :11
void PageIndicator__InitializeUX_fn(PageIndicator* __this)
{
    __this->InitializeUX();
}

// public PageIndicator New(Fuse.Navigation.INavigation navigation) :2572
void PageIndicator__New5_fn(uObject* navigation, PageIndicator** __retval)
{
    *__retval = PageIndicator::New5(navigation);
}

// protected override sealed void OnRooted() :2605
void PageIndicator__OnRooted_fn(PageIndicator* __this)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    ::g::Fuse::Navigation::INavigation::add_PageCountChanged(uInterface(uPtr(__this->_pageProgress), ::TYPES[74/*Fuse.Navigation.INavigation*/]), uDelegate::New(::TYPES[75/*Fuse.Navigation.NavigationPageCountHandler*/], (void*)PageIndicator__UpdateCount_fn, __this));
    __this->UpdateCount(NULL);
}

// protected override sealed void OnUnrooted() :2612
void PageIndicator__OnUnrooted_fn(PageIndicator* __this)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "OnUnrooted()");
    ::g::Fuse::Navigation::INavigation::remove_PageCountChanged(uInterface(uPtr(__this->_pageProgress), ::TYPES[74/*Fuse.Navigation.INavigation*/]), uDelegate::New(::TYPES[75/*Fuse.Navigation.NavigationPageCountHandler*/], (void*)PageIndicator__UpdateCount_fn, __this));
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private void RecreateDots() :2623
void PageIndicator__RecreateDots_fn(PageIndicator* __this)
{
    __this->RecreateDots();
}

// private void UpdateCount(object s) :2618
void PageIndicator__UpdateCount_fn(PageIndicator* __this, uObject* s)
{
    __this->UpdateCount(s);
}

// public PageIndicator(Fuse.Navigation.INavigation navigation) [instance] :2572
void PageIndicator::ctor_8(uObject* navigation)
{
    uStackFrame __("Fuse.Controls.PageIndicator", ".ctor(Fuse.Navigation.INavigation)");
    ctor_7();
    InitializeUX();
    _pageProgress = navigation;
    _dotTemplate = ::g::Fuse::Controls::PageIndicatorDotTemplate::New2();
    ::g::Fuse::Navigation::Navigation::SetNavigationNavigation(this, navigation);
}

// public Uno.UX.Template get_DotFactory() [instance] :2597
::g::Uno::UX::Template* PageIndicator::DotFactory()
{
    return DotTemplate();
}

// public void set_DotFactory(Uno.UX.Template value) [instance] :2598
void PageIndicator::DotFactory(::g::Uno::UX::Template* value)
{
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[79/*"PageIndicat...*/], this, ::STRINGS[14/*"/Users/medb...*/], 2600, ::STRINGS[80/*"set_DotFact...*/]);
    DotTemplate(value);
}

// public Uno.UX.Template get_DotTemplate() [instance] :2583
::g::Uno::UX::Template* PageIndicator::DotTemplate()
{
    uStackFrame __("Fuse.Controls.PageIndicator", "get_DotTemplate()");
    ::g::Uno::UX::Template* ind1 = FindTemplate(::STRINGS[81/*"Dot"*/]);
    return (ind1 != NULL) ? ind1 : (::g::Uno::UX::Template*)_dotTemplate;
}

// public void set_DotTemplate(Uno.UX.Template value) [instance] :2584
void PageIndicator::DotTemplate(::g::Uno::UX::Template* value)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "set_DotTemplate(Uno.UX.Template)");

    if (_dotTemplate != value)
    {
        ::g::Fuse::Diagnostics::Deprecated(::STRINGS[82/*"PageIndicat...*/], this, ::STRINGS[14/*"/Users/medb...*/], 2588, ::STRINGS[83/*"set_DotTemp...*/]);
        _dotTemplate = value;
        RecreateDots();
    }
}

// private void InitializeUX() [instance] :11
void PageIndicator::InitializeUX()
{
    uStackFrame __("Fuse.Controls.PageIndicator", "InitializeUX()");
    Orientation(0);
}

// private void RecreateDots() [instance] :2623
void PageIndicator::RecreateDots()
{
    uStackFrame __("Fuse.Controls.PageIndicator", "RecreateDots()");
    bool ret3;
    ::g::Fuse::Node* ret4;
    int count = ::g::Fuse::Navigation::INavigation::PageCount(uInterface(uPtr(_pageProgress), ::TYPES[74/*Fuse.Navigation.INavigation*/]));

    while (ZOrderChildCount() > count)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), LastVisualChild(), &ret3);

    while (ZOrderChildCount() < count)
    {
        ::g::Fuse::Visual* dot = uAs< ::g::Fuse::Visual*>(uPtr(DotTemplate())->New1(), ::TYPES[9/*Fuse.Visual*/]);
        ::g::Fuse::Visual* page = ::g::Fuse::Navigation::INavigation::GetPage(uInterface(uPtr(_pageProgress), ::TYPES[74/*Fuse.Navigation.INavigation*/]), ZOrderChildCount());
        ::g::Fuse::Navigation::NavigationPageProperty::SetNavigationPage(dot, page);
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), dot);
    }

    int p = 0;

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); i++)
    {
        ::g::Fuse::Visual* v = uAs< ::g::Fuse::Visual*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret4), ret4), ::TYPES[9/*Fuse.Visual*/]);

        if (v == NULL)
            continue;

        ::g::Fuse::Visual* page1 = ::g::Fuse::Navigation::INavigation::GetPage(uInterface(uPtr(_pageProgress), ::TYPES[74/*Fuse.Navigation.INavigation*/]), p++);
        ::g::Fuse::Navigation::NavigationPageProperty::SetNavigationPage(v, page1);
    }
}

// private void UpdateCount(object s) [instance] :2618
void PageIndicator::UpdateCount(uObject* s)
{
    uStackFrame __("Fuse.Controls.PageIndicator", "UpdateCount(object)");
    RecreateDots();
}

// public PageIndicator New(Fuse.Navigation.INavigation navigation) [static] :2572
PageIndicator* PageIndicator::New5(uObject* navigation)
{
    PageIndicator* obj2 = (PageIndicator*)uNew(PageIndicator_typeof());
    obj2->ctor_8(navigation);
    return obj2;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class PageIndicatorDot :24
// {
// static PageIndicatorDot() :28
static void PageIndicatorDot__cctor_4_fn(uType* __type)
{
    PageIndicatorDot::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
    PageIndicatorDot::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[85/*"TheCircle"*/]);
}

static void PageIndicatorDot_build(uType* type)
{
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[85] = uString::Const("TheCircle");
    ::TYPES[76] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Controls::Circle_typeof(), offsetof(::g::Fuse::Controls::PageIndicatorDot, TheCircle), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::PageIndicatorDot, TheCircle_Color_inst), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::PageIndicatorDot::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::PageIndicatorDot::__selector1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PageIndicatorDot__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* PageIndicatorDot_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 107;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(PageIndicatorDot);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.PageIndicatorDot", options);
    type->fp_build_ = PageIndicatorDot_build;
    type->fp_ctor_ = (void*)PageIndicatorDot__New4_fn;
    type->fp_cctor_ = PageIndicatorDot__cctor_4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageIndicatorDot() :32
void PageIndicatorDot__ctor_7_fn(PageIndicatorDot* __this)
{
    __this->ctor_7();
}

// private void InitializeUX() :36
void PageIndicatorDot__InitializeUX_fn(PageIndicatorDot* __this)
{
    __this->InitializeUX();
}

// public PageIndicatorDot New() :32
void PageIndicatorDot__New4_fn(PageIndicatorDot** __retval)
{
    *__retval = PageIndicatorDot::New4();
}

::g::Uno::UX::Selector PageIndicatorDot::__selector0_;
::g::Uno::UX::Selector PageIndicatorDot::__selector1_;

// public PageIndicatorDot() [instance] :32
void PageIndicatorDot::ctor_7()
{
    uStackFrame __("Fuse.Controls.PageIndicatorDot", ".ctor()");
    ctor_6();
    InitializeUX();
}

// private void InitializeUX() [instance] :36
void PageIndicatorDot::InitializeUX()
{
    uStackFrame __("Fuse.Controls.PageIndicatorDot", "InitializeUX()");
    TheCircle = ::g::Fuse::Controls::Circle::New3();
    TheCircle_Color_inst = ::g::FuseControlsNavigation_FuseControlsShape_Color_Property::New1(TheCircle, PageIndicatorDot::__selector0());
    ::g::Fuse::Navigation::ActivatingAnimation* temp = ::g::Fuse::Navigation::ActivatingAnimation::New2();
    ::g::Fuse::Animations::Scale* temp1 = ::g::Fuse::Animations::Scale::New2();
    ::g::Fuse::Animations::Change* temp2 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], TheCircle_Color_inst);
    Width(::g::Uno::UX::Size__New1(6.0f, 1));
    Height(::g::Uno::UX::Size__New1(6.0f, 1));
    Margin(::g::Uno::Float4__New2(5.0f, 5.0f, 5.0f, 5.0f));
    uPtr(TheCircle)->Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.3f));
    uPtr(TheCircle)->Name(PageIndicatorDot::__selector1());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp2);
    temp1->Factor(1.2f);
    ::g::Fuse::Animations::Change__set_Value_fn(temp2, uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), TheCircle);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
}

// public PageIndicatorDot New() [static] :32
PageIndicatorDot* PageIndicatorDot::New4()
{
    PageIndicatorDot* obj1 = (PageIndicatorDot*)uNew(PageIndicatorDot_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class PageIndicatorDotTemplate :2650
// {
static void PageIndicatorDotTemplate_build(uType* type)
{
    type->SetFields(2);
}

::g::Uno::UX::Template_type* PageIndicatorDotTemplate_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(PageIndicatorDotTemplate);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.PageIndicatorDotTemplate", options);
    type->fp_build_ = PageIndicatorDotTemplate_build;
    type->fp_ctor_ = (void*)PageIndicatorDotTemplate__New2_fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))PageIndicatorDotTemplate__New1_fn;
    return type;
}

// public PageIndicatorDotTemplate() :2652
void PageIndicatorDotTemplate__ctor_1_fn(PageIndicatorDotTemplate* __this)
{
    __this->ctor_1();
}

// public override sealed object New() :2654
void PageIndicatorDotTemplate__New1_fn(PageIndicatorDotTemplate* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.PageIndicatorDotTemplate", "New()");
    return *__retval = ::g::Fuse::Controls::PageIndicatorDot::New4(), void();
}

// public PageIndicatorDotTemplate New() :2652
void PageIndicatorDotTemplate__New2_fn(PageIndicatorDotTemplate** __retval)
{
    *__retval = PageIndicatorDotTemplate::New2();
}

// public PageIndicatorDotTemplate() [instance] :2652
void PageIndicatorDotTemplate::ctor_1()
{
    ctor_(NULL, false);
}

// public PageIndicatorDotTemplate New() [static] :2652
PageIndicatorDotTemplate* PageIndicatorDotTemplate::New2()
{
    PageIndicatorDotTemplate* obj1 = (PageIndicatorDotTemplate*)uNew(PageIndicatorDotTemplate_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class PageView :2671
// {
static void PageView_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Navigator_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface14),
        ::g::Fuse::Navigation::INavigation_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface15),
        ::g::Fuse::Navigation::IBaseNavigation_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface16),
        ::g::Fuse::Navigation::IRouterOutlet_typeof(), offsetof(::g::Fuse::Controls::Navigator_type, interface17));
    type->SetFields(126);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)PageView__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Navigator_type* PageView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Navigator_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Navigator_typeof();
    options.FieldCount = 126;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(PageView);
    options.TypeSize = sizeof(::g::Fuse::Controls::Navigator_type);
    type = (::g::Fuse::Controls::Navigator_type*)uClassType::New("Fuse.Controls.PageView", options);
    type->fp_build_ = PageView_build;
    type->fp_ctor_ = (void*)PageView__New5_fn;
    type->interface17.fp_PartialPrepareGoto = (void(*)(uObject*, double*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletPartialPrepareGoto_fn;
    type->interface17.fp_CancelPrepare = (void(*)(uObject*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletCancelPrepare_fn;
    type->interface17.fp_Goto = (void(*)(uObject*, uString**, uString**, int*, int*, uString*, ::g::Fuse::Visual**, int*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletGoto_fn;
    type->interface17.fp_GetCurrent = (void(*)(uObject*, uString**, uString**, ::g::Fuse::Visual**))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletGetCurrent_fn;
    type->interface17.fp_GetPath = (void(*)(uObject*, ::g::Fuse::Visual*, uString**, uString**, bool*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletGetPath_fn;
    type->interface17.fp_get_Type = (void(*)(uObject*, int*))::g::Fuse::Controls::Navigator__FuseNavigationIRouterOutletget_Type_fn;
    type->interface15.fp_GetPage = (void(*)(uObject*, int*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPage_fn;
    type->interface15.fp_GetPageState = (void(*)(uObject*, ::g::Fuse::Visual*, ::g::Fuse::Navigation::NavigationPageState*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationGetPageState_fn;
    type->interface15.fp_get_PageCount = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageCount_fn;
    type->interface15.fp_get_PageProgress = (void(*)(uObject*, double*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_PageProgress_fn;
    type->interface15.fp_get_ActivePage = (void(*)(uObject*, ::g::Fuse::Visual**))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_ActivePage_fn;
    type->interface15.fp_get_State = (void(*)(uObject*, int*))::g::Fuse::Controls::NavigationControl__FuseNavigationINavigationget_State_fn;
    type->interface15.fp_Goto = (void(*)(uObject*, ::g::Fuse::Visual*, int*))::g::Fuse::Controls::NavigationControl__Goto_fn;
    type->interface15.fp_Toggle = (void(*)(uObject*, ::g::Fuse::Visual*))::g::Fuse::Controls::NavigationControl__Toggle_fn;
    type->interface15.fp_add_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageCountChanged_fn;
    type->interface15.fp_remove_PageCountChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageCountChanged_fn;
    type->interface15.fp_add_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_PageProgressChanged_fn;
    type->interface15.fp_remove_PageProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_PageProgressChanged_fn;
    type->interface15.fp_add_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_Navigated_fn;
    type->interface15.fp_remove_Navigated = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_Navigated_fn;
    type->interface15.fp_add_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_ActivePageChanged_fn;
    type->interface15.fp_remove_ActivePageChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_ActivePageChanged_fn;
    type->interface15.fp_add_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_StateChanged_fn;
    type->interface15.fp_remove_StateChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_StateChanged_fn;
    type->interface16.fp_GoForward = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoForward_fn;
    type->interface16.fp_GoBack = (void(*)(uObject*))::g::Fuse::Controls::NavigationControl__GoBack_fn;
    type->interface16.fp_get_CanGoBack = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoBack_fn;
    type->interface16.fp_get_CanGoForward = (void(*)(uObject*, bool*))::g::Fuse::Controls::NavigationControl__get_CanGoForward_fn;
    type->interface16.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__add_HistoryChanged_fn;
    type->interface16.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::NavigationControl__remove_HistoryChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public PageView() :2673
void PageView__ctor_9_fn(PageView* __this)
{
    __this->ctor_9();
}

// public PageView New() :2673
void PageView__New5_fn(PageView** __retval)
{
    *__retval = PageView::New5();
}

// public PageView() [instance] :2673
void PageView::ctor_9()
{
    uStackFrame __("Fuse.Controls.PageView", ".ctor()");
    ctor_8();
    Transition(1);
    GotoState(0);
}

// public PageView New() [static] :2673
PageView* PageView::New5()
{
    PageView* obj1 = (PageView*)uNew(PageView_typeof());
    obj1->ctor_9();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public partial class Panel :1769
// {
// static Panel() :1769
static void Panel__cctor_3_fn(uType* __type)
{
    Panel::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
}

static void Panel_build(uType* type)
{
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[23] = uString::Const("");
    ::STRINGS[86] = uString::Const("unable to freeze non-flat or infinite element");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[87] = uString::Const("OnPrepared");
    ::STRINGS[88] = uString::Const("unable to freeze element");
    ::TYPES[77] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::DrawContext_typeof(), NULL);
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[78] = ::g::Uno::UX::IPropertyListener_typeof();
    ::TYPES[26] = ::g::Fuse::Drawing::SolidColor_typeof();
    ::TYPES[79] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[80] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::TYPES[78/*Uno.UX.IPropertyListener*/], offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(96,
        ::g::Fuse::Triggers::BusyTaskActivity_typeof(), offsetof(::g::Fuse::Controls::Panel, _deferFreeze), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Panel, _freezeAwaitPrepared), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(::g::Fuse::Controls::Panel, _freezeBusyTask), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Panel, _frozenActualSize), 0,
        ::g::Uno::Graphics::Framebuffer_typeof(), offsetof(::g::Fuse::Controls::Panel, _frozenBuffer), 0,
        ::g::Fuse::VisualBounds_typeof(), offsetof(::g::Fuse::Controls::Panel, _frozenRenderBounds), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Panel, _isFrozen), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Panel::ColorPropertyName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ColorPropertyName", 103));
    type->Reflection.SetFunctions(8,
        new uFunction("get_Color", NULL, (void*)Panel__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Panel__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_DeferFreeze", NULL, (void*)Panel__get_DeferFreeze_fn, 0, false, ::g::Fuse::Triggers::BusyTaskActivity_typeof(), 0),
        new uFunction("set_DeferFreeze", NULL, (void*)Panel__set_DeferFreeze_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Triggers::BusyTaskActivity_typeof()),
        new uFunction("get_IsFrozen", NULL, (void*)Panel__get_IsFrozen_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsFrozen", NULL, (void*)Panel__set_IsFrozen_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Panel__New3_fn, 0, true, type, 0),
        new uFunction("SetColor", NULL, (void*)Panel__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::TYPES[78/*Uno.UX.IPropertyListener*/]));
}

::g::Fuse::Controls::Control_type* Panel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Panel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.Panel", options);
    type->fp_build_ = Panel_build;
    type->fp_ctor_ = (void*)Panel__New3_fn;
    type->fp_cctor_ = Panel__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Panel__ArrangePaddingBox_fn;
    type->fp_Draw = (void(*)(::g::Fuse::Visual*, ::g::Fuse::DrawContext*))Panel__Draw_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Panel__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Panel__GetContentSize_fn;
    type->fp_get_IsLayoutRoot = (void(*)(::g::Fuse::Visual*, bool*))Panel__get_IsLayoutRoot_fn;
    type->fp_get_LocalRenderBounds = (void(*)(::g::Fuse::Visual*, ::g::Fuse::VisualBounds**))Panel__get_LocalRenderBounds_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Panel__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Panel__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Panel() :1769
void Panel__ctor_6_fn(Panel* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :1917
void Panel__ArrangePaddingBox_fn(Panel* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Panel", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->HasFreezePrepared())
        return;

    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
}

// private void CleanupBuffer() :1814
void Panel__CleanupBuffer_fn(Panel* __this)
{
    __this->CleanupBuffer();
}

// private void CleanupListener([bool nextFrame]) :1823
void Panel__CleanupListener_fn(Panel* __this, bool* nextFrame)
{
    __this->CleanupListener(*nextFrame);
}

// public float4 get_Color() :2038
void Panel__get_Color_fn(Panel* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :2039
void Panel__set_Color_fn(Panel* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferFreeze() :1861
void Panel__get_DeferFreeze_fn(Panel* __this, int* __retval)
{
    *__retval = __this->DeferFreeze();
}

// public void set_DeferFreeze(Fuse.Triggers.BusyTaskActivity value) :1862
void Panel__set_DeferFreeze_fn(Panel* __this, int* value)
{
    __this->DeferFreeze(*value);
}

// public override sealed void Draw(Fuse.DrawContext dc) :1953
void Panel__Draw_fn(Panel* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Panel", "Draw(Fuse.DrawContext)");

    if (!__this->IsFrozen() || !__this->HasFreezePrepared())
    {
        ::g::Fuse::Elements::Element__Draw_fn(__this, dc);
        return;
    }

    uPtr(::g::Fuse::Controls::FreezeDrawable::Singleton())->Draw(dc, __this, 1.0f, __this->Scale(), __this->_frozenRenderBounds, __this->_frozenBuffer);
}

// private void EndBusy() :1837
void Panel__EndBusy_fn(Panel* __this)
{
    __this->EndBusy();
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :1934
void Panel__FastTrackDrawWithOpacity_fn(Panel* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "FastTrackDrawWithOpacity(Fuse.DrawContext)");
    bool ret2;

    if (__this->IsFrozen() && __this->HasFreezePrepared())
    {
        uPtr(::g::Fuse::Controls::FreezeDrawable::Singleton())->Draw(dc, __this, __this->Opacity(), __this->Scale(), __this->_frozenRenderBounds, __this->_frozenBuffer);
        return *__retval = true, void();
    }

    if (__this->HasChildren())
        return *__retval = false, void();

    if (__this->Background() == NULL)
        return *__retval = true, void();

    __this->DrawBackground(dc, __this->Opacity());
    return *__retval = (::g::Fuse::Elements::Element__FastTrackDrawWithOpacity_fn(__this, dc, &ret2), ret2), void();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :1910
void Panel__GetContentSize_fn(Panel* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret3;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->HasFreezePrepared())
        return *__retval = __this->_frozenActualSize, void();

    return *__retval = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret3), ret3), void();
}

// private bool get_HasFreezePrepared() :1773
void Panel__get_HasFreezePrepared_fn(Panel* __this, bool* __retval)
{
    *__retval = __this->HasFreezePrepared();
}

// public bool get_IsFrozen() :1790
void Panel__get_IsFrozen_fn(Panel* __this, bool* __retval)
{
    *__retval = __this->IsFrozen();
}

// public void set_IsFrozen(bool value) :1791
void Panel__set_IsFrozen_fn(Panel* __this, bool* value)
{
    __this->IsFrozen(*value);
}

// internal override sealed bool get_IsLayoutRoot() :1966
void Panel__get_IsLayoutRoot_fn(Panel* __this, bool* __retval)
{
    return *__retval = __this->HasFreezePrepared(), void();
}

// public override sealed Fuse.VisualBounds get_LocalRenderBounds() :1926
void Panel__get_LocalRenderBounds_fn(Panel* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Panel", "get_LocalRenderBounds()");
    ::g::Fuse::VisualBounds* ret6;

    if (__this->HasFreezePrepared())
        return *__retval = uPtr(__this->_frozenRenderBounds)->Scale(::g::Uno::Float3__New4(__this->Scale(), 1.0f)), void();

    return *__retval = (::g::Fuse::Elements::Element__get_LocalRenderBounds_fn(__this, &ret6), ret6), void();
}

// public generated Panel New() :1769
void Panel__New3_fn(Panel** __retval)
{
    *__retval = Panel::New3();
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) :2053
void Panel__OnColorChanged_fn(Panel* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->OnColorChanged(*value, origin);
}

// private void OnPrepared(Fuse.DrawContext dc) :1882
void Panel__OnPrepared_fn(Panel* __this, ::g::Fuse::DrawContext* dc)
{
    __this->OnPrepared(dc);
}

// protected override void OnRooted() :1865
void Panel__OnRooted_fn(Panel* __this)
{
    uStackFrame __("Fuse.Controls.Panel", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);

    if (__this->IsFrozen())
        __this->SetupListener();
}

// protected override void OnUnrooted() :1873
void Panel__OnUnrooted_fn(Panel* __this)
{
    uStackFrame __("Fuse.Controls.Panel", "OnUnrooted()");
    __this->CleanupBuffer();
    __this->CleanupListener(false);
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// private float2 get_Scale() :1951
void Panel__get_Scale_fn(Panel* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Scale();
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) :2042
void Panel__SetColor_fn(Panel* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetColor(*value, origin);
}

// private void SetupListener() :1843
void Panel__SetupListener_fn(Panel* __this)
{
    __this->SetupListener();
}

::g::Uno::UX::Selector Panel::ColorPropertyName_;

// public generated Panel() [instance] :1769
void Panel::ctor_6()
{
    ctor_5();
}

// private void CleanupBuffer() [instance] :1814
void Panel::CleanupBuffer()
{
    uStackFrame __("Fuse.Controls.Panel", "CleanupBuffer()");

    if (_frozenBuffer != NULL)
    {
        ::g::Fuse::FramebufferPool::Release(_frozenBuffer);
        _frozenBuffer = NULL;
    }
}

// private void CleanupListener([bool nextFrame]) [instance] :1823
void Panel::CleanupListener(bool nextFrame)
{
    uStackFrame __("Fuse.Controls.Panel", "CleanupListener([bool])");

    if (_freezeAwaitPrepared)
    {
        ::g::Fuse::Internal::DrawManager::remove_Prepared(uDelegate::New(::TYPES[77/*Uno.Action<Fuse.DrawContext>*/], (void*)Panel__OnPrepared_fn, this));

        if (nextFrame)
            ::g::Fuse::UpdateManager::PerformNextFrame(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)Panel__EndBusy_fn, this), 0);
        else
            EndBusy();

        _freezeAwaitPrepared = false;
    }
}

// public float4 get_Color() [instance] :2038
::g::Uno::Float4 Panel::Color()
{
    uStackFrame __("Fuse.Controls.Panel", "get_Color()");
    ::g::Uno::Float4 ret5;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[80/*Fuse.Visual.Get<float4>*/], uCRef<int>(1), uCRef(::g::Uno::Float4__New1(0.0f)), &ret5), ret5);
}

// public void set_Color(float4 value) [instance] :2039
void Panel::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Panel", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// public Fuse.Triggers.BusyTaskActivity get_DeferFreeze() [instance] :1861
int Panel::DeferFreeze()
{
    return _deferFreeze;
}

// public void set_DeferFreeze(Fuse.Triggers.BusyTaskActivity value) [instance] :1862
void Panel::DeferFreeze(int value)
{
    _deferFreeze = value;
}

// private void EndBusy() [instance] :1837
void Panel::EndBusy()
{
    uStackFrame __("Fuse.Controls.Panel", "EndBusy()");
    ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_freezeBusyTask, 0, ::STRINGS[23/*""*/]);
}

// private bool get_HasFreezePrepared() [instance] :1773
bool Panel::HasFreezePrepared()
{
    return _frozenBuffer != NULL;
}

// public bool get_IsFrozen() [instance] :1790
bool Panel::IsFrozen()
{
    return _isFrozen;
}

// public void set_IsFrozen(bool value) [instance] :1791
void Panel::IsFrozen(bool value)
{
    uStackFrame __("Fuse.Controls.Panel", "set_IsFrozen(bool)");

    if (_isFrozen == value)
        return;

    _isFrozen = value;

    if (!IsRootingCompleted())
        return;

    CleanupBuffer();

    if (_isFrozen && !HasFreezePrepared())
        SetupListener();
    else
        CleanupListener(false);

    if (!_isFrozen)
    {
        InvalidateLayout(2);
        InvalidateVisual();
    }
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) [instance] :2053
void Panel::OnColorChanged(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Panel", "OnColorChanged(float4,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(Panel::ColorPropertyName(), uAs<uObject*>(origin, ::TYPES[78/*Uno.UX.IPropertyListener*/]));

    if (!uIs((::g::Fuse::Drawing::Brush*)Background(), ::TYPES[26/*Fuse.Drawing.SolidColor*/]))
        Background(::g::Fuse::Drawing::SolidColor::New3(value));
    else
        uPtr(uCast< ::g::Fuse::Drawing::SolidColor*>(Background(), ::TYPES[26/*Fuse.Drawing.SolidColor*/]))->Color(value);
}

// private void OnPrepared(Fuse.DrawContext dc) [instance] :1882
void Panel::OnPrepared(::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Panel", "OnPrepared(Fuse.DrawContext)");
    ::g::Fuse::VisualBounds* ret4;

    if (DeferFreeze() != 0)
    {
        int b = ::g::Fuse::Triggers::BusyTask::GetBusyActivity(this, 1);

        if ((b & DeferFreeze()) != 0)
            return;
    }

    CleanupListener(true);
    _frozenRenderBounds = (::g::Fuse::Elements::Element__get_LocalRenderBounds_fn(this, &ret4), ret4);

    if (!uPtr(_frozenRenderBounds)->IsFlat() || uPtr(_frozenRenderBounds)->IsInfinite())
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[86/*"unable to f...*/], this, ::STRINGS[21/*"/Users/medb...*/], 1896, ::STRINGS[87/*"OnPrepared"*/]);
        return;
    }

    _frozenBuffer = CaptureRegion(dc, uPtr(_frozenRenderBounds)->FlatRect(), ::g::Uno::Float2__New1(0.0f));

    if (_frozenBuffer == NULL)
    {
        ::g::Fuse::Diagnostics::InternalError(::STRINGS[88/*"unable to f...*/], this, ::STRINGS[21/*"/Users/medb...*/], 1903, ::STRINGS[87/*"OnPrepared"*/]);
        return;
    }

    _frozenActualSize = ActualSize();
}

// private float2 get_Scale() [instance] :1951
::g::Uno::Float2 Panel::Scale()
{
    return ::g::Uno::Float2__op_Division2(ActualSize(), _frozenActualSize);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) [instance] :2042
void Panel::SetColor(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Panel", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(Color(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[79/*Fuse.Visual.Set<float4>*/], uCRef<int>(1), uCRef(value), uCRef(::g::Uno::Float4__New1(0.0f)));
        OnColorChanged(value, origin);
    }
}

// private void SetupListener() [instance] :1843
void Panel::SetupListener()
{
    uStackFrame __("Fuse.Controls.Panel", "SetupListener()");

    if (!_freezeAwaitPrepared)
    {
        ::g::Fuse::Internal::DrawManager::add_Prepared(uDelegate::New(::TYPES[77/*Uno.Action<Fuse.DrawContext>*/], (void*)Panel__OnPrepared_fn, this));
        ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_freezeBusyTask, 8, ::STRINGS[23/*""*/]);
        _freezeAwaitPrepared = true;
    }
}

// public generated Panel New() [static] :1769
Panel* Panel::New3()
{
    Panel* obj1 = (Panel*)uNew(Panel_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Path :405
// {
static void Path_build(uType* type)
{
    ::STRINGS[89] = uString::Const("Path has been deprecated. Use an image instead");
    ::STRINGS[18] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    ::TYPES[81] = ::g::Uno::Predicate_typeof()->MakeType(::g::Uno::Int_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface14));
    type->SetFields(102,
        ::g::Fuse::Controls::FillRule_typeof(), offsetof(::g::Fuse::Controls::Path, _fillRule), 0,
        ::g::Fuse::Controls::FitMode_typeof(), offsetof(::g::Fuse::Controls::Path, _fitMode), 0,
        ::g::Fuse::Drawing::PathGeometry_typeof(), offsetof(::g::Fuse::Controls::Path, _geometry), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Path, _origin), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Path, _postScale), 0,
        ::g::Fuse::Controls::PathScaleMode_typeof(), offsetof(::g::Fuse::Controls::Path, _scaleMode), 0,
        ::g::Fuse::Internal::SizingContainer_typeof(), offsetof(::g::Fuse::Controls::Path, sizing), 0);
    type->Reflection.SetFunctions(17,
        new uFunction("get_ContentAlignment", NULL, (void*)Path__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Path__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Data", NULL, (void*)Path__get_Data_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Data", NULL, (void*)Path__set_Data_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_FillRule", NULL, (void*)Path__get_FillRule_fn, 0, false, ::g::Fuse::Controls::FillRule_typeof(), 0),
        new uFunction("set_FillRule", NULL, (void*)Path__set_FillRule_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::FillRule_typeof()),
        new uFunction("get_FitMode", NULL, (void*)Path__get_FitMode_fn, 0, false, ::g::Fuse::Controls::FitMode_typeof(), 0),
        new uFunction("set_FitMode", NULL, (void*)Path__set_FitMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::FitMode_typeof()),
        new uFunction("get_Geometry", NULL, (void*)Path__get_Geometry_fn, 0, false, ::g::Fuse::Drawing::PathGeometry_typeof(), 0),
        new uFunction("set_Geometry", NULL, (void*)Path__set_Geometry_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Drawing::PathGeometry_typeof()),
        new uFunction(".ctor", NULL, (void*)Path__New4_fn, 0, true, type, 0),
        new uFunction("get_ScaleMode", NULL, (void*)Path__get_ScaleMode_fn, 0, false, ::g::Fuse::Controls::PathScaleMode_typeof(), 0),
        new uFunction("set_ScaleMode", NULL, (void*)Path__set_ScaleMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::PathScaleMode_typeof()),
        new uFunction("get_StretchDirection", NULL, (void*)Path__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Path__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Path__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Path__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()));
}

::g::Fuse::Controls::PathShape_type* Path_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathShape_typeof();
    options.FieldCount = 109;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Path);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathShape_type);
    type = (::g::Fuse::Controls::PathShape_type*)uClassType::New("Fuse.Controls.Path", options);
    type->fp_build_ = Path_build;
    type->fp_ctor_ = (void*)Path__New4_fn;
    type->fp_AlignMatrix = (void(*)(::g::Fuse::Controls::PathShape*, ::g::Uno::Float4x4*, ::g::Uno::Float4x4*))Path__AlignMatrix_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Path__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Path__GetContentSize_fn;
    type->fp_get_LocalRenderBounds = (void(*)(::g::Fuse::Visual*, ::g::Fuse::VisualBounds**))Path__get_LocalRenderBounds_fn;
    type->fp_UpdatePath = (void(*)(::g::Fuse::Controls::PathShape*, ::g::Fuse::Drawing::PathGeometryRenderer*))Path__UpdatePath_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Path() :407
void Path__ctor_8_fn(Path* __this)
{
    __this->ctor_8();
}

// protected override sealed float4x4 AlignMatrix(float4x4 b) :613
void Path__AlignMatrix_fn(Path* __this, ::g::Uno::Float4x4* b, ::g::Uno::Float4x4* __retval)
{
    ::g::Uno::Float4x4 b_ = *b;
    ::g::Uno::Float4x4 t = ::g::Uno::Matrix::Translation1(::g::Uno::Float3__New4(__this->_origin, 0.0f));
    ::g::Uno::Float4x4 r0 = ::g::Uno::Matrix::Mul8(t, b_);
    ::g::Uno::Float4x4 s = ::g::Uno::Matrix::Scaling2(::g::Uno::Float3__New4(__this->_postScale, 1.0f));
    ::g::Uno::Float4x4 r1 = ::g::Uno::Matrix::Mul8(s, r0);
    return *__retval = r1, void();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :576
void Path__ArrangePaddingBox_fn(Path* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Path", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind1;
    ::g::Uno::Float4 ind2;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));
    ::g::Uno::Float2 size = lp_.Size();
    ::g::Uno::Float2 contentDesiredSize = __this->GetNaturalContentSize();
    ::g::Uno::Float2 scale = uPtr(__this->Sizing())->CalcScale(size, contentDesiredSize);
    __this->_origin = uPtr(__this->Sizing())->CalcOrigin(size, ::g::Uno::Float2__op_Multiply2(contentDesiredSize, scale));

    if (__this->ScaleMode() == 0)
        uPtr(__this->Renderer())->PreScale(scale);
    else
        __this->_postScale = scale;

    switch (__this->FitMode())
    {
        case 0:
            break;
        case 1:
        {
            __this->_origin = ::g::Uno::Float2__op_Addition2(__this->_origin, (ind1 = uPtr(__this->Renderer())->StrokePadding(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)));
            break;
        }
        case 2:
        {
            __this->_origin = ::g::Uno::Float2__op_Subtraction2(__this->_origin, uPtr(__this->Renderer())->InnerBounds().Minimum());
            break;
        }
        case 3:
        {
            __this->_origin = ::g::Uno::Float2__op_Subtraction2(__this->_origin, uPtr(__this->Renderer())->InnerBounds().Minimum());
            __this->_origin = ::g::Uno::Float2__op_Addition2(__this->_origin, (ind2 = uPtr(__this->Renderer())->StrokePadding(), ::g::Uno::Float2__New2(ind2.X, ind2.Y)));
            break;
        }
    }
}

// public Fuse.Elements.Alignment get_ContentAlignment() :437
void Path__get_ContentAlignment_fn(Path* __this, int* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :438
void Path__set_ContentAlignment_fn(Path* __this, int* value)
{
    __this->ContentAlignment(*value);
}

// public string get_Data() :487
void Path__get_Data_fn(Path* __this, uString** __retval)
{
    *__retval = __this->Data();
}

// public void set_Data(string value) :488
void Path__set_Data_fn(Path* __this, uString* value)
{
    __this->Data(value);
}

// public Fuse.Controls.FillRule get_FillRule() :494
void Path__get_FillRule_fn(Path* __this, int* __retval)
{
    *__retval = __this->FillRule();
}

// public void set_FillRule(Fuse.Controls.FillRule value) :495
void Path__set_FillRule_fn(Path* __this, int* value)
{
    __this->FillRule(*value);
}

// public Fuse.Controls.FitMode get_FitMode() :449
void Path__get_FitMode_fn(Path* __this, int* __retval)
{
    *__retval = __this->FitMode();
}

// public void set_FitMode(Fuse.Controls.FitMode value) :450
void Path__set_FitMode_fn(Path* __this, int* value)
{
    __this->FitMode(*value);
}

// public Fuse.Drawing.PathGeometry get_Geometry() :477
void Path__get_Geometry_fn(Path* __this, ::g::Fuse::Drawing::PathGeometry** __retval)
{
    *__retval = __this->Geometry();
}

// public void set_Geometry(Fuse.Drawing.PathGeometry value) :478
void Path__set_Geometry_fn(Path* __this, ::g::Fuse::Drawing::PathGeometry* value)
{
    __this->Geometry(value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :566
void Path__GetContentSize_fn(Path* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Path", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 natural = __this->GetNaturalContentSize();
    ::g::Uno::Float2 r = uPtr(__this->Sizing())->ExpandFillSize(natural, lp_);
    return *__retval = r, void();
}

// protected float2 GetNaturalContentSize() :524
void Path__GetNaturalContentSize_fn(Path* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetNaturalContentSize();
}

// public override sealed Fuse.VisualBounds get_LocalRenderBounds() :626
void Path__get_LocalRenderBounds_fn(Path* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Path", "get_LocalRenderBounds()");
    ::g::Uno::Float4x4 m = __this->AlignMatrix(::g::Uno::Float4x4__Identity());
    ::g::Uno::Rect b = uPtr(__this->Renderer())->Bounds();
    ::g::Uno::Float4 ind3 = ::g::Uno::Vector::Transform1(b.Minimum(), m);
    ::g::Uno::Float2 tl = ::g::Uno::Float2__New2(ind3.X, ind3.Y);
    ::g::Uno::Float4 ind4 = ::g::Uno::Vector::Transform1(b.Maximum(), m);
    ::g::Uno::Float2 br = ::g::Uno::Float2__New2(ind4.X, ind4.Y);
    return *__retval = ::g::Fuse::VisualBounds::Rect(tl, br), void();
}

// public Path New() :407
void Path__New4_fn(Path** __retval)
{
    *__retval = Path::New4();
}

// public Fuse.Controls.PathScaleMode get_ScaleMode() :463
void Path__get_ScaleMode_fn(Path* __this, int* __retval)
{
    *__retval = __this->ScaleMode();
}

// public void set_ScaleMode(Fuse.Controls.PathScaleMode value) :464
void Path__set_ScaleMode_fn(Path* __this, int* value)
{
    __this->ScaleMode(*value);
}

// internal Fuse.Internal.SizingContainer get_Sizing() :413
void Path__get_Sizing_fn(Path* __this, ::g::Fuse::Internal::SizingContainer** __retval)
{
    *__retval = __this->Sizing();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :427
void Path__get_StretchDirection_fn(Path* __this, int* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :428
void Path__set_StretchDirection_fn(Path* __this, int* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :417
void Path__get_StretchMode_fn(Path* __this, int* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :418
void Path__set_StretchMode_fn(Path* __this, int* value)
{
    __this->StretchMode(*value);
}

// protected override sealed void UpdatePath(Fuse.Drawing.PathGeometryRenderer renderer) :516
void Path__UpdatePath_fn(Path* __this, ::g::Fuse::Drawing::PathGeometryRenderer* renderer)
{
    uStackFrame __("Fuse.Controls.Path", "UpdatePath(Fuse.Drawing.PathGeometryRenderer)");
    uPtr(renderer)->Geometry(__this->Geometry());
    renderer->FillRule((__this->FillRule() == 1) ? uDelegate::New(::TYPES[81/*Uno.Predicate<int>*/], (void*)::g::Fuse::Drawing::WindingRules__Odd_fn) : uDelegate::New(::TYPES[81/*Uno.Predicate<int>*/], (void*)::g::Fuse::Drawing::WindingRules__NonZero_fn));
}

// public Path() [instance] :407
void Path::ctor_8()
{
    uStackFrame __("Fuse.Controls.Path", ".ctor()");
    sizing = ::g::Fuse::Internal::SizingContainer::New1();
    _fitMode = 2;
    _scaleMode = 1;
    _geometry = ::g::Fuse::Drawing::PathGeometry::New1();
    _postScale = ::g::Uno::Float2__New1(1.0f);
    ctor_7();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[89/*"Path has be...*/], this, ::STRINGS[18/*"/Users/medb...*/], 409, ::STRINGS[19/*".ctor"*/]);
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :437
int Path::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.Path", "get_ContentAlignment()");
    return uPtr(sizing)->align;
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :438
void Path::ContentAlignment(int value)
{
    uStackFrame __("Fuse.Controls.Path", "set_ContentAlignment(Fuse.Elements.Alignment)");

    if (uPtr(sizing)->SetAlignment(value))
        OnShapeLayoutChanged();
}

// public string get_Data() [instance] :487
uString* Path::Data()
{
    uStackFrame __("Fuse.Controls.Path", "get_Data()");
    return uPtr(Geometry())->ToString();
}

// public void set_Data(string value) [instance] :488
void Path::Data(uString* value)
{
    uStackFrame __("Fuse.Controls.Path", "set_Data(string)");
    Geometry(::g::Fuse::Drawing::PathGeometry::Parse(value));
}

// public Fuse.Controls.FillRule get_FillRule() [instance] :494
int Path::FillRule()
{
    return _fillRule;
}

// public void set_FillRule(Fuse.Controls.FillRule value) [instance] :495
void Path::FillRule(int value)
{
    uStackFrame __("Fuse.Controls.Path", "set_FillRule(Fuse.Controls.FillRule)");
    _fillRule = value;
    InvalidateVisual();
}

// public Fuse.Controls.FitMode get_FitMode() [instance] :449
int Path::FitMode()
{
    return _fitMode;
}

// public void set_FitMode(Fuse.Controls.FitMode value) [instance] :450
void Path::FitMode(int value)
{
    if (value != _fitMode)
    {
        _fitMode = value;
        OnShapeLayoutChanged();
    }
}

// public Fuse.Drawing.PathGeometry get_Geometry() [instance] :477
::g::Fuse::Drawing::PathGeometry* Path::Geometry()
{
    return _geometry;
}

// public void set_Geometry(Fuse.Drawing.PathGeometry value) [instance] :478
void Path::Geometry(::g::Fuse::Drawing::PathGeometry* value)
{
    _geometry = value;
    OnShapeLayoutChanged();
}

// protected float2 GetNaturalContentSize() [instance] :524
::g::Uno::Float2 Path::GetNaturalContentSize()
{
    uStackFrame __("Fuse.Controls.Path", "GetNaturalContentSize()");
    ::g::Uno::Float2 hi = ::g::Uno::Float2__New1(0.0f);
    ::g::Uno::Float2 lo = ::g::Uno::Float2__New1(0.0f);

    switch (FitMode())
    {
        case 0:
        {
            lo = ::g::Uno::Float2__New1(0.0f);
            hi = uPtr(Renderer())->InnerBounds().Maximum();
            break;
        }
        case 1:
        {
            hi = uPtr(Renderer())->InnerBounds().Maximum();
            ::g::Uno::Float4 s = uPtr(Renderer())->StrokePadding();
            hi.X = (hi.X + s.Item(2));
            hi.Y = (hi.Y + s.Item(3));
            lo.X = (lo.X - s.Item(0));
            lo.Y = (lo.Y - s.Item(1));
            break;
        }
        case 2:
        {
            lo = uPtr(Renderer())->InnerBounds().Minimum();
            hi = uPtr(Renderer())->InnerBounds().Maximum();
            break;
        }
        case 3:
        {
            lo = uPtr(Renderer())->InnerBounds().Minimum();
            hi = uPtr(Renderer())->InnerBounds().Maximum();
            ::g::Uno::Float4 s1 = uPtr(Renderer())->StrokePadding();
            lo.X = (lo.X - s1.Item(0));
            lo.Y = (lo.Y - s1.Item(1));
            hi.X = (hi.X + s1.Item(2));
            hi.Y = (hi.Y + s1.Item(3));
            break;
        }
    }

    ::g::Uno::Float2 natural = ::g::Uno::Float2__op_Subtraction2(hi, lo);
    return natural;
}

// public Fuse.Controls.PathScaleMode get_ScaleMode() [instance] :463
int Path::ScaleMode()
{
    return _scaleMode;
}

// public void set_ScaleMode(Fuse.Controls.PathScaleMode value) [instance] :464
void Path::ScaleMode(int value)
{
    if (_scaleMode != value)
    {
        _scaleMode = value;
        OnShapeLayoutChanged();
    }
}

// internal Fuse.Internal.SizingContainer get_Sizing() [instance] :413
::g::Fuse::Internal::SizingContainer* Path::Sizing()
{
    return sizing;
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :427
int Path::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Path", "get_StretchDirection()");
    return uPtr(sizing)->stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :428
void Path::StretchDirection(int value)
{
    uStackFrame __("Fuse.Controls.Path", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (uPtr(sizing)->SetStretchDirection(value))
        OnShapeLayoutChanged();
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :417
int Path::StretchMode()
{
    uStackFrame __("Fuse.Controls.Path", "get_StretchMode()");
    return uPtr(sizing)->stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :418
void Path::StretchMode(int value)
{
    uStackFrame __("Fuse.Controls.Path", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (uPtr(sizing)->SetStretchMode(value))
        OnShapeLayoutChanged();
}

// public Path New() [static] :407
Path* Path::New4()
{
    Path* obj5 = (Path*)uNew(Path_typeof());
    obj5->ctor_8();
    return obj5;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public enum PathScaleMode :398
uEnumType* PathScaleMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.PathScaleMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Pre", 0LL,
        "Post", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public class PathShape :648
// {
static void PathShape_build(uType* type)
{
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PathShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(PathShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(PathShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(PathShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PathShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(PathShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PathShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(PathShape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PathShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(PathShape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(PathShape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(PathShape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(PathShape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(PathShape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(PathShape_type, interface14));
    type->SetFields(100,
        ::g::Fuse::Drawing::RendererContext_typeof(), offsetof(::g::Fuse::Controls::PathShape, _context), 0,
        ::g::Fuse::Drawing::PathGeometryRenderer_typeof(), offsetof(::g::Fuse::Controls::PathShape, _renderer), 0);
    type->Reflection.SetFunctions(1,
        new uFunction("GetHitPart", NULL, (void*)PathShape__GetHitPart_fn, 0, false, uObject_typeof(), 1, ::g::Uno::Float2_typeof()));
}

PathShape_type* PathShape_typeof()
{
    static uSStrong<PathShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 102;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(PathShape);
    options.TypeSize = sizeof(PathShape_type);
    type = (PathShape_type*)uClassType::New("Fuse.Controls.PathShape", options);
    type->fp_build_ = PathShape_build;
    type->fp_ctor_ = (void*)PathShape__New3_fn;
    type->fp_AlignMatrix = PathShape__AlignMatrix_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))PathShape__CalcRenderBounds_fn;
    type->fp_DrawFill = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Brush*))PathShape__DrawFill_fn;
    type->fp_DrawStroke = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Stroke*))PathShape__DrawStroke_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))PathShape__OnHitTestLocalVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))PathShape__OnRooted_fn;
    type->fp_PrepareDraw = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Uno::Float2*))PathShape__PrepareDraw_fn;
    type->fp_SoftDispose = (void(*)(::g::Fuse::Node*))PathShape__SoftDispose_fn;
    type->fp_UpdatePath = PathShape__UpdatePath_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected PathShape() :666
void PathShape__ctor_7_fn(PathShape* __this)
{
    __this->ctor_7();
}

// protected virtual float4x4 AlignMatrix(float4x4 b) :695
void PathShape__AlignMatrix_fn(PathShape* __this, ::g::Uno::Float4x4* b, ::g::Uno::Float4x4* __retval)
{
    ::g::Uno::Float4x4 b_ = *b;
    return *__retval = b_, void();
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :678
void PathShape__CalcRenderBounds_fn(PathShape* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.PathShape", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret2;
    ::g::Fuse::VisualBounds* r = (::g::Fuse::Controls::Shape__CalcRenderBounds_fn(__this, &ret2), ret2);
    r = uPtr(r)->AddRect(uPtr(__this->Renderer())->Bounds().Minimum(), uPtr(__this->Renderer())->Bounds().Maximum());
    return *__retval = r, void();
}

// protected override sealed void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :697
void PathShape__DrawFill_fn(PathShape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
    uStackFrame __("Fuse.Controls.PathShape", "DrawFill(Fuse.DrawContext,Fuse.Drawing.Brush)");
    uPtr(__this->Renderer())->DrawFill(__this->_context, fill);
}

// protected override sealed void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :702
void PathShape__DrawStroke_fn(PathShape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
    uStackFrame __("Fuse.Controls.PathShape", "DrawStroke(Fuse.DrawContext,Fuse.Drawing.Stroke)");
    uPtr(__this->Renderer())->DrawStroke(__this->_context, stroke);
}

// public object GetHitPart(float2 localCoords) :716
void PathShape__GetHitPart_fn(PathShape* __this, ::g::Uno::Float2* localCoords, uObject** __retval)
{
    *__retval = __this->GetHitPart(*localCoords);
}

// private void Invalidated() :671
void PathShape__Invalidated_fn(PathShape* __this)
{
    __this->Invalidated();
}

// protected PathShape New() :666
void PathShape__New3_fn(PathShape** __retval)
{
    *__retval = PathShape::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :707
void PathShape__OnHitTestLocalVisual_fn(PathShape* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.PathShape", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Uno::Float2 rel = ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__op_Division2(uPtr(htc)->LocalPoint(), __this->ActualSize()), uPtr(__this->Renderer())->Bounds().Size()), uPtr(__this->Renderer())->Bounds().Minimum());
    uObject* hitPart = __this->GetHitPart(rel);

    if (hitPart != NULL)
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
}

// protected override sealed void OnRooted() :660
void PathShape__OnRooted_fn(PathShape* __this)
{
    uStackFrame __("Fuse.Controls.PathShape", "OnRooted()");
    ::g::Fuse::Controls::Shape__OnRooted_fn(__this);
    uPtr(__this->_renderer)->Density(::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])));
}

// internal override sealed void PrepareDraw(Fuse.DrawContext dc, float2 canvasSize) :686
void PathShape__PrepareDraw_fn(PathShape* __this, ::g::Fuse::DrawContext* dc, ::g::Uno::Float2* canvasSize)
{
    uStackFrame __("Fuse.Controls.PathShape", "PrepareDraw(Fuse.DrawContext,float2)");
    ::g::Uno::Float2 canvasSize_ = *canvasSize;
    ::g::Fuse::Controls::Shape__PrepareDraw_fn(__this, dc, uCRef(canvasSize_));
    __this->UpdatePath(__this->_renderer);
    uPtr(__this->_renderer)->Antialiasing((__this->Smoothness() > 0.5f) ? 1 : 0);
    __this->_context = uPtr(__this->_renderer)->GetRendererContext(dc, __this->AlignMatrix(uPtr(dc)->GetLocalToClipTransform(__this)), __this->ActualSize());
}

// protected Fuse.Drawing.PathGeometryRenderer get_Renderer() :653
void PathShape__get_Renderer_fn(PathShape* __this, ::g::Fuse::Drawing::PathGeometryRenderer** __retval)
{
    *__retval = __this->Renderer();
}

// protected override sealed void SoftDispose() :722
void PathShape__SoftDispose_fn(PathShape* __this)
{
    uStackFrame __("Fuse.Controls.PathShape", "SoftDispose()");
    uPtr(__this->_renderer)->SoftDispose();
}

// protected virtual void UpdatePath(Fuse.Drawing.PathGeometryRenderer renderer) :676
void PathShape__UpdatePath_fn(PathShape* __this, ::g::Fuse::Drawing::PathGeometryRenderer* renderer)
{
}

// protected PathShape() [instance] :666
void PathShape::ctor_7()
{
    uStackFrame __("Fuse.Controls.PathShape", ".ctor()");
    _renderer = ::g::Fuse::Drawing::PathGeometryRenderer::New1();
    ctor_6();
    uPtr(Renderer())->add_VisualInvalidated(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)PathShape__Invalidated_fn, this));
}

// public object GetHitPart(float2 localCoords) [instance] :716
uObject* PathShape::GetHitPart(::g::Uno::Float2 localCoords)
{
    uStackFrame __("Fuse.Controls.PathShape", "GetHitPart(float2)");
    ::g::Uno::Float2 localCoords_ = localCoords;
    return uPtr(Renderer())->GetHitPart1(localCoords_, HasFills() ? (uObject*)Fills() : NULL, HasStrokes() ? (uObject*)Strokes() : NULL);
}

// private void Invalidated() [instance] :671
void PathShape::Invalidated()
{
    uStackFrame __("Fuse.Controls.PathShape", "Invalidated()");
    InvalidateVisual();
}

// protected Fuse.Drawing.PathGeometryRenderer get_Renderer() [instance] :653
::g::Fuse::Drawing::PathGeometryRenderer* PathShape::Renderer()
{
    uStackFrame __("Fuse.Controls.PathShape", "get_Renderer()");
    UpdatePath(_renderer);
    return _renderer;
}

// protected PathShape New() [static] :666
PathShape* PathShape::New3()
{
    PathShape* obj1 = (PathShape*)uNew(PathShape_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class Placeholder :1234
// {
static void Placeholder_build(uType* type)
{
    ::STRINGS[90] = uString::Const("ContentFactory is deprecated, use ContentTemplate instead");
    ::STRINGS[21] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno");
    ::STRINGS[91] = uString::Const("set_ContentFactory");
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface14));
    type->SetFields(95,
        ::g::Uno::UX::Template_typeof(), offsetof(::g::Fuse::Controls::Placeholder, _contentTemplate), 0,
        ::TYPES[10/*Fuse.Elements.Element*/], offsetof(::g::Fuse::Controls::Placeholder, _Target), 0);
    type->Reflection.SetFunctions(9,
        new uFunction("get_ContentFactory", NULL, (void*)Placeholder__get_ContentFactory_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_ContentFactory", NULL, (void*)Placeholder__set_ContentFactory_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction("get_ContentTemplate", NULL, (void*)Placeholder__get_ContentTemplate_fn, 0, false, ::g::Uno::UX::Template_typeof(), 0),
        new uFunction("set_ContentTemplate", NULL, (void*)Placeholder__set_ContentTemplate_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::Template_typeof()),
        new uFunction(".ctor", NULL, (void*)Placeholder__New3_fn, 0, true, type, 0),
        new uFunction("get_PlaceholderContent", NULL, (void*)Placeholder__get_PlaceholderContent_fn, 0, false, ::TYPES[10/*Fuse.Elements.Element*/], 0),
        new uFunction("set_PlaceholderContent", NULL, (void*)Placeholder__set_PlaceholderContent_fn, 0, false, uVoid_typeof(), 1, ::TYPES[10/*Fuse.Elements.Element*/]),
        new uFunction("get_Target", NULL, (void*)Placeholder__get_Target_fn, 0, false, ::TYPES[10/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Target", NULL, (void*)Placeholder__set_Target_fn, 0, false, uVoid_typeof(), 1, ::TYPES[10/*Fuse.Elements.Element*/]));
}

::g::Fuse::Controls::ContentControl_type* Placeholder_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 97;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Placeholder);
    options.TypeSize = sizeof(::g::Fuse::Controls::ContentControl_type);
    type = (::g::Fuse::Controls::ContentControl_type*)uClassType::New("Fuse.Controls.Placeholder", options);
    type->fp_build_ = Placeholder_build;
    type->fp_ctor_ = (void*)Placeholder__New3_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Placeholder__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))Placeholder__OnChildRemoved_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Placeholder() :1234
void Placeholder__ctor_6_fn(Placeholder* __this)
{
    __this->ctor_6();
}

// internal void AcquireTarget() :1291
void Placeholder__AcquireTarget_fn(Placeholder* __this)
{
    __this->AcquireTarget();
}

// public Uno.UX.Template get_ContentFactory() :1271
void Placeholder__get_ContentFactory_fn(Placeholder* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->ContentFactory();
}

// public void set_ContentFactory(Uno.UX.Template value) :1272
void Placeholder__set_ContentFactory_fn(Placeholder* __this, ::g::Uno::UX::Template* value)
{
    __this->ContentFactory(value);
}

// public Uno.UX.Template get_ContentTemplate() :1255
void Placeholder__get_ContentTemplate_fn(Placeholder* __this, ::g::Uno::UX::Template** __retval)
{
    *__retval = __this->ContentTemplate();
}

// public void set_ContentTemplate(Uno.UX.Template value) :1256
void Placeholder__set_ContentTemplate_fn(Placeholder* __this, ::g::Uno::UX::Template* value)
{
    __this->ContentTemplate(value);
}

// public generated Placeholder New() :1234
void Placeholder__New3_fn(Placeholder** __retval)
{
    *__retval = Placeholder::New3();
}

// protected override sealed void OnChildAdded(Fuse.Node n) :1279
void Placeholder__OnChildAdded_fn(Placeholder* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Placeholder", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Node* ind1;
    ::g::Fuse::Controls::ContentControl__OnChildAdded_fn(__this, n);
    uPtr(n)->OverrideContextParent = (ind1 = uPtr(n)->OverrideContextParent, ((ind1 != NULL) ? ind1 : __this));
}

// protected override sealed void OnChildRemoved(Fuse.Node n) :1285
void Placeholder__OnChildRemoved_fn(Placeholder* __this, ::g::Fuse::Node* n)
{
    uStackFrame __("Fuse.Controls.Placeholder", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::ContentControl__OnChildRemoved_fn(__this, n);

    if (uPtr(n)->OverrideContextParent == __this)
        uPtr(n)->OverrideContextParent = NULL;
}

// public Fuse.Elements.Element get_PlaceholderContent() :1244
void Placeholder__get_PlaceholderContent_fn(Placeholder* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->PlaceholderContent();
}

// public void set_PlaceholderContent(Fuse.Elements.Element value) :1245
void Placeholder__set_PlaceholderContent_fn(Placeholder* __this, ::g::Fuse::Elements::Element* value)
{
    __this->PlaceholderContent(value);
}

// public generated Fuse.Elements.Element get_Target() :1238
void Placeholder__get_Target_fn(Placeholder* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Target();
}

// public generated void set_Target(Fuse.Elements.Element value) :1238
void Placeholder__set_Target_fn(Placeholder* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Target(value);
}

// public generated Placeholder() [instance] :1234
void Placeholder::ctor_6()
{
    ctor_5();
}

// internal void AcquireTarget() [instance] :1291
void Placeholder::AcquireTarget()
{
    uStackFrame __("Fuse.Controls.Placeholder", "AcquireTarget()");

    if (Target() == NULL)
        return;

    if (Content() == Target())
        return;

    Placeholder* oldParent = uAs<Placeholder*>(uPtr(Target())->Parent(), __type);

    if (oldParent == NULL)
        return;

    uPtr(Target())->PreserveRootFrame();
    uPtr(oldParent)->Content(NULL);
    Content(Target());
}

// public Uno.UX.Template get_ContentFactory() [instance] :1271
::g::Uno::UX::Template* Placeholder::ContentFactory()
{
    return ContentTemplate();
}

// public void set_ContentFactory(Uno.UX.Template value) [instance] :1272
void Placeholder::ContentFactory(::g::Uno::UX::Template* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_ContentFactory(Uno.UX.Template)");
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[90/*"ContentFact...*/], this, ::STRINGS[21/*"/Users/medb...*/], 1274, ::STRINGS[91/*"set_Content...*/]);
    ContentTemplate(value);
}

// public Uno.UX.Template get_ContentTemplate() [instance] :1255
::g::Uno::UX::Template* Placeholder::ContentTemplate()
{
    return _contentTemplate;
}

// public void set_ContentTemplate(Uno.UX.Template value) [instance] :1256
void Placeholder::ContentTemplate(::g::Uno::UX::Template* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_ContentTemplate(Uno.UX.Template)");

    if (_contentTemplate == value)
        return;

    _contentTemplate = value;

    if (_contentTemplate == NULL)
        Content(NULL);
    else
        Content(uAs< ::g::Fuse::Elements::Element*>(uPtr(_contentTemplate)->New1(), ::TYPES[10/*Fuse.Elements.Element*/]));
}

// public Fuse.Elements.Element get_PlaceholderContent() [instance] :1244
::g::Fuse::Elements::Element* Placeholder::PlaceholderContent()
{
    return Content();
}

// public void set_PlaceholderContent(Fuse.Elements.Element value) [instance] :1245
void Placeholder::PlaceholderContent(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.Placeholder", "set_PlaceholderContent(Fuse.Elements.Element)");
    Content(value);
    Target(value);
}

// public generated Fuse.Elements.Element get_Target() [instance] :1238
::g::Fuse::Elements::Element* Placeholder::Target()
{
    return _Target;
}

// public generated void set_Target(Fuse.Elements.Element value) [instance] :1238
void Placeholder::Target(::g::Fuse::Elements::Element* value)
{
    _Target = value;
}

// public generated Placeholder New() [static] :1234
Placeholder* Placeholder::New3()
{
    Placeholder* obj2 = (Placeholder*)uNew(Placeholder_typeof());
    obj2->ctor_6();
    return obj2;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/rangecontrols/$.uno
// -----------------------------------------------------------------------------------------------------------------

// public class RangeControl :561
// {
// static RangeControl() :561
static void RangeControl__cctor_4_fn(uType* __type)
{
    RangeControl::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    RangeControl::_progressName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[92/*"Progress"*/]);
}

static void RangeControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[92] = uString::Const("Progress");
    ::TYPES[82] = ::g::Fuse::Controls::Native::IRangeView_typeof();
    ::TYPES[32] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(RangeControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(RangeControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(RangeControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(RangeControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(RangeControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(RangeControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(RangeControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(RangeControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(RangeControl_type, interface14),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(RangeControl_type, interface15),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Double_typeof(), NULL), offsetof(RangeControl_type, interface16),
        ::g::Fuse::Controls::Native::IRangeViewHost_typeof(), offsetof(RangeControl_type, interface17));
    type->SetFields(103,
        ::g::Uno::Double_typeof(), offsetof(::g::Fuse::Controls::RangeControl, _maximum), 0,
        ::g::Uno::Double_typeof(), offsetof(::g::Fuse::Controls::RangeControl, _minimum), 0,
        ::g::Uno::Double_typeof(), offsetof(::g::Fuse::Controls::RangeControl, _userStep), 0,
        ::g::Uno::Double_typeof(), offsetof(::g::Fuse::Controls::RangeControl, _value), 0,
        ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], offsetof(::g::Fuse::Controls::RangeControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::RangeControl::_progressName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::RangeControl::_valueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(20,
        new uFunction("get_Maximum", NULL, (void*)RangeControl__get_Maximum_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Maximum", NULL, (void*)RangeControl__set_Maximum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Minimum", NULL, (void*)RangeControl__get_Minimum_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Minimum", NULL, (void*)RangeControl__set_Minimum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction(".ctor", NULL, (void*)RangeControl__New4_fn, 0, true, type, 0),
        new uFunction("get_Progress", NULL, (void*)RangeControl__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Progress", NULL, (void*)RangeControl__set_Progress_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ProgressChanged", NULL, (void*)RangeControl__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)RangeControl__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("get_RelativeUserStep", NULL, (void*)RangeControl__get_RelativeUserStep_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_RelativeUserStep", NULL, (void*)RangeControl__set_RelativeUserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_RelativeValue", NULL, (void*)RangeControl__get_RelativeValue_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_RelativeValue", NULL, (void*)RangeControl__set_RelativeValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("SetValue", NULL, (void*)RangeControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Double_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_UserStep", NULL, (void*)RangeControl__get_UserStep_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_UserStep", NULL, (void*)RangeControl__set_UserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Value", NULL, (void*)RangeControl__get_Value_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)RangeControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)RangeControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)RangeControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]));
}

RangeControl_type* RangeControl_typeof()
{
    static uSStrong<RangeControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 110;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(RangeControl);
    options.TypeSize = sizeof(RangeControl_type);
    type = (RangeControl_type*)uClassType::New("Fuse.Controls.RangeControl", options);
    type->fp_build_ = RangeControl_build;
    type->fp_ctor_ = (void*)RangeControl__New4_fn;
    type->fp_cctor_ = RangeControl__cctor_4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))RangeControl__PushPropertiesToNativeView_fn;
    type->interface17.fp_OnProgressChanged = (void(*)(uObject*, double*))RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn;
    type->interface15.fp_get_Progress = (void(*)(uObject*, double*))RangeControl__get_Progress_fn;
    type->interface15.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))RangeControl__add_ProgressChanged_fn;
    type->interface15.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))RangeControl__remove_ProgressChanged_fn;
    type->interface16.fp_get_Value = (void(*)(uObject*, uTRef))RangeControl__get_Value_fn;
    type->interface16.fp_set_Value = (void(*)(uObject*, void*))RangeControl__set_Value_fn;
    type->interface16.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl__add_ValueChanged_fn;
    type->interface16.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated RangeControl() :561
void RangeControl__ctor_7_fn(RangeControl* __this)
{
    __this->ctor_7();
}

// private double ClampToRange(double v) :660
void RangeControl__ClampToRange_fn(RangeControl* __this, double* v, double* __retval)
{
    *__retval = __this->ClampToRange(*v);
}

// private void Fuse.Controls.Native.IRangeViewHost.OnProgressChanged(double newProgress) :713
void RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn(RangeControl* __this, double* newProgress)
{
    uStackFrame __("Fuse.Controls.RangeControl", "Fuse.Controls.Native.IRangeViewHost.OnProgressChanged(double)");
    double newProgress_ = *newProgress;
    __this->SetValue(__this->ValueFromRelative(newProgress_), NULL);
}

// public double get_Maximum() :582
void RangeControl__get_Maximum_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Maximum();
}

// public void set_Maximum(double value) :583
void RangeControl__set_Maximum_fn(RangeControl* __this, double* value)
{
    __this->Maximum(*value);
}

// public double get_Minimum() :567
void RangeControl__get_Minimum_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Minimum();
}

// public void set_Minimum(double value) :568
void RangeControl__set_Minimum_fn(RangeControl* __this, double* value)
{
    __this->Minimum(*value);
}

// public generated RangeControl New() :561
void RangeControl__New4_fn(RangeControl** __retval)
{
    *__retval = RangeControl::New4();
}

// protected void OnProgressChanged() :692
void RangeControl__OnProgressChanged_fn(RangeControl* __this)
{
    __this->OnProgressChanged();
}

// private void OnRangeChanged() :673
void RangeControl__OnRangeChanged_fn(RangeControl* __this)
{
    __this->OnRangeChanged();
}

// private void OnValueChanged(double value, Uno.UX.IPropertyListener origin) :681
void RangeControl__OnValueChanged_fn(RangeControl* __this, double* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// public double get_Progress() :699
void RangeControl__get_Progress_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public void set_Progress(double value) :700
void RangeControl__set_Progress_fn(RangeControl* __this, double* value)
{
    __this->Progress(*value);
}

// public void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :669
void RangeControl__add_ProgressChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :670
void RangeControl__remove_ProgressChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// protected override sealed void PushPropertiesToNativeView() :608
void RangeControl__PushPropertiesToNativeView_fn(RangeControl* __this)
{
    uStackFrame __("Fuse.Controls.RangeControl", "PushPropertiesToNativeView()");
    uObject* r = __this->RangeView();

    if (r != NULL)
        ::g::Fuse::Controls::Native::IRangeView::Progress(uInterface(uPtr(r), ::TYPES[82/*Fuse.Controls.Native.IRangeView*/]), __this->ValueToRelative(__this->Value()));
}

// private Fuse.Controls.Native.IRangeView get_RangeView() :605
void RangeControl__get_RangeView_fn(RangeControl* __this, uObject** __retval)
{
    *__retval = __this->RangeView();
}

// public double get_RelativeUserStep() :656
void RangeControl__get_RelativeUserStep_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->RelativeUserStep();
}

// public void set_RelativeUserStep(double value) :657
void RangeControl__set_RelativeUserStep_fn(RangeControl* __this, double* value)
{
    __this->RelativeUserStep(*value);
}

// public double get_RelativeValue() :639
void RangeControl__get_RelativeValue_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->RelativeValue();
}

// public void set_RelativeValue(double value) :640
void RangeControl__set_RelativeValue_fn(RangeControl* __this, double* value)
{
    __this->RelativeValue(*value);
}

// public void SetValue(double value, Uno.UX.IPropertyListener origin) :617
void RangeControl__SetValue_fn(RangeControl* __this, double* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// public double get_UserStep() :650
void RangeControl__get_UserStep_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->UserStep();
}

// public void set_UserStep(double value) :651
void RangeControl__set_UserStep_fn(RangeControl* __this, double* value)
{
    __this->UserStep(*value);
}

// public double get_Value() :597
void RangeControl__get_Value_fn(RangeControl* __this, double* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(double value) :598
void RangeControl__set_Value_fn(RangeControl* __this, double* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<double> value) :665
void RangeControl__add_ValueChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<double> value) :665
void RangeControl__remove_ValueChanged_fn(RangeControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// internal double ValueFromRelative(double relative) :703
void RangeControl__ValueFromRelative_fn(RangeControl* __this, double* relative, double* __retval)
{
    *__retval = __this->ValueFromRelative(*relative);
}

// internal double ValueToRelative(double value) :708
void RangeControl__ValueToRelative_fn(RangeControl* __this, double* value, double* __retval)
{
    *__retval = __this->ValueToRelative(*value);
}

::g::Uno::UX::Selector RangeControl::_progressName_;
::g::Uno::UX::Selector RangeControl::_valueName_;

// public generated RangeControl() [instance] :561
void RangeControl::ctor_7()
{
    _minimum = 0.0;
    _maximum = 100.0;
    ctor_6();
}

// private double ClampToRange(double v) [instance] :660
double RangeControl::ClampToRange(double v)
{
    return ::g::Uno::Math::Min(::g::Uno::Math::Max(Minimum(), v), Maximum());
}

// public double get_Maximum() [instance] :582
double RangeControl::Maximum()
{
    return _maximum;
}

// public void set_Maximum(double value) [instance] :583
void RangeControl::Maximum(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Maximum(double)");

    if (_maximum != value)
    {
        _maximum = value;
        OnRangeChanged();
    }
}

// public double get_Minimum() [instance] :567
double RangeControl::Minimum()
{
    return _minimum;
}

// public void set_Minimum(double value) [instance] :568
void RangeControl::Minimum(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Minimum(double)");

    if (_minimum != value)
    {
        _minimum = value;
        OnRangeChanged();
    }
}

// protected void OnProgressChanged() [instance] :692
void RangeControl::OnProgressChanged()
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnProgressChanged()");
    OnPropertyChanged(RangeControl::_progressName());
}

// private void OnRangeChanged() [instance] :673
void RangeControl::OnRangeChanged()
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnRangeChanged()");
    SetValue(Value(), NULL);
    OnProgressChanged();
}

// private void OnValueChanged(double value, Uno.UX.IPropertyListener origin) [instance] :681
void RangeControl::OnValueChanged(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl", "OnValueChanged(double,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(RangeControl::_valueName(), origin);

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Fuse::Scripting::DoubleChangedArgs*)::g::Fuse::Scripting::DoubleChangedArgs::New3(value));

    OnProgressChanged();
}

// public double get_Progress() [instance] :699
double RangeControl::Progress()
{
    return ValueToRelative(Value());
}

// public void set_Progress(double value) [instance] :700
void RangeControl::Progress(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Progress(double)");
    Value(ValueFromRelative(value));
}

// public void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :669
void RangeControl::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    add_ValueChanged(value);
}

// public void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :670
void RangeControl::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    remove_ValueChanged(value);
}

// private Fuse.Controls.Native.IRangeView get_RangeView() [instance] :605
uObject* RangeControl::RangeView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[82/*Fuse.Controls.Native.IRangeView*/]);
}

// public double get_RelativeUserStep() [instance] :656
double RangeControl::RelativeUserStep()
{
    return ValueToRelative(UserStep());
}

// public void set_RelativeUserStep(double value) [instance] :657
void RangeControl::RelativeUserStep(double value)
{
    UserStep(ValueFromRelative(value));
}

// public double get_RelativeValue() [instance] :639
double RangeControl::RelativeValue()
{
    return ValueToRelative(Value());
}

// public void set_RelativeValue(double value) [instance] :640
void RangeControl::RelativeValue(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_RelativeValue(double)");
    Value(ValueFromRelative(value));
}

// public void SetValue(double value, Uno.UX.IPropertyListener origin) [instance] :617
void RangeControl::SetValue(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl", "SetValue(double,Uno.UX.IPropertyListener)");
    double v = ClampToRange(value);

    if (v != _value)
    {
        _value = v;
        OnValueChanged(v, origin);
    }

    if (origin != NULL)
    {
        uObject* rv = RangeView();

        if (rv != NULL)
            ::g::Fuse::Controls::Native::IRangeView::Progress(uInterface(uPtr(rv), ::TYPES[82/*Fuse.Controls.Native.IRangeView*/]), ValueToRelative(value));
    }
}

// public double get_UserStep() [instance] :650
double RangeControl::UserStep()
{
    return _userStep;
}

// public void set_UserStep(double value) [instance] :651
void RangeControl::UserStep(double value)
{
    _userStep = value;
}

// public double get_Value() [instance] :597
double RangeControl::Value()
{
    return _value;
}

// public void set_Value(double value) [instance] :598
void RangeControl::Value(double value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "set_Value(double)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :665
void RangeControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<double>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :665
void RangeControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<double>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// internal double ValueFromRelative(double relative) [instance] :703
double RangeControl::ValueFromRelative(double relative)
{
    return (relative * (Maximum() - Minimum())) + Minimum();
}

// internal double ValueToRelative(double value) [instance] :708
double RangeControl::ValueToRelative(double value)
{
    return (value - Minimum()) / (Maximum() - Minimum());
}

// public generated RangeControl New() [static] :561
RangeControl* RangeControl::New4()
{
    RangeControl* obj1 = (RangeControl*)uNew(RangeControl_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/rangecontrols/$.uno
// -----------------------------------------------------------------------------------------------------------------

// public sealed class RangeControl2D :733
// {
// static RangeControl2D() :733
static void RangeControl2D__cctor_4_fn(uType* __type)
{
    RangeControl2D::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    RangeControl2D::_valueXName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[93/*"ValueX"*/]);
    RangeControl2D::_valueYName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[94/*"ValueY"*/]);
}

static void RangeControl2D_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[93] = uString::Const("ValueX");
    ::STRINGS[94] = uString::Const("ValueY");
    ::TYPES[83] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL);
    ::TYPES[64] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[84] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL);
    ::TYPES[67] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(RangeControl2D_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(RangeControl2D_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(RangeControl2D_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(RangeControl2D_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(RangeControl2D_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(RangeControl2D_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(RangeControl2D_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(RangeControl2D_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(RangeControl2D_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(RangeControl2D_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(RangeControl2D_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL), offsetof(RangeControl2D_type, interface15));
    type->SetFields(103,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::RangeControl2D, _maximum), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::RangeControl2D, _minimum), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::RangeControl2D, _userStep), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::RangeControl2D, _value), 0,
        ::TYPES[84/*Uno.UX.ValueChangedHandler<float2>*/], offsetof(::g::Fuse::Controls::RangeControl2D, ValueChanged1), 0,
        ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/], offsetof(::g::Fuse::Controls::RangeControl2D, ValueXChanged1), 0,
        ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/], offsetof(::g::Fuse::Controls::RangeControl2D, ValueYChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::RangeControl2D::_valueName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::RangeControl2D::_valueXName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::RangeControl2D::_valueYName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(26,
        new uFunction("get_Maximum", NULL, (void*)RangeControl2D__get_Maximum_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Maximum", NULL, (void*)RangeControl2D__set_Maximum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Minimum", NULL, (void*)RangeControl2D__get_Minimum_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Minimum", NULL, (void*)RangeControl2D__set_Minimum_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction(".ctor", NULL, (void*)RangeControl2D__New4_fn, 0, true, type, 0),
        new uFunction("get_RelativeUserStep", NULL, (void*)RangeControl2D__get_RelativeUserStep_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeUserStep", NULL, (void*)RangeControl2D__set_RelativeUserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_RelativeValue", NULL, (void*)RangeControl2D__get_RelativeValue_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeValue", NULL, (void*)RangeControl2D__set_RelativeValue_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("SetValue", NULL, (void*)RangeControl2D__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float2_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValueX", NULL, (void*)RangeControl2D__SetValueX_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValueY", NULL, (void*)RangeControl2D__SetValueY_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_UserStep", NULL, (void*)RangeControl2D__get_UserStep_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_UserStep", NULL, (void*)RangeControl2D__set_UserStep_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Value", NULL, (void*)RangeControl2D__get_Value_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)RangeControl2D__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)RangeControl2D__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[84/*Uno.UX.ValueChangedHandler<float2>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)RangeControl2D__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[84/*Uno.UX.ValueChangedHandler<float2>*/]),
        new uFunction("get_ValueX", NULL, (void*)RangeControl2D__get_ValueX_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ValueX", NULL, (void*)RangeControl2D__set_ValueX_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueXChanged", NULL, (void*)RangeControl2D__add_ValueXChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueXChanged", NULL, (void*)RangeControl2D__remove_ValueXChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("get_ValueY", NULL, (void*)RangeControl2D__get_ValueY_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ValueY", NULL, (void*)RangeControl2D__set_ValueY_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("add_ValueYChanged", NULL, (void*)RangeControl2D__add_ValueYChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]),
        new uFunction("remove_ValueYChanged", NULL, (void*)RangeControl2D__remove_ValueYChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]));
}

RangeControl2D_type* RangeControl2D_typeof()
{
    static uSStrong<RangeControl2D_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 113;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(RangeControl2D);
    options.TypeSize = sizeof(RangeControl2D_type);
    type = (RangeControl2D_type*)uClassType::New("Fuse.Controls.RangeControl2D", options);
    type->fp_build_ = RangeControl2D_build;
    type->fp_ctor_ = (void*)RangeControl2D__New4_fn;
    type->fp_cctor_ = RangeControl2D__cctor_4_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))RangeControl2D__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))RangeControl2D__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl2D__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))RangeControl2D__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated RangeControl2D() :733
void RangeControl2D__ctor_7_fn(RangeControl2D* __this)
{
    __this->ctor_7();
}

// private float2 ClampToRange(float2 v) :809
void RangeControl2D__ClampToRange_fn(RangeControl2D* __this, ::g::Uno::Float2* v, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ClampToRange(*v);
}

// public float2 get_Maximum() :752
void RangeControl2D__get_Maximum_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Maximum();
}

// public void set_Maximum(float2 value) :753
void RangeControl2D__set_Maximum_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Maximum(*value);
}

// public float2 get_Minimum() :738
void RangeControl2D__get_Minimum_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Minimum();
}

// public void set_Minimum(float2 value) :739
void RangeControl2D__set_Minimum_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Minimum(*value);
}

// public generated RangeControl2D New() :733
void RangeControl2D__New4_fn(RangeControl2D** __retval)
{
    *__retval = RangeControl2D::New4();
}

// private void OnRangeChanged() :818
void RangeControl2D__OnRangeChanged_fn(RangeControl2D* __this)
{
    __this->OnRangeChanged();
}

// private void OnValueChanged(float2 value, Uno.UX.IPropertyListener origin) :825
void RangeControl2D__OnValueChanged_fn(RangeControl2D* __this, ::g::Uno::Float2* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// public float2 get_RelativeUserStep() :805
void RangeControl2D__get_RelativeUserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeUserStep();
}

// public void set_RelativeUserStep(float2 value) :806
void RangeControl2D__set_RelativeUserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->RelativeUserStep(*value);
}

// public float2 get_RelativeValue() :788
void RangeControl2D__get_RelativeValue_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeValue();
}

// public void set_RelativeValue(float2 value) :789
void RangeControl2D__set_RelativeValue_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->RelativeValue(*value);
}

// public void SetValue(float2 value, Uno.UX.IPropertyListener origin) :775
void RangeControl2D__SetValue_fn(RangeControl2D* __this, ::g::Uno::Float2* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// public void SetValueX(float value, Uno.UX.IPropertyListener origin) :861
void RangeControl2D__SetValueX_fn(RangeControl2D* __this, float* value, uObject* origin)
{
    __this->SetValueX(*value, origin);
}

// public void SetValueY(float value, Uno.UX.IPropertyListener origin) :873
void RangeControl2D__SetValueY_fn(RangeControl2D* __this, float* value, uObject* origin)
{
    __this->SetValueY(*value, origin);
}

// public float2 get_UserStep() :799
void RangeControl2D__get_UserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->UserStep();
}

// public void set_UserStep(float2 value) :800
void RangeControl2D__set_UserStep_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->UserStep(*value);
}

// public float2 get_Value() :767
void RangeControl2D__get_Value_fn(RangeControl2D* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(float2 value) :768
void RangeControl2D__set_Value_fn(RangeControl2D* __this, ::g::Uno::Float2* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) :814
void RangeControl2D__add_ValueChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) :814
void RangeControl2D__remove_ValueChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// internal float2 ValueFromRelative(float2 relative) :839
void RangeControl2D__ValueFromRelative_fn(RangeControl2D* __this, ::g::Uno::Float2* relative, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ValueFromRelative(*relative);
}

// internal float2 ValueToRelative(float2 value) :844
void RangeControl2D__ValueToRelative_fn(RangeControl2D* __this, ::g::Uno::Float2* value, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ValueToRelative(*value);
}

// public float get_ValueX() :857
void RangeControl2D__get_ValueX_fn(RangeControl2D* __this, float* __retval)
{
    *__retval = __this->ValueX();
}

// public void set_ValueX(float value) :858
void RangeControl2D__set_ValueX_fn(RangeControl2D* __this, float* value)
{
    __this->ValueX(*value);
}

// public generated void add_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) :815
void RangeControl2D__add_ValueXChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueXChanged(value);
}

// public generated void remove_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) :815
void RangeControl2D__remove_ValueXChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueXChanged(value);
}

// public float get_ValueY() :869
void RangeControl2D__get_ValueY_fn(RangeControl2D* __this, float* __retval)
{
    *__retval = __this->ValueY();
}

// public void set_ValueY(float value) :870
void RangeControl2D__set_ValueY_fn(RangeControl2D* __this, float* value)
{
    __this->ValueY(*value);
}

// public generated void add_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) :816
void RangeControl2D__add_ValueYChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->add_ValueYChanged(value);
}

// public generated void remove_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) :816
void RangeControl2D__remove_ValueYChanged_fn(RangeControl2D* __this, uDelegate* value)
{
    __this->remove_ValueYChanged(value);
}

::g::Uno::UX::Selector RangeControl2D::_valueName_;
::g::Uno::UX::Selector RangeControl2D::_valueXName_;
::g::Uno::UX::Selector RangeControl2D::_valueYName_;

// public generated RangeControl2D() [instance] :733
void RangeControl2D::ctor_7()
{
    _minimum = ::g::Uno::Float2__New1(0.0f);
    _maximum = ::g::Uno::Float2__New1(100.0f);
    ctor_6();
}

// private float2 ClampToRange(float2 v) [instance] :809
::g::Uno::Float2 RangeControl2D::ClampToRange(::g::Uno::Float2 v)
{
    return ::g::Uno::Math::Min3(::g::Uno::Math::Max3(Minimum(), v), Maximum());
}

// public float2 get_Maximum() [instance] :752
::g::Uno::Float2 RangeControl2D::Maximum()
{
    return _maximum;
}

// public void set_Maximum(float2 value) [instance] :753
void RangeControl2D::Maximum(::g::Uno::Float2 value)
{
    if (::g::Uno::Float2__op_Inequality(_maximum, value))
    {
        _maximum = value;
        OnRangeChanged();
    }
}

// public float2 get_Minimum() [instance] :738
::g::Uno::Float2 RangeControl2D::Minimum()
{
    return _minimum;
}

// public void set_Minimum(float2 value) [instance] :739
void RangeControl2D::Minimum(::g::Uno::Float2 value)
{
    if (::g::Uno::Float2__op_Inequality(_minimum, value))
    {
        _minimum = value;
        OnRangeChanged();
    }
}

// private void OnRangeChanged() [instance] :818
void RangeControl2D::OnRangeChanged()
{
    SetValue(Value(), NULL);
}

// private void OnValueChanged(float2 value, Uno.UX.IPropertyListener origin) [instance] :825
void RangeControl2D::OnValueChanged(::g::Uno::Float2 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "OnValueChanged(float2,Uno.UX.IPropertyListener)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    ::g::Uno::UX::ValueChangedArgs* ret3;
    ::g::Uno::UX::ValueChangedArgs* ret4;
    OnPropertyChanged1(RangeControl2D::_valueName(), origin);
    OnPropertyChanged1(RangeControl2D::_valueXName(), origin);
    OnPropertyChanged1(RangeControl2D::_valueYName(), origin);

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[83/*Uno.UX.ValueChangedArgs<float2>*/], uCRef(value), &ret2), ret2));

    if (::g::Uno::Delegate::op_Inequality(ValueXChanged1, NULL))
        uPtr(ValueXChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[64/*Uno.UX.ValueChangedArgs<float>*/], uCRef(value.X), &ret3), ret3));

    if (::g::Uno::Delegate::op_Inequality(ValueYChanged1, NULL))
        uPtr(ValueYChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[64/*Uno.UX.ValueChangedArgs<float>*/], uCRef(value.Y), &ret4), ret4));
}

// public float2 get_RelativeUserStep() [instance] :805
::g::Uno::Float2 RangeControl2D::RelativeUserStep()
{
    return ValueToRelative(UserStep());
}

// public void set_RelativeUserStep(float2 value) [instance] :806
void RangeControl2D::RelativeUserStep(::g::Uno::Float2 value)
{
    UserStep(ValueFromRelative(value));
}

// public float2 get_RelativeValue() [instance] :788
::g::Uno::Float2 RangeControl2D::RelativeValue()
{
    return ValueToRelative(Value());
}

// public void set_RelativeValue(float2 value) [instance] :789
void RangeControl2D::RelativeValue(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_RelativeValue(float2)");
    Value(ValueFromRelative(value));
}

// public void SetValue(float2 value, Uno.UX.IPropertyListener origin) [instance] :775
void RangeControl2D::SetValue(::g::Uno::Float2 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValue(float2,Uno.UX.IPropertyListener)");
    ::g::Uno::Float2 v = ClampToRange(value);

    if (::g::Uno::Float2__op_Inequality(v, _value))
    {
        _value = v;
        OnValueChanged(v, origin);
    }
}

// public void SetValueX(float value, Uno.UX.IPropertyListener origin) [instance] :861
void RangeControl2D::SetValueX(float value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValueX(float,Uno.UX.IPropertyListener)");
    SetValue(::g::Uno::Float2__New2(value, Value().Y), origin);
}

// public void SetValueY(float value, Uno.UX.IPropertyListener origin) [instance] :873
void RangeControl2D::SetValueY(float value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "SetValueY(float,Uno.UX.IPropertyListener)");
    SetValue(::g::Uno::Float2__New2(Value().X, value), origin);
}

// public float2 get_UserStep() [instance] :799
::g::Uno::Float2 RangeControl2D::UserStep()
{
    return _userStep;
}

// public void set_UserStep(float2 value) [instance] :800
void RangeControl2D::UserStep(::g::Uno::Float2 value)
{
    _userStep = value;
}

// public float2 get_Value() [instance] :767
::g::Uno::Float2 RangeControl2D::Value()
{
    return _value;
}

// public void set_Value(float2 value) [instance] :768
void RangeControl2D::Value(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_Value(float2)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) [instance] :814
void RangeControl2D::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueChanged(Uno.UX.ValueChangedHandler<float2>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[84/*Uno.UX.ValueChangedHandler<float2>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<float2> value) [instance] :814
void RangeControl2D::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueChanged(Uno.UX.ValueChangedHandler<float2>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[84/*Uno.UX.ValueChangedHandler<float2>*/]);
}

// internal float2 ValueFromRelative(float2 relative) [instance] :839
::g::Uno::Float2 RangeControl2D::ValueFromRelative(::g::Uno::Float2 relative)
{
    return ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(relative, ::g::Uno::Float2__op_Subtraction2(Maximum(), Minimum())), Minimum());
}

// internal float2 ValueToRelative(float2 value) [instance] :844
::g::Uno::Float2 RangeControl2D::ValueToRelative(::g::Uno::Float2 value)
{
    ::g::Uno::Float2 range = ::g::Uno::Float2__op_Subtraction2(Maximum(), Minimum());
    float x = (::g::Uno::Math::Abs1(range.X) > 1e-05f) ? value.X / range.X : (float)((value.X >= Maximum().X) ? 1 : 0);
    float y = (::g::Uno::Math::Abs1(range.Y) > 1e-05f) ? value.Y / range.Y : (float)((value.Y >= Maximum().Y) ? 1 : 0);
    return ::g::Uno::Float2__New2(x, y);
}

// public float get_ValueX() [instance] :857
float RangeControl2D::ValueX()
{
    return Value().X;
}

// public void set_ValueX(float value) [instance] :858
void RangeControl2D::ValueX(float value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_ValueX(float)");
    Value(::g::Uno::Float2__New2(value, Value().Y));
}

// public generated void add_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :815
void RangeControl2D::add_ValueXChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueXChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueXChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueXChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueXChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :815
void RangeControl2D::remove_ValueXChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueXChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueXChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueXChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public float get_ValueY() [instance] :869
float RangeControl2D::ValueY()
{
    return Value().Y;
}

// public void set_ValueY(float value) [instance] :870
void RangeControl2D::ValueY(float value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "set_ValueY(float)");
    Value(::g::Uno::Float2__New2(Value().X, value));
}

// public generated void add_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :816
void RangeControl2D::add_ValueYChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "add_ValueYChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueYChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueYChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated void remove_ValueYChanged(Uno.UX.ValueChangedHandler<float> value) [instance] :816
void RangeControl2D::remove_ValueYChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.RangeControl2D", "remove_ValueYChanged(Uno.UX.ValueChangedHandler<float>)");
    ValueYChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueYChanged1, value), ::TYPES[67/*Uno.UX.ValueChangedHandler<float>*/]);
}

// public generated RangeControl2D New() [static] :733
RangeControl2D* RangeControl2D::New4()
{
    RangeControl2D* obj1 = (RangeControl2D*)uNew(RangeControl2D_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Rectangle :770
// {
// static Rectangle() :770
static void Rectangle__cctor_4_fn(uType* __type)
{
    Rectangle::CornerRadiusPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[95/*"CornerRadius"*/]);
}

static void Rectangle_build(uType* type)
{
    ::STRINGS[95] = uString::Const("CornerRadius");
    ::TYPES[85] = ::g::Fuse::Controls::Native::IRectangleView_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Shape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Shape_type, interface14));
    type->SetFields(100,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Rectangle, _cornerRadius), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Rectangle::CornerRadiusPropertyName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("CornerRadiusPropertyName", 101));
    type->Reflection.SetFunctions(4,
        new uFunction("get_CornerRadius", NULL, (void*)Rectangle__get_CornerRadius_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_CornerRadius", NULL, (void*)Rectangle__set_CornerRadius_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction(".ctor", NULL, (void*)Rectangle__New3_fn, 0, true, type, 0),
        new uFunction("SetCornerRadius", NULL, (void*)Rectangle__SetCornerRadius_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::g::Uno::UX::IPropertyListener_typeof()));
}

::g::Fuse::Controls::Shape_type* Rectangle_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Shape_typeof();
    options.FieldCount = 102;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Rectangle);
    options.TypeSize = sizeof(::g::Fuse::Controls::Shape_type);
    type = (::g::Fuse::Controls::Shape_type*)uClassType::New("Fuse.Controls.Rectangle", options);
    type->fp_build_ = Rectangle_build;
    type->fp_ctor_ = (void*)Rectangle__New3_fn;
    type->fp_cctor_ = Rectangle__cctor_4_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))Rectangle__CreateNativeView_fn;
    type->fp_DrawFill = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Brush*))Rectangle__DrawFill_fn;
    type->fp_DrawStroke = (void(*)(::g::Fuse::Controls::Shape*, ::g::Fuse::DrawContext*, ::g::Fuse::Drawing::Stroke*))Rectangle__DrawStroke_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))Rectangle__OnHitTestLocalVisual_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Rectangle__PushPropertiesToNativeView_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Rectangle() :770
void Rectangle__ctor_7_fn(Rectangle* __this)
{
    __this->ctor_7();
}

// public float4 get_CornerRadius() :782
void Rectangle__get_CornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CornerRadius();
}

// public void set_CornerRadius(float4 value) :783
void Rectangle__set_CornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* value)
{
    __this->CornerRadius(*value);
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :807
void Rectangle__CreateNativeView_fn(Rectangle* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Rectangle", "CreateNativeView()");
    return *__retval = (uObject*)::g::Fuse::Controls::Native::Android::Rectangle::New3(), void();
}

// protected override sealed void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :846
void Rectangle__DrawFill_fn(Rectangle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
    uStackFrame __("Fuse.Controls.Rectangle", "DrawFill(Fuse.DrawContext,Fuse.Drawing.Brush)");
    uPtr(::g::Fuse::Drawing::Primitives::Rectangle::Singleton())->Fill(dc, __this, __this->ContentSize(), __this->CornerRadius(), fill, __this->ContentTopLeft(), __this->Smoothness());
}

// protected override sealed void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :852
void Rectangle__DrawStroke_fn(Rectangle* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
    uStackFrame __("Fuse.Controls.Rectangle", "DrawStroke(Fuse.DrawContext,Fuse.Drawing.Stroke)");
    uPtr(::g::Fuse::Drawing::Primitives::Rectangle::Singleton())->Stroke(dc, __this, __this->ContentSize(), __this->CornerRadius(), stroke, __this->ContentTopLeft(), __this->Smoothness());
}

// private Fuse.Controls.Native.IRectangleView get_NativeRect() :804
void Rectangle__get_NativeRect_fn(Rectangle* __this, uObject** __retval)
{
    *__retval = __this->NativeRect();
}

// public generated Rectangle New() :770
void Rectangle__New3_fn(Rectangle** __retval)
{
    *__retval = Rectangle::New3();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :858
void Rectangle__OnHitTestLocalVisual_fn(Rectangle* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.Rectangle", "OnHitTestLocalVisual(Fuse.HitTestContext)");
    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
    ::g::Uno::Float2 lp = uPtr(htc)->LocalPoint();

    if (!__this->HasFills() || !__this->IsPointInside(lp))
        return;

    ::g::Uno::Float4 cr = __this->CornerRadius();

    if ((lp.X < cr.Item(0)) && (lp.Y < cr.Item(0)))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New1(cr.Item(0))) > cr.Item(0))
            return;
    }
    else if ((lp.X > (__this->ActualSize().X - cr.Item(1))) && (lp.Y < cr.Item(1)))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(__this->ActualSize().X - cr.Item(1), cr.Item(1))) > cr.Item(1))
            return;
    }
    else if ((lp.X < cr.Item(3)) && (lp.Y > (__this->ActualSize().Y - cr.Item(3))))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(cr.Item(3), __this->ActualSize().Y - cr.Item(3))) > cr.Item(3))
            return;
    }
    else if ((lp.X > (__this->ActualSize().X - cr.Item(2))) && (lp.Y > (__this->ActualSize().Y - cr.Item(2))))
    {
        if (::g::Uno::Vector::Distance(lp, ::g::Uno::Float2__New2(__this->ActualSize().X - cr.Item(2), __this->ActualSize().Y - cr.Item(2))) > cr.Item(2))
            return;
    }

    htc->Hit(__this);
}

// protected override sealed void PushPropertiesToNativeView() :820
void Rectangle__PushPropertiesToNativeView_fn(Rectangle* __this)
{
    uStackFrame __("Fuse.Controls.Rectangle", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Shape__PushPropertiesToNativeView_fn(__this);
    uObject* nr = __this->NativeRect();

    if (nr != NULL)
        ::g::Fuse::Controls::Native::IRectangleView::CornerRadius(uInterface(uPtr(nr), ::TYPES[85/*Fuse.Controls.Native.IRectangleView*/]), __this->CornerRadius());
}

// public void SetCornerRadius(float4 value, Uno.UX.IPropertyListener origin) :787
void Rectangle__SetCornerRadius_fn(Rectangle* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetCornerRadius(*value, origin);
}

::g::Uno::UX::Selector Rectangle::CornerRadiusPropertyName_;

// public generated Rectangle() [instance] :770
void Rectangle::ctor_7()
{
    ctor_6();
}

// public float4 get_CornerRadius() [instance] :782
::g::Uno::Float4 Rectangle::CornerRadius()
{
    return _cornerRadius;
}

// public void set_CornerRadius(float4 value) [instance] :783
void Rectangle::CornerRadius(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Rectangle", "set_CornerRadius(float4)");
    SetCornerRadius(value, (uObject*)this);
}

// private Fuse.Controls.Native.IRectangleView get_NativeRect() [instance] :804
uObject* Rectangle::NativeRect()
{
    return uAs<uObject*>(NativeView(), ::TYPES[85/*Fuse.Controls.Native.IRectangleView*/]);
}

// public void SetCornerRadius(float4 value, Uno.UX.IPropertyListener origin) [instance] :787
void Rectangle::SetCornerRadius(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Rectangle", "SetCornerRadius(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(_cornerRadius, value))
    {
        _cornerRadius = value;
        InvalidateVisual();
        uObject* nr = NativeRect();

        if (nr != NULL)
            ::g::Fuse::Controls::Native::IRectangleView::CornerRadius(uInterface(uPtr(nr), ::TYPES[85/*Fuse.Controls.Native.IRectangleView*/]), CornerRadius());

        OnPropertyChanged1(Rectangle::CornerRadiusPropertyName(), origin);
    }
}

// public generated Rectangle New() [static] :770
Rectangle* Rectangle::New3()
{
    Rectangle* obj1 = (Rectangle*)uNew(Rectangle_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class RegularPolygon :911
// {
static void RegularPolygon_build(uType* type)
{
    ::STRINGS[96] = uString::Const("RegularPolygon has been deprecated. Use an image instead");
    ::STRINGS[18] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    ::STRINGS[97] = uString::Const("Sides");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface14));
    type->SetFields(102,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::RegularPolygon, _cachedCenter), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::RegularPolygon, _cachedRadius), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::RegularPolygon, _cachedSides), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::RegularPolygon, _sides), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)RegularPolygon__New4_fn, 0, true, type, 0),
        new uFunction("get_Sides", NULL, (void*)RegularPolygon__get_Sides_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_Sides", NULL, (void*)RegularPolygon__set_Sides_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()));
}

::g::Fuse::Controls::PathShape_type* RegularPolygon_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathShape_typeof();
    options.FieldCount = 106;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(RegularPolygon);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathShape_type);
    type = (::g::Fuse::Controls::PathShape_type*)uClassType::New("Fuse.Controls.RegularPolygon", options);
    type->fp_build_ = RegularPolygon_build;
    type->fp_ctor_ = (void*)RegularPolygon__New4_fn;
    type->fp_UpdatePath = (void(*)(::g::Fuse::Controls::PathShape*, ::g::Fuse::Drawing::PathGeometryRenderer*))RegularPolygon__UpdatePath_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public RegularPolygon() :913
void RegularPolygon__ctor_8_fn(RegularPolygon* __this)
{
    __this->ctor_8();
}

// public RegularPolygon New() :913
void RegularPolygon__New4_fn(RegularPolygon** __retval)
{
    *__retval = RegularPolygon::New4();
}

// private float get_Radius() :952
void RegularPolygon__get_Radius_fn(RegularPolygon* __this, float* __retval)
{
    *__retval = __this->Radius();
}

// public int get_Sides() :921
void RegularPolygon__get_Sides_fn(RegularPolygon* __this, int* __retval)
{
    *__retval = __this->Sides();
}

// public void set_Sides(int value) :922
void RegularPolygon__set_Sides_fn(RegularPolygon* __this, int* value)
{
    __this->Sides(*value);
}

// protected override sealed void UpdatePath(Fuse.Drawing.PathGeometryRenderer renderer) :955
void RegularPolygon__UpdatePath_fn(RegularPolygon* __this, ::g::Fuse::Drawing::PathGeometryRenderer* renderer)
{
    uStackFrame __("Fuse.Controls.RegularPolygon", "UpdatePath(Fuse.Drawing.PathGeometryRenderer)");

    if (__this->Sides() < 3)
        return;

    if (((__this->_cachedSides == __this->Sides()) && (__this->_cachedRadius == __this->Radius())) && ::g::Uno::Float2__op_Equality(__this->_cachedCenter, __this->Center()))
        return;

    __this->_cachedSides = __this->Sides();
    __this->_cachedRadius = __this->Radius();
    __this->_cachedCenter = __this->Center();
    __this->InvalidateRenderBounds();
    uPtr(renderer)->Geometry(::g::Fuse::Drawing::PathGeometryExtensions::RegularPolygon(::g::Fuse::Drawing::PathGeometry::New1()->MoveTo1(__this->Center()), __this->Sides(), __this->Radius()));
}

// public RegularPolygon() [instance] :913
void RegularPolygon::ctor_8()
{
    uStackFrame __("Fuse.Controls.RegularPolygon", ".ctor()");
    _sides = 5;
    ctor_7();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[96/*"RegularPoly...*/], this, ::STRINGS[18/*"/Users/medb...*/], 915, ::STRINGS[19/*".ctor"*/]);
}

// private float get_Radius() [instance] :952
float RegularPolygon::Radius()
{
    return ::g::Uno::Math::Min1(ContentSize().X, ContentSize().Y) * 0.5f;
}

// public int get_Sides() [instance] :921
int RegularPolygon::Sides()
{
    return _sides;
}

// public void set_Sides(int value) [instance] :922
void RegularPolygon::Sides(int value)
{
    uStackFrame __("Fuse.Controls.RegularPolygon", "set_Sides(int)");

    if (value == _sides)
        return;

    _sides = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[97/*"Sides"*/]));
}

// public RegularPolygon New() [static] :913
RegularPolygon* RegularPolygon::New4()
{
    RegularPolygon* obj1 = (RegularPolygon*)uNew(RegularPolygon_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum RemoveType :957
uEnumType* RemoveType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.RemoveType", ::g::Uno::Int_typeof(), 4);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Cleared", 2LL,
        "Released", 3LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum SingleViewHost.RenderState :2079
uEnumType* SingleViewHost__RenderState_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.SingleViewHost.RenderState", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Enabled", 0LL,
        "Disabled", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum ReuseType :938
uEnumType* ReuseType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ReuseType", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "Default", 0LL,
        "None", 1LL,
        "Removed", 2LL,
        "Inactive", 3LL,
        "Replace", 4LL,
        "Any", 5LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno
// -----------------------------------------------------------------------------------------------------------

// public sealed class RightFrameBackground :128
// {
static void RightFrameBackground_build(uType* type)
{
    ::STRINGS[98] = uString::Const("Fuse.Controls.RightFrameBackground has been deprecated, as it's no longer needed, and does nothing. Please remove the usage");
    ::STRINGS[99] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(95);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)RightFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* RightFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 95;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(RightFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.RightFrameBackground", options);
    type->fp_build_ = RightFrameBackground_build;
    type->fp_ctor_ = (void*)RightFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))RightFrameBackground__GetContentSize_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public RightFrameBackground() :130
void RightFrameBackground__ctor_5_fn(RightFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :135
void RightFrameBackground__GetContentSize_fn(RightFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public RightFrameBackground New() :130
void RightFrameBackground__New2_fn(RightFrameBackground** __retval)
{
    *__retval = RightFrameBackground::New2();
}

// public RightFrameBackground() [instance] :130
void RightFrameBackground::ctor_5()
{
    ctor_4();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[98/*"Fuse.Contro...*/], this, ::STRINGS[99/*"/Users/medb...*/], 132, ::STRINGS[19/*".ctor"*/]);
}

// public RightFrameBackground New() [static] :130
RightFrameBackground* RightFrameBackground::New2()
{
    RightFrameBackground* obj1 = (RightFrameBackground*)uNew(RightFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Navigation/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// internal sealed class Router_PrepareProgress_Property :1980
// {
static void Router_PrepareProgress_Property_build(uType* type)
{
    ::STRINGS[100] = uString::Const("PrepareProgress");
    ::TYPES[86] = ::g::Fuse::Navigation::Router_typeof();
    type->SetBase(::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Double_typeof(), NULL));
    type->SetFields(1,
        ::TYPES[86/*Fuse.Navigation.Router*/], offsetof(::g::Fuse::Controls::Router_PrepareProgress_Property, _obj), 0);
}

::g::Uno::UX::Property1_type* Router_PrepareProgress_Property_typeof()
{
    static uSStrong< ::g::Uno::UX::Property1_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Property1_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(Router_PrepareProgress_Property);
    options.TypeSize = sizeof(::g::Uno::UX::Property1_type);
    type = (::g::Uno::UX::Property1_type*)uClassType::New("Fuse.Controls.Router_PrepareProgress_Property", options);
    type->fp_build_ = Router_PrepareProgress_Property_build;
    type->fp_Get1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, uTRef))Router_PrepareProgress_Property__Get1_fn;
    type->fp_get_Object = (void(*)(::g::Uno::UX::Property*, ::g::Uno::UX::PropertyObject**))Router_PrepareProgress_Property__get_Object_fn;
    type->fp_Set1 = (void(*)(::g::Uno::UX::Property1*, ::g::Uno::UX::PropertyObject*, void*, uObject*))Router_PrepareProgress_Property__Set1_fn;
    type->fp_get_SupportsOriginSetter = (void(*)(::g::Uno::UX::PropertyAccessor*, bool*))Router_PrepareProgress_Property__get_SupportsOriginSetter_fn;
    return type;
}

// public Router_PrepareProgress_Property(Fuse.Navigation.Router obj) :1983
void Router_PrepareProgress_Property__ctor_3_fn(Router_PrepareProgress_Property* __this, ::g::Fuse::Navigation::Router* obj)
{
    __this->ctor_3(obj);
}

// public override sealed double Get(Uno.UX.PropertyObject obj) :1985
void Router_PrepareProgress_Property__Get1_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject* obj, double* __retval)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", "Get(Uno.UX.PropertyObject)");
    return *__retval = uPtr(uCast< ::g::Fuse::Navigation::Router*>(obj, ::TYPES[86/*Fuse.Navigation.Router*/]))->PrepareProgress(), void();
}

// public Router_PrepareProgress_Property New(Fuse.Navigation.Router obj) :1983
void Router_PrepareProgress_Property__New1_fn(::g::Fuse::Navigation::Router* obj, Router_PrepareProgress_Property** __retval)
{
    *__retval = Router_PrepareProgress_Property::New1(obj);
}

// public override sealed Uno.UX.PropertyObject get_Object() :1984
void Router_PrepareProgress_Property__get_Object_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject** __retval)
{
    return *__retval = __this->_obj, void();
}

// public override sealed void Set(Uno.UX.PropertyObject obj, double v, Uno.UX.IPropertyListener origin) :1986
void Router_PrepareProgress_Property__Set1_fn(Router_PrepareProgress_Property* __this, ::g::Uno::UX::PropertyObject* obj, double* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", "Set(Uno.UX.PropertyObject,double,Uno.UX.IPropertyListener)");
    double v_ = *v;
    uPtr(uCast< ::g::Fuse::Navigation::Router*>(obj, ::TYPES[86/*Fuse.Navigation.Router*/]))->PrepareProgress(v_);
}

// public override sealed bool get_SupportsOriginSetter() :1987
void Router_PrepareProgress_Property__get_SupportsOriginSetter_fn(Router_PrepareProgress_Property* __this, bool* __retval)
{
    return *__retval = false, void();
}

// public Router_PrepareProgress_Property(Fuse.Navigation.Router obj) [instance] :1983
void Router_PrepareProgress_Property::ctor_3(::g::Fuse::Navigation::Router* obj)
{
    uStackFrame __("Fuse.Controls.Router_PrepareProgress_Property", ".ctor(Fuse.Navigation.Router)");
    ctor_2(::g::Uno::UX::Selector__op_Implicit(::STRINGS[100/*"PrepareProg...*/]));
    _obj = obj;
}

// public Router_PrepareProgress_Property New(Fuse.Navigation.Router obj) [static] :1983
Router_PrepareProgress_Property* Router_PrepareProgress_Property::New1(::g::Fuse::Navigation::Router* obj)
{
    Router_PrepareProgress_Property* obj1 = (Router_PrepareProgress_Property*)uNew(Router_PrepareProgress_Property_typeof());
    obj1->ctor_3(obj);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum ScrollDirections :11
uEnumType* ScrollDirections_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ScrollDirections", ::g::Uno::Int_typeof(), 8);
    type->SetLiterals(
        "Left", 1LL,
        "Right", 2LL,
        "Up", 4LL,
        "Down", 8LL,
        "Horizontal", 3LL,
        "Vertical", 12LL,
        "Both", 15LL,
        "All", 15LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public sealed class ScrollPositionChangedArgs :892
// {
static void ScrollPositionChangedArgs_build(uType* type)
{
    ::STRINGS[101] = uString::Const("value");
    ::STRINGS[102] = uString::Const("relativePosition");
    ::TYPES[87] = ::g::Fuse::Scripting::IEventSerializer_typeof();
    type->SetBase(::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Float2_typeof(), NULL));
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(ScrollPositionChangedArgs_type, interface0));
    type->SetFields(1,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollPositionChangedArgs, _ArrangeOffset), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollPositionChangedArgs, _IsAdjustment), 0,
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ScrollPositionChangedArgs, _Origin), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollPositionChangedArgs, _RelativeScrollPosition), 0);
    type->Reflection.SetFunctions(5,
        new uFunction("get_ArrangeOffset", NULL, (void*)ScrollPositionChangedArgs__get_ArrangeOffset_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_IsAdjustment", NULL, (void*)ScrollPositionChangedArgs__get_IsAdjustment_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction(".ctor", NULL, (void*)ScrollPositionChangedArgs__New3_fn, 0, true, type, 5, ::g::Uno::Float2_typeof(), ::g::Uno::Float2_typeof(), ::g::Uno::Bool_typeof(), ::g::Uno::UX::IPropertyListener_typeof(), ::g::Uno::Float2_typeof()),
        new uFunction("get_Origin", NULL, (void*)ScrollPositionChangedArgs__get_Origin_fn, 0, false, ::g::Uno::UX::IPropertyListener_typeof(), 0),
        new uFunction("get_RelativeScrollPosition", NULL, (void*)ScrollPositionChangedArgs__get_RelativeScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0));
}

ScrollPositionChangedArgs_type* ScrollPositionChangedArgs_typeof()
{
    static uSStrong<ScrollPositionChangedArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::ValueChangedArgs_typeof();
    options.FieldCount = 5;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(ScrollPositionChangedArgs);
    options.TypeSize = sizeof(ScrollPositionChangedArgs_type);
    type = (ScrollPositionChangedArgs_type*)uClassType::New("Fuse.Controls.ScrollPositionChangedArgs", options);
    type->fp_build_ = ScrollPositionChangedArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))ScrollPositionChangedArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public ScrollPositionChangedArgs(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) :902
void ScrollPositionChangedArgs__ctor_2_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* scrollPos, ::g::Uno::Float2* arrangeOffset, bool* isAdjustment, uObject* origin, ::g::Uno::Float2* relativeScrollPos)
{
    __this->ctor_2(*scrollPos, *arrangeOffset, *isAdjustment, origin, *relativeScrollPos);
}

// public generated float2 get_ArrangeOffset() :896
void ScrollPositionChangedArgs__get_ArrangeOffset_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ArrangeOffset();
}

// private generated void set_ArrangeOffset(float2 value) :896
void ScrollPositionChangedArgs__set_ArrangeOffset_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* value)
{
    __this->ArrangeOffset(*value);
}

// private void Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer s) :912
void ScrollPositionChangedArgs__FuseScriptingIScriptEventSerialize_fn(ScrollPositionChangedArgs* __this, uObject* s)
{
    uStackFrame __("Fuse.Controls.ScrollPositionChangedArgs", "Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer)");
    ::g::Uno::Float2 ret2;
    ::g::Fuse::Scripting::IEventSerializer::AddObject(uInterface(uPtr(s), ::TYPES[87/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[101/*"value"*/], uBox(::g::Uno::Float2_typeof(), (::g::Uno::UX::ValueChangedArgs__get_Value_fn(__this, &ret2), ret2)));
    ::g::Fuse::Scripting::IEventSerializer::AddObject(uInterface(s, ::TYPES[87/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[102/*"relativePos...*/], uBox(::g::Uno::Float2_typeof(), __this->RelativeScrollPosition()));
}

// public generated bool get_IsAdjustment() :894
void ScrollPositionChangedArgs__get_IsAdjustment_fn(ScrollPositionChangedArgs* __this, bool* __retval)
{
    *__retval = __this->IsAdjustment();
}

// private generated void set_IsAdjustment(bool value) :894
void ScrollPositionChangedArgs__set_IsAdjustment_fn(ScrollPositionChangedArgs* __this, bool* value)
{
    __this->IsAdjustment(*value);
}

// public ScrollPositionChangedArgs New(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) :902
void ScrollPositionChangedArgs__New3_fn(::g::Uno::Float2* scrollPos, ::g::Uno::Float2* arrangeOffset, bool* isAdjustment, uObject* origin, ::g::Uno::Float2* relativeScrollPos, ScrollPositionChangedArgs** __retval)
{
    *__retval = ScrollPositionChangedArgs::New3(*scrollPos, *arrangeOffset, *isAdjustment, origin, *relativeScrollPos);
}

// public generated Uno.UX.IPropertyListener get_Origin() :898
void ScrollPositionChangedArgs__get_Origin_fn(ScrollPositionChangedArgs* __this, uObject** __retval)
{
    *__retval = __this->Origin();
}

// private generated void set_Origin(Uno.UX.IPropertyListener value) :898
void ScrollPositionChangedArgs__set_Origin_fn(ScrollPositionChangedArgs* __this, uObject* value)
{
    __this->Origin(value);
}

// public generated float2 get_RelativeScrollPosition() :900
void ScrollPositionChangedArgs__get_RelativeScrollPosition_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeScrollPosition();
}

// private generated void set_RelativeScrollPosition(float2 value) :900
void ScrollPositionChangedArgs__set_RelativeScrollPosition_fn(ScrollPositionChangedArgs* __this, ::g::Uno::Float2* value)
{
    __this->RelativeScrollPosition(*value);
}

// public ScrollPositionChangedArgs(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) [instance] :902
void ScrollPositionChangedArgs::ctor_2(::g::Uno::Float2 scrollPos, ::g::Uno::Float2 arrangeOffset, bool isAdjustment, uObject* origin, ::g::Uno::Float2 relativeScrollPos)
{
    ::g::Uno::UX::ValueChangedArgs__ctor_1_fn(this, uCRef(scrollPos));
    ArrangeOffset(arrangeOffset);
    Origin(origin);
    IsAdjustment(isAdjustment);
    RelativeScrollPosition(relativeScrollPos);
}

// public generated float2 get_ArrangeOffset() [instance] :896
::g::Uno::Float2 ScrollPositionChangedArgs::ArrangeOffset()
{
    return _ArrangeOffset;
}

// private generated void set_ArrangeOffset(float2 value) [instance] :896
void ScrollPositionChangedArgs::ArrangeOffset(::g::Uno::Float2 value)
{
    _ArrangeOffset = value;
}

// public generated bool get_IsAdjustment() [instance] :894
bool ScrollPositionChangedArgs::IsAdjustment()
{
    return _IsAdjustment;
}

// private generated void set_IsAdjustment(bool value) [instance] :894
void ScrollPositionChangedArgs::IsAdjustment(bool value)
{
    _IsAdjustment = value;
}

// public generated Uno.UX.IPropertyListener get_Origin() [instance] :898
uObject* ScrollPositionChangedArgs::Origin()
{
    return _Origin;
}

// private generated void set_Origin(Uno.UX.IPropertyListener value) [instance] :898
void ScrollPositionChangedArgs::Origin(uObject* value)
{
    _Origin = value;
}

// public generated float2 get_RelativeScrollPosition() [instance] :900
::g::Uno::Float2 ScrollPositionChangedArgs::RelativeScrollPosition()
{
    return _RelativeScrollPosition;
}

// private generated void set_RelativeScrollPosition(float2 value) [instance] :900
void ScrollPositionChangedArgs::RelativeScrollPosition(::g::Uno::Float2 value)
{
    _RelativeScrollPosition = value;
}

// public ScrollPositionChangedArgs New(float2 scrollPos, float2 arrangeOffset, bool isAdjustment, Uno.UX.IPropertyListener origin, float2 relativeScrollPos) [static] :902
ScrollPositionChangedArgs* ScrollPositionChangedArgs::New3(::g::Uno::Float2 scrollPos, ::g::Uno::Float2 arrangeOffset, bool isAdjustment, uObject* origin, ::g::Uno::Float2 relativeScrollPos)
{
    ScrollPositionChangedArgs* obj1 = (ScrollPositionChangedArgs*)uNew(ScrollPositionChangedArgs_typeof());
    obj1->ctor_2(scrollPos, arrangeOffset, isAdjustment, origin, relativeScrollPos);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public delegate void ScrollPositionChangedHandler(object sender, Fuse.Controls.ScrollPositionChangedArgs args) :919
uDelegateType* ScrollPositionChangedHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.ScrollPositionChangedHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::ScrollPositionChangedArgs_typeof());
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView :1441
// {
// static ScrollView() :107
static void ScrollView__cctor_4_fn(uType* __type)
{
    ScrollView::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
    ScrollView::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[103/*"s"*/]);
}

static void ScrollView_build(uType* type)
{
    ::STRINGS[103] = uString::Const("s");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[88] = ::g::Fuse::Visual_typeof()->MakeMethod(9/*RemoveAllChildren<Fuse.Controls.ScrollView.DefaultScroller>*/, ScrollView__DefaultScroller_typeof(), NULL);
    ::TYPES[89] = ::g::Fuse::Visual_typeof()->MakeMethod(9/*RemoveAllChildren<Fuse.Controls.ScrollView.DefaultTrigger>*/, ScrollView__DefaultTrigger_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface14),
        ::g::Fuse::Controls::Native::IScrollViewHost_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase_type, interface15));
    type->SetFields(117,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::ScrollView, __g_nametable1), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::ScrollView::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollView::__selector0_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::ScrollViewBase_type* ScrollView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ScrollViewBase_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ScrollViewBase_typeof();
    options.FieldCount = 120;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(ScrollView);
    options.TypeSize = sizeof(::g::Fuse::Controls::ScrollViewBase_type);
    type = (::g::Fuse::Controls::ScrollViewBase_type*)uClassType::New("Fuse.Controls.ScrollView", options);
    type->fp_build_ = ScrollView_build;
    type->fp_ctor_ = (void*)ScrollView__New4_fn;
    type->fp_cctor_ = ScrollView__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))ScrollView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))ScrollView__OnUnrooted_fn;
    type->interface15.fp_OnScrollPositionChanged = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Controls::ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn;
    type->interface15.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))::g::Fuse::Controls::ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ScrollView() :111
void ScrollView__ctor_7_fn(ScrollView* __this)
{
    __this->ctor_7();
}

// private void InitializeUX() :115
void ScrollView__InitializeUX_fn(ScrollView* __this)
{
    __this->InitializeUX();
}

// public ScrollView New() :111
void ScrollView__New4_fn(ScrollView** __retval)
{
    *__retval = ScrollView::New4();
}

// protected override sealed void OnRooted() :1444
void ScrollView__OnRooted_fn(ScrollView* __this)
{
    uStackFrame __("Fuse.Controls.ScrollView", "OnRooted()");
    ::g::Fuse::Controls::ScrollViewBase__OnRooted_fn(__this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), ScrollView__DefaultScroller::New3(__this));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), ScrollView__DefaultTrigger::New3(__this));
}

// protected override sealed void OnUnrooted() :1451
void ScrollView__OnUnrooted_fn(ScrollView* __this)
{
    uStackFrame __("Fuse.Controls.ScrollView", "OnUnrooted()");
    __this->RemoveAllChildren(::TYPES[88/*Fuse.Visual.RemoveAllChildren<Fuse.Controls.ScrollView.DefaultScroller>*/]);
    __this->RemoveAllChildren(::TYPES[89/*Fuse.Visual.RemoveAllChildren<Fuse.Controls.ScrollView.DefaultTrigger>*/]);
    ::g::Fuse::Controls::ScrollViewBase__OnUnrooted_fn(__this);
}

uSStrong<uArray*> ScrollView::__g_static_nametable1_;
::g::Uno::UX::Selector ScrollView::__selector0_;

// public ScrollView() [instance] :111
void ScrollView::ctor_7()
{
    uStackFrame __("Fuse.Controls.ScrollView", ".ctor()");
    ctor_6();
    InitializeUX();
}

// private void InitializeUX() [instance] :115
void ScrollView::InitializeUX()
{
    uStackFrame __("Fuse.Controls.ScrollView", "InitializeUX()");
    ScrollView__Template* AndroidAppearance = ScrollView__Template::New2(this, this);
    ScrollView__Template1* iOSAppearance = ScrollView__Template1::New2(this, this);
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(NULL, ScrollView::__g_static_nametable1());
    Name(ScrollView::__selector0());
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// public ScrollView New() [static] :111
ScrollView* ScrollView::New4()
{
    ScrollView* obj1 = (ScrollView*)uNew(ScrollView_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public partial class ScrollViewBase :533
// {
// static ScrollViewBase() :795
static void ScrollViewBase__cctor_3_fn(uType* __type)
{
    ScrollViewBase::UserScrollName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[9/*"UserScroll"*/]);
    ScrollViewBase::_keepFocusInViewName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[104/*"KeepFocusIn...*/]);
    ScrollViewBase::_allowedScrollDirectionsName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[105/*"AllowedScro...*/]);
    ScrollViewBase::ScrollPositionName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[106/*"ScrollPosit...*/]);
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[16/*Fuse.Scripting.ScriptMember[]*/], 4, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[90/*Fuse.Scripting.ScriptMethod<Fuse.Controls.ScrollViewBase>*/], ::STRINGS[75/*"goto"*/], uDelegate::New(::TYPES[91/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.ScrollViewBase, object[]>*/], (void*)ScrollViewBase__goto__fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[90/*Fuse.Scripting.ScriptMethod<Fuse.Controls.ScrollViewBase>*/], ::STRINGS[107/*"gotoRelative"*/], uDelegate::New(::TYPES[91/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.ScrollViewBase, object[]>*/], (void*)ScrollViewBase__gotoRelative_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[90/*Fuse.Scripting.ScriptMethod<Fuse.Controls.ScrollViewBase>*/], ::STRINGS[108/*"seekTo"*/], uDelegate::New(::TYPES[91/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.ScrollViewBase, object[]>*/], (void*)ScrollViewBase__seekTo_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[90/*Fuse.Scripting.ScriptMethod<Fuse.Controls.ScrollViewBase>*/], ::STRINGS[109/*"seekToRelat...*/], uDelegate::New(::TYPES[91/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.ScrollViewBase, object[]>*/], (void*)ScrollViewBase__seekToRelative_fn), 2)));
}

static void ScrollViewBase_build(uType* type)
{
    ::STRINGS[9] = uString::Const("UserScroll");
    ::STRINGS[104] = uString::Const("KeepFocusInView");
    ::STRINGS[105] = uString::Const("AllowedScrollDirections");
    ::STRINGS[106] = uString::Const("ScrollPosition");
    ::STRINGS[75] = uString::Const("goto");
    ::STRINGS[107] = uString::Const("gotoRelative");
    ::STRINGS[108] = uString::Const("seekTo");
    ::STRINGS[109] = uString::Const("seekToRelative");
    ::STRINGS[110] = uString::Const("AllowedScrollDirections is not valid: ");
    ::STRINGS[111] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno");
    ::STRINGS[112] = uString::Const("ArrangeContent");
    ::STRINGS[113] = uString::Const("ScrollViewBase.");
    ::STRINGS[44] = uString::Const(" requires 1 or 2 arguments");
    ::STRINGS[114] = uString::Const("getParams");
    ::STRINGS[115] = uString::Const("gotoToRelative");
    ::STRINGS[116] = uString::Const("Visual content of ScrollView must be of type Element");
    ::STRINGS[117] = uString::Const("Motion should not be changed post-rooting");
    ::STRINGS[118] = uString::Const("set_Motion");
    ::TYPES[15] = ::g::Uno::Type_typeof();
    ::TYPES[16] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[90] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[91] = ::g::Uno::Action3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), NULL);
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[92] = ::g::Fuse::Gestures::Scroller_typeof();
    ::TYPES[93] = ::g::Fuse::Controls::Native::IScrollView_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    ::TYPES[94] = ::g::Fuse::Controls::ScrollPositionChangedHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ScrollViewBase_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ScrollViewBase_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ScrollViewBase_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ScrollViewBase_type, interface5),
        ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/], offsetof(ScrollViewBase_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ScrollViewBase_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(ScrollViewBase_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ScrollViewBase_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ScrollViewBase_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ScrollViewBase_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ScrollViewBase_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ScrollViewBase_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ScrollViewBase_type, interface14),
        ::g::Fuse::Controls::Native::IScrollViewHost_typeof(), offsetof(ScrollViewBase_type, interface15));
    type->SetFields(95,
        ::g::Fuse::Controls::ScrollDirections_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _allowedScrollDirections), 0,
        ::g::Fuse::Elements::Alignment_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _contentAlignment), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _contentMarginSize), 0,
        ::g::Fuse::Visual_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _currentContent), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _hasPrevArrange), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _keepFocusInView), 0,
        ::g::Fuse::Controls::ScrollViewLayoutMode_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _layoutMode), 0,
        ::g::Fuse::Motion::MotionConfig_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _motion), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _oldActualSize), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _oldMaxScroll), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _oldMinScroll), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _oldScrollPosition), 0,
        ::TYPES[10/*Fuse.Elements.Element*/], offsetof(::g::Fuse::Controls::ScrollViewBase, _placeAnchor), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _placePosition), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _previousRelative), 0,
        ::TYPES[92/*Fuse.Gestures.Scroller*/], offsetof(::g::Fuse::Controls::ScrollViewBase, _scroller), 0,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _scrollPosition), 0,
        ::g::Fuse::Translation_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _scrollTranslation), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _snapMaxTransform), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _snapMinTransform), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ScrollViewBase, _userScroll), 0,
        ::TYPES[94/*Fuse.Controls.ScrollPositionChangedHandler*/], offsetof(::g::Fuse::Controls::ScrollViewBase, ScrollPositionChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollViewBase::_allowedScrollDirectionsName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollViewBase::_keepFocusInViewName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollViewBase::ScrollPositionName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ScrollViewBase::UserScrollName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(30,
        new uFunction("get_AllowedScrollDirections", NULL, (void*)ScrollViewBase__get_AllowedScrollDirections_fn, 0, false, ::g::Fuse::Controls::ScrollDirections_typeof(), 0),
        new uFunction("set_AllowedScrollDirections", NULL, (void*)ScrollViewBase__set_AllowedScrollDirections_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollDirections_typeof()),
        new uFunction("GetVisualScrollPosition", NULL, (void*)ScrollViewBase__GetVisualScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 1, ::g::Fuse::Visual_typeof()),
        new uFunction("Goto", NULL, (void*)ScrollViewBase__Goto_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("GotoRelative", NULL, (void*)ScrollViewBase__GotoRelative_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_KeepFocusInView", NULL, (void*)ScrollViewBase__get_KeepFocusInView_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_KeepFocusInView", NULL, (void*)ScrollViewBase__set_KeepFocusInView_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_LayoutMode", NULL, (void*)ScrollViewBase__get_LayoutMode_fn, 0, false, ::g::Fuse::Controls::ScrollViewLayoutMode_typeof(), 0),
        new uFunction("set_LayoutMode", NULL, (void*)ScrollViewBase__set_LayoutMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::ScrollViewLayoutMode_typeof()),
        new uFunction("get_MaxOverflow", NULL, (void*)ScrollViewBase__get_MaxOverflow_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MaxScroll", NULL, (void*)ScrollViewBase__get_MaxScroll_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MinOverflow", NULL, (void*)ScrollViewBase__get_MinOverflow_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_MinScroll", NULL, (void*)ScrollViewBase__get_MinScroll_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("get_Motion", NULL, (void*)ScrollViewBase__get_Motion_fn, 0, false, ::g::Fuse::Motion::MotionConfig_typeof(), 0),
        new uFunction("set_Motion", NULL, (void*)ScrollViewBase__set_Motion_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Motion::MotionConfig_typeof()),
        new uFunction(".ctor", NULL, (void*)ScrollViewBase__New3_fn, 0, true, type, 0),
        new uFunction("get_RelativeScrollPosition", NULL, (void*)ScrollViewBase__get_RelativeScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_RelativeScrollPosition", NULL, (void*)ScrollViewBase__set_RelativeScrollPosition_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("get_Scroller", NULL, (void*)ScrollViewBase__get_Scroller_fn, 0, false, ::TYPES[92/*Fuse.Gestures.Scroller*/], 0),
        new uFunction("get_ScrollPosition", NULL, (void*)ScrollViewBase__get_ScrollPosition_fn, 0, false, ::g::Uno::Float2_typeof(), 0),
        new uFunction("set_ScrollPosition", NULL, (void*)ScrollViewBase__set_ScrollPosition_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float2_typeof()),
        new uFunction("add_ScrollPositionChanged", NULL, (void*)ScrollViewBase__add_ScrollPositionChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[94/*Fuse.Controls.ScrollPositionChangedHandler*/]),
        new uFunction("remove_ScrollPositionChanged", NULL, (void*)ScrollViewBase__remove_ScrollPositionChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[94/*Fuse.Controls.ScrollPositionChangedHandler*/]),
        new uFunction("SetScrollPosition", NULL, (void*)ScrollViewBase__SetScrollPosition1_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float2_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_SnapMaxTransform", NULL, (void*)ScrollViewBase__get_SnapMaxTransform_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_SnapMaxTransform", NULL, (void*)ScrollViewBase__set_SnapMaxTransform_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_SnapMinTransform", NULL, (void*)ScrollViewBase__get_SnapMinTransform_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_SnapMinTransform", NULL, (void*)ScrollViewBase__set_SnapMinTransform_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_UserScroll", NULL, (void*)ScrollViewBase__get_UserScroll_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_UserScroll", NULL, (void*)ScrollViewBase__set_UserScroll_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

ScrollViewBase_type* ScrollViewBase_typeof()
{
    static uSStrong<ScrollViewBase_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(ScrollViewBase);
    options.TypeSize = sizeof(ScrollViewBase_type);
    type = (ScrollViewBase_type*)uClassType::New("Fuse.Controls.ScrollViewBase", options);
    type->fp_build_ = ScrollViewBase_build;
    type->fp_ctor_ = (void*)ScrollViewBase__New3_fn;
    type->fp_cctor_ = ScrollViewBase__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))ScrollViewBase__ArrangePaddingBox_fn;
    type->fp_CompensateForScrollView = (void(*)(::g::Fuse::Controls::Control*, ::g::Uno::Float4x4*))ScrollViewBase__CompensateForScrollView_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))ScrollViewBase__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int*))ScrollViewBase__IsMarginBoxDependent_fn;
    type->fp_OnChildAdded = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ScrollViewBase__OnChildAdded_fn;
    type->fp_OnChildRemoved = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Node*))ScrollViewBase__OnChildRemoved_fn;
    type->fp_OnContentChanged = (void(*)(::g::Fuse::Controls::ContentControl*))ScrollViewBase__OnContentChanged_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))ScrollViewBase__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))ScrollViewBase__OnUnrooted_fn;
    type->interface15.fp_OnScrollPositionChanged = (void(*)(uObject*, ::g::Uno::Float2*))ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn;
    type->interface15.fp_get_PixelsPerPoint = (void(*)(uObject*, float*))ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public ScrollViewBase() :1023
void ScrollViewBase__ctor_6_fn(ScrollViewBase* __this)
{
    __this->ctor_6();
}

// public Fuse.Controls.ScrollDirections get_AllowedScrollDirections() :1112
void ScrollViewBase__get_AllowedScrollDirections_fn(ScrollViewBase* __this, int* __retval)
{
    *__retval = __this->AllowedScrollDirections();
}

// public void set_AllowedScrollDirections(Fuse.Controls.ScrollDirections value) :1113
void ScrollViewBase__set_AllowedScrollDirections_fn(ScrollViewBase* __this, int* value)
{
    __this->AllowedScrollDirections(*value);
}

// private void ArrangeContent(Fuse.LayoutParams lp) :650
void ScrollViewBase__ArrangeContent_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp)
{
    __this->ArrangeContent(*lp);
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :551
void ScrollViewBase__ArrangePaddingBox_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Element() == NULL)
    {
        __this->_contentMarginSize = ::g::Uno::Float2__New1(0.0f);
        __this->_placeAnchor = NULL;
    }
    else
    {
        __this->_placeAnchor = ((!__this->_hasPrevArrange || (__this->LayoutMode() == 0)) ? uCast< ::g::Fuse::Elements::Element*>(NULL, ::TYPES[10/*Fuse.Elements.Element*/]) : (::g::Fuse::Elements::Element*)__this->FindAnchorElement());

        if (__this->_placeAnchor != NULL)
        {
            __this->_oldMinScroll = __this->MinScroll();
            __this->_oldMaxScroll = __this->MaxScroll();
            __this->_oldScrollPosition = __this->ScrollPosition();
            __this->_oldActualSize = __this->ActualSize();
            __this->_placePosition = ::g::Uno::Float2__op_Addition2(uPtr(__this->_placeAnchor)->ActualPosition(), uPtr(__this->Content())->ActualPosition());
        }

        __this->ArrangeContent(lp_);
        __this->_hasPrevArrange = true;
    }

    ::g::Fuse::UpdateManager::AddDeferredAction1(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)ScrollViewBase__UpdateScrollPosition_fn, __this), ::g::Fuse::LayoutPriority::Post());
}

// internal override sealed void CompensateForScrollView(float4x4& t) :776
void ScrollViewBase__CompensateForScrollView_fn(ScrollViewBase* __this, ::g::Uno::Float4x4* t)
{
    (*t).M41 = ((*t).M41 + __this->ScrollPosition().X);
    (*t).M42 = ((*t).M42 + __this->ScrollPosition().Y);
}

// internal float2 Constrain(float2 t) :1362
void ScrollViewBase__Constrain_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Constrain(*t);
}

// private float2 ConstrainDown(float2 t) :1372
void ScrollViewBase__ConstrainDown_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainDown(*t);
}

// internal float2 ConstrainExtents(float2 t) :1353
void ScrollViewBase__ConstrainExtents_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainExtents(*t);
}

// private float2 ConstrainUp(float2 t) :1367
void ScrollViewBase__ConstrainUp_fn(ScrollViewBase* __this, ::g::Uno::Float2* t, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ConstrainUp(*t);
}

// internal float2 DistanceToView(float2 min, float2 max) :730
void ScrollViewBase__DistanceToView_fn(ScrollViewBase* __this, ::g::Uno::Float2* min, ::g::Uno::Float2* max, ::g::Uno::Float2* __retval)
{
    *__retval = __this->DistanceToView(*min, *max);
}

// private float DistanceToViewLinear(float min, float max, float sp, float size) :737
void ScrollViewBase__DistanceToViewLinear_fn(ScrollViewBase* __this, float* min, float* max, float* sp, float* size, float* __retval)
{
    *__retval = __this->DistanceToViewLinear(*min, *max, *sp, *size);
}

// private Fuse.Elements.Element get_Element() :959
void ScrollViewBase__get_Element_fn(ScrollViewBase* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Element();
}

// private Fuse.Elements.Element FindAnchorElement() :620
void ScrollViewBase__FindAnchorElement_fn(ScrollViewBase* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->FindAnchorElement();
}

// private float2 FromScalarPosition(float value) :1246
void ScrollViewBase__FromScalarPosition_fn(ScrollViewBase* __this, float* value, ::g::Uno::Float2* __retval)
{
    *__retval = __this->FromScalarPosition(*value);
}

// private void Fuse.Controls.Native.IScrollViewHost.OnScrollPositionChanged(float2 newScrollPosition) :771
void ScrollViewBase__FuseControlsNativeIScrollViewHostOnScrollPositionChanged_fn(ScrollViewBase* __this, ::g::Uno::Float2* newScrollPosition)
{
    ::g::Uno::Float2 newScrollPosition_ = *newScrollPosition;
    __this->SetScrollPosition1(newScrollPosition_, NULL);
}

// private float Fuse.Controls.Native.IScrollViewHost.get_PixelsPerPoint() :768
void ScrollViewBase__FuseControlsNativeIScrollViewHostget_PixelsPerPoint_fn(ScrollViewBase* __this, float* __retval)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "Fuse.Controls.Native.IScrollViewHost.get_PixelsPerPoint()");
    return *__retval = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])), void();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :715
void ScrollViewBase__GetContentSize_fn(ScrollViewBase* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind6;
    ::g::Uno::Float4 ind7;
    ::g::Fuse::LayoutParams lp_ = *lp;

    if (__this->Element() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind6 = __this->Padding(), ::g::Uno::Float2__New2(ind6.X, ind6.Y)), (ind7 = __this->Padding(), ::g::Uno::Float2__New2(ind7.Z, ind7.W))));
        ::g::Uno::Float2 r = uPtr(__this->Element())->GetMarginSize(nlp);
        return *__retval = r, void();
    }

    return *__retval = ::g::Uno::Float2__New1(0.0f), void();
}

// private static bool getParams(Fuse.Controls.ScrollViewBase s, object[] args, string func, float2& pos) :804
void ScrollViewBase__getParams_fn(ScrollViewBase* s, uArray* args, uString* func, ::g::Uno::Float2* pos, bool* __retval)
{
    *__retval = ScrollViewBase::getParams(s, args, func, pos);
}

// public float2 GetVisualScrollPosition(Fuse.Visual n) :1207
void ScrollViewBase__GetVisualScrollPosition_fn(ScrollViewBase* __this, ::g::Fuse::Visual* n, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetVisualScrollPosition(n);
}

// public void Goto(float2 position) :1228
void ScrollViewBase__Goto_fn(ScrollViewBase* __this, ::g::Uno::Float2* position)
{
    __this->Goto(*position);
}

// private static void goto_(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) :825
void ScrollViewBase__goto__fn(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::goto_(c, s, args);
}

// private static void gotoRelative(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) :839
void ScrollViewBase__gotoRelative_fn(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::gotoRelative(c, s, args);
}

// public void GotoRelative(float2 position) :1241
void ScrollViewBase__GotoRelative_fn(ScrollViewBase* __this, ::g::Uno::Float2* position)
{
    __this->GotoRelative(*position);
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :709
void ScrollViewBase__IsMarginBoxDependent_fn(ScrollViewBase* __this, ::g::Fuse::Visual* child, int* __retval)
{
    return *__retval = 3, void();
}

// public bool get_KeepFocusInView() :1084
void ScrollViewBase__get_KeepFocusInView_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->KeepFocusInView();
}

// public void set_KeepFocusInView(bool value) :1085
void ScrollViewBase__set_KeepFocusInView_fn(ScrollViewBase* __this, bool* value)
{
    __this->KeepFocusInView(*value);
}

// public Fuse.Controls.ScrollViewLayoutMode get_LayoutMode() :543
void ScrollViewBase__get_LayoutMode_fn(ScrollViewBase* __this, int* __retval)
{
    *__retval = __this->LayoutMode();
}

// public void set_LayoutMode(Fuse.Controls.ScrollViewLayoutMode value) :544
void ScrollViewBase__set_LayoutMode_fn(ScrollViewBase* __this, int* value)
{
    __this->LayoutMode(*value);
}

// public float2 get_MaxOverflow() :1323
void ScrollViewBase__get_MaxOverflow_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MaxOverflow();
}

// public float2 get_MaxScroll() :1308
void ScrollViewBase__get_MaxScroll_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MaxScroll();
}

// public float2 get_MinOverflow() :1347
void ScrollViewBase__get_MinOverflow_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MinOverflow();
}

// public float2 get_MinScroll() :1334
void ScrollViewBase__get_MinScroll_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->MinScroll();
}

// public Fuse.Motion.MotionConfig get_Motion() :1047
void ScrollViewBase__get_Motion_fn(ScrollViewBase* __this, ::g::Fuse::Motion::MotionConfig** __retval)
{
    *__retval = __this->Motion();
}

// public void set_Motion(Fuse.Motion.MotionConfig value) :1053
void ScrollViewBase__set_Motion_fn(ScrollViewBase* __this, ::g::Fuse::Motion::MotionConfig* value)
{
    __this->Motion(value);
}

// private Fuse.Controls.Native.IScrollView get_NativeScrollView() :763
void ScrollViewBase__get_NativeScrollView_fn(ScrollViewBase* __this, uObject** __retval)
{
    *__retval = __this->NativeScrollView();
}

// public ScrollViewBase New() :1023
void ScrollViewBase__New3_fn(ScrollViewBase** __retval)
{
    *__retval = ScrollViewBase::New3();
}

// protected override sealed void OnChildAdded(Fuse.Node b) :1061
void ScrollViewBase__OnChildAdded_fn(ScrollViewBase* __this, ::g::Fuse::Node* b)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnChildAdded(Fuse.Node)");
    ::g::Fuse::Controls::ContentControl__OnChildAdded_fn(__this, b);

    if (uIs(b, ::TYPES[92/*Fuse.Gestures.Scroller*/]))
        __this->_scroller = uAs< ::g::Fuse::Gestures::Scroller*>(b, ::TYPES[92/*Fuse.Gestures.Scroller*/]);
}

// protected override sealed void OnChildRemoved(Fuse.Node b) :1070
void ScrollViewBase__OnChildRemoved_fn(ScrollViewBase* __this, ::g::Fuse::Node* b)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnChildRemoved(Fuse.Node)");
    ::g::Fuse::Controls::ContentControl__OnChildRemoved_fn(__this, b);

    if (b == __this->_scroller)
        __this->_scroller = NULL;
}

// protected override sealed void OnContentChanged() :1000
void ScrollViewBase__OnContentChanged_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnContentChanged()");
    bool ret13;
    ::g::Fuse::Controls::ContentControl__OnContentChanged_fn(__this);

    if ((__this->Content() != NULL) && !uIs((::g::Fuse::Elements::Element*)__this->Content(), ::TYPES[10/*Fuse.Elements.Element*/]))
        U_THROW(::g::Uno::Exception::New2(::STRINGS[116/*"Visual cont...*/]));

    if (__this->_currentContent != NULL)
        ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(__this->_currentContent)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_scrollTranslation, &ret13);

    __this->_currentContent = __this->Content();

    if (__this->_currentContent != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->_currentContent)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_scrollTranslation);

    __this->_hasPrevArrange = false;
}

// protected override void OnRooted() :1012
void ScrollViewBase__OnRooted_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_hasPrevArrange = false;
}

// private void OnScrollPositionChanged(float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) :1293
void ScrollViewBase__OnScrollPositionChanged_fn(ScrollViewBase* __this, ::g::Uno::Float2* arrangeOffset, bool* adjustment, uObject* origin)
{
    __this->OnScrollPositionChanged(*arrangeOffset, *adjustment, origin);
}

// private void OnScrollPropertyChanged(Uno.UX.Selector name, Uno.UX.IPropertyListener origin) :1128
void ScrollViewBase__OnScrollPropertyChanged_fn(ScrollViewBase* __this, ::g::Uno::UX::Selector* name, uObject* origin)
{
    __this->OnScrollPropertyChanged(*name, origin);
}

// protected override void OnUnrooted() :1018
void ScrollViewBase__OnUnrooted_fn(ScrollViewBase* __this)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
}

// public float2 get_RelativeScrollPosition() :1269
void ScrollViewBase__get_RelativeScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->RelativeScrollPosition();
}

// public void set_RelativeScrollPosition(float2 value) :1281
void ScrollViewBase__set_RelativeScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value)
{
    __this->RelativeScrollPosition(*value);
}

// public Fuse.Gestures.Scroller get_Scroller() :1032
void ScrollViewBase__get_Scroller_fn(ScrollViewBase* __this, ::g::Fuse::Gestures::Scroller** __retval)
{
    *__retval = __this->Scroller();
}

// public float2 get_ScrollPosition() :1143
void ScrollViewBase__get_ScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ScrollPosition();
}

// public void set_ScrollPosition(float2 value) :1144
void ScrollViewBase__set_ScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value)
{
    __this->ScrollPosition(*value);
}

// public generated void add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) :1290
void ScrollViewBase__add_ScrollPositionChanged_fn(ScrollViewBase* __this, uDelegate* value)
{
    __this->add_ScrollPositionChanged(value);
}

// public generated void remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) :1290
void ScrollViewBase__remove_ScrollPositionChanged_fn(ScrollViewBase* __this, uDelegate* value)
{
    __this->remove_ScrollPositionChanged(value);
}

// private static void seekTo(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) :853
void ScrollViewBase__seekTo_fn(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::seekTo(c, s, args);
}

// private static void seekToRelative(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) :867
void ScrollViewBase__seekToRelative_fn(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    ScrollViewBase::seekToRelative(c, s, args);
}

// private void SetScrollPosition(float2 position, float2 arrangeOffset, Uno.UX.IPropertyListener origin) :1155
void ScrollViewBase__SetScrollPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, ::g::Uno::Float2* arrangeOffset, uObject* origin)
{
    __this->SetScrollPosition(*position, *arrangeOffset, origin);
}

// public void SetScrollPosition(float2 position, Uno.UX.IPropertyListener origin) :1150
void ScrollViewBase__SetScrollPosition1_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, uObject* origin)
{
    __this->SetScrollPosition1(*position, origin);
}

// private void SetScrollPositionImpl(float2 position, float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) :1160
void ScrollViewBase__SetScrollPositionImpl_fn(ScrollViewBase* __this, ::g::Uno::Float2* position, ::g::Uno::Float2* arrangeOffset, bool* adjustment, uObject* origin)
{
    __this->SetScrollPositionImpl(*position, *arrangeOffset, *adjustment, origin);
}

// public bool get_SnapMaxTransform() :995
void ScrollViewBase__get_SnapMaxTransform_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->SnapMaxTransform();
}

// public void set_SnapMaxTransform(bool value) :996
void ScrollViewBase__set_SnapMaxTransform_fn(ScrollViewBase* __this, bool* value)
{
    __this->SnapMaxTransform(*value);
}

// public bool get_SnapMinTransform() :985
void ScrollViewBase__get_SnapMinTransform_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->SnapMinTransform();
}

// public void set_SnapMinTransform(bool value) :986
void ScrollViewBase__set_SnapMinTransform_fn(ScrollViewBase* __this, bool* value)
{
    __this->SnapMinTransform(*value);
}

// internal float ToScalarPosition(float2 value) :1255
void ScrollViewBase__ToScalarPosition_fn(ScrollViewBase* __this, ::g::Uno::Float2* value, float* __retval)
{
    *__retval = __this->ToScalarPosition(*value);
}

// private void UpdateScrollPosition() :578
void ScrollViewBase__UpdateScrollPosition_fn(ScrollViewBase* __this)
{
    __this->UpdateScrollPosition();
}

// public bool get_UserScroll() :968
void ScrollViewBase__get_UserScroll_fn(ScrollViewBase* __this, bool* __retval)
{
    *__retval = __this->UserScroll();
}

// public void set_UserScroll(bool value) :969
void ScrollViewBase__set_UserScroll_fn(ScrollViewBase* __this, bool* value)
{
    __this->UserScroll(*value);
}

::g::Uno::UX::Selector ScrollViewBase::_allowedScrollDirectionsName_;
::g::Uno::UX::Selector ScrollViewBase::_keepFocusInViewName_;
::g::Uno::UX::Selector ScrollViewBase::ScrollPositionName_;
::g::Uno::UX::Selector ScrollViewBase::UserScrollName_;

// public ScrollViewBase() [instance] :1023
void ScrollViewBase::ctor_6()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", ".ctor()");
    _userScroll = true;
    _snapMinTransform = true;
    _snapMaxTransform = true;
    _keepFocusInView = true;
    _allowedScrollDirections = 12;
    _scrollTranslation = ::g::Fuse::Translation::New2();
    _previousRelative = ::g::Uno::Float2__New1(FLT_INF);
    ctor_5();
    ClipToBounds(true);
    HitTestMode(6);
}

// public Fuse.Controls.ScrollDirections get_AllowedScrollDirections() [instance] :1112
int ScrollViewBase::AllowedScrollDirections()
{
    return _allowedScrollDirections;
}

// public void set_AllowedScrollDirections(Fuse.Controls.ScrollDirections value) [instance] :1113
void ScrollViewBase::AllowedScrollDirections(int value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_AllowedScrollDirections(Fuse.Controls.ScrollDirections)");

    if (_allowedScrollDirections != value)
    {
        _allowedScrollDirections = value;
        OnScrollPropertyChanged(ScrollViewBase::_allowedScrollDirectionsName(), (uObject*)this);
        uObject* s = NativeScrollView();

        if (s != NULL)
            ::g::Fuse::Controls::Native::IScrollView::AllowedScrollDirections(uInterface(uPtr(s), ::TYPES[93/*Fuse.Controls.Native.IScrollView*/]), _allowedScrollDirections);
    }
}

// private void ArrangeContent(Fuse.LayoutParams lp) [instance] :650
void ScrollViewBase::ArrangeContent(::g::Fuse::LayoutParams lp)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "ArrangeContent(Fuse.LayoutParams)");
    ::g::Uno::Float4 ind1;
    ::g::Uno::Float4 ind2;
    ::g::Uno::Float4 ind3;
    ::g::Uno::Float4 ind4;
    ::g::Uno::Float4 ind5;
    ::g::Fuse::LayoutParams nlp = lp.CloneAndDerive();
    nlp.RemoveSize(::g::Uno::Float2__op_Addition2((ind1 = Padding(), ::g::Uno::Float2__New2(ind1.X, ind1.Y)), (ind2 = Padding(), ::g::Uno::Float2__New2(ind2.Z, ind2.W))));
    nlp.SetRelativeSize(lp.GetAvailableSize(), true, true);
    int align = 0;
    bool setWidth = false;
    bool setHeight = false;

    if (AllowedScrollDirections() == 15)
    {
        align = 5;
        setWidth = true;
        setHeight = true;
    }
    else if (AllowedScrollDirections() == 3)
    {
        align = 1;
        setWidth = true;
    }
    else if (AllowedScrollDirections() == 12)
    {
        align = 4;
        setHeight = true;
    }
    else
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition1(::STRINGS[110/*"AllowedScro...*/], uBox<int>(::g::Fuse::Controls::ScrollDirections_typeof(), AllowedScrollDirections())), this, ::STRINGS[111/*"/Users/medb...*/], 678, ::STRINGS[112/*"ArrangeCont...*/], NULL);

    int hAlign = 0;

    if (setWidth)
    {
        hAlign = ::g::Fuse::Elements::AlignmentHelpers::GetHorizontalAlign(uPtr(Content())->Alignment());

        if (hAlign == 0)
            hAlign = ::g::Fuse::Elements::AlignmentHelpers::GetHorizontalAlign(align);
    }

    int vAlign = 0;

    if (setHeight)
    {
        vAlign = ::g::Fuse::Elements::AlignmentHelpers::GetVerticalAlign(uPtr(Content())->Alignment());

        if (vAlign == 0)
            vAlign = ::g::Fuse::Elements::AlignmentHelpers::GetVerticalAlign(align);
    }

    align = hAlign | vAlign;
    nlp.RetainMaxXY(!setWidth, !setHeight);
    nlp.RetainXY(!setWidth, !setHeight);
    ::g::Uno::Float2 sz = uPtr(Content())->ArrangeMarginBox((ind3 = Padding(), ::g::Uno::Float2__New2(ind3.X, ind3.Y)), nlp);
    ::g::Fuse::Layouts::Layout::AdjustAlignBox(Content(), sz, ::g::Uno::Float4__New7((ind4 = Padding(), ::g::Uno::Float2__New2(ind4.X, ind4.Y)), ::g::Uno::Float2__op_Subtraction2(lp.Size(), (ind5 = Padding(), ::g::Uno::Float2__New2(ind5.Z, ind5.W)))), align);
    _contentMarginSize = sz;
    _contentAlignment = align;
}

// internal float2 Constrain(float2 t) [instance] :1362
::g::Uno::Float2 ScrollViewBase::Constrain(::g::Uno::Float2 t)
{
    return IfSnap(ConstrainExtents(t));
}

// private float2 ConstrainDown(float2 t) [instance] :1372
::g::Uno::Float2 ScrollViewBase::ConstrainDown(::g::Uno::Float2 t)
{
    return IfSnapDown(ConstrainExtents(t));
}

// internal float2 ConstrainExtents(float2 t) [instance] :1353
::g::Uno::Float2 ScrollViewBase::ConstrainExtents(::g::Uno::Float2 t)
{
    if (AllowedScrollDirections() == 3)
        t.Y = 0.0f;
    else if (AllowedScrollDirections() == 12)
        t.X = 0.0f;

    return t;
}

// private float2 ConstrainUp(float2 t) [instance] :1367
::g::Uno::Float2 ScrollViewBase::ConstrainUp(::g::Uno::Float2 t)
{
    return IfSnapUp(ConstrainExtents(t));
}

// internal float2 DistanceToView(float2 min, float2 max) [instance] :730
::g::Uno::Float2 ScrollViewBase::DistanceToView(::g::Uno::Float2 min, ::g::Uno::Float2 max)
{
    return ::g::Uno::Float2__New2(DistanceToViewLinear(min.X, max.X, ScrollPosition().X, ActualSize().X), DistanceToViewLinear(min.Y, max.Y, ScrollPosition().Y, ActualSize().Y));
}

// private float DistanceToViewLinear(float min, float max, float sp, float size) [instance] :737
float ScrollViewBase::DistanceToViewLinear(float min, float max, float sp, float size)
{
    if (max < sp)
        return sp - max;

    if (min > (sp + size))
        return min - (sp + size);

    return 0.0f;
}

// private Fuse.Elements.Element get_Element() [instance] :959
::g::Fuse::Elements::Element* ScrollViewBase::Element()
{
    return uAs< ::g::Fuse::Elements::Element*>(Content(), ::TYPES[10/*Fuse.Elements.Element*/]);
}

// private Fuse.Elements.Element FindAnchorElement() [instance] :620
::g::Fuse::Elements::Element* ScrollViewBase::FindAnchorElement()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "FindAnchorElement()");
    ::g::Fuse::Node* ret12;
    ::g::Fuse::Elements::Element* cur = NULL;
    float curDist = 0.0f;
    ::g::Uno::Float2 relAnchor = ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(_contentAlignment);
    ::g::Uno::Float2 anchor = ::g::Uno::Float2__op_Multiply2(relAnchor, ActualSize());

    for (int i = 0; i < ::g::Uno::Collections::ICollection::Count(uInterface(uPtr(uPtr(Element())->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/])); ++i)
    {
        ::g::Fuse::Elements::Element* c = uAs< ::g::Fuse::Elements::Element*>((::g::Uno::Collections::IList::get_Item_ex(uInterface(uPtr(uPtr(Element())->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>(i), &ret12), ret12), ::TYPES[10/*Fuse.Elements.Element*/]);

        if (((c == NULL) || !uPtr(c)->HasMarginBox()) || (uPtr(c)->LayoutRole() != 0))
            continue;

        ::g::Uno::Float2 cAnchor = ::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Subtraction2(uPtr(Content())->ActualPosition(), ScrollPosition()), uPtr(c)->ActualPosition()), ::g::Uno::Float2__op_Multiply2(uPtr(c)->ActualSize(), relAnchor));
        float dist = ::g::Uno::Vector::Length(::g::Uno::Float2__op_Subtraction2(cAnchor, anchor));

        if ((dist < curDist) || (cur == NULL))
        {
            cur = c;
            curDist = dist;
        }
    }

    return cur;
}

// private float2 FromScalarPosition(float value) [instance] :1246
::g::Uno::Float2 ScrollViewBase::FromScalarPosition(float value)
{
    if (AllowedScrollDirections() == 3)
        return ::g::Uno::Float2__New2(value, 0.0f);
    else if (AllowedScrollDirections() == 12)
        return ::g::Uno::Float2__New2(0.0f, value);

    return ::g::Uno::Float2__New1(value);
}

// public float2 GetVisualScrollPosition(Fuse.Visual n) [instance] :1207
::g::Uno::Float2 ScrollViewBase::GetVisualScrollPosition(::g::Fuse::Visual* n)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GetVisualScrollPosition(Fuse.Visual)");

    if ((n == NULL) || (Element() == NULL))
        return ::g::Uno::Float2__New1(0.0f);

    ::g::Uno::Float4x4 trans = uPtr(n)->GetTransformTo(Element());
    ::g::Uno::Float4 local = ::g::Uno::Vector::Transform4(::g::Uno::Float3__New1(0.0f), trans);
    ::g::Fuse::Elements::Element* elm = uAs< ::g::Fuse::Elements::Element*>(n, ::TYPES[10/*Fuse.Elements.Element*/]);

    if (elm == NULL)
        return ::g::Uno::Float2__New2(local.X, local.Y);

    return ::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__New2(local.X, local.Y), ::g::Uno::Float2__op_Division1(uPtr(elm)->ActualSize(), 2.0f)), ::g::Uno::Float2__op_Division1(ActualSize(), 2.0f));
}

// public void Goto(float2 position) [instance] :1228
void ScrollViewBase::Goto(::g::Uno::Float2 position)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "Goto(float2)");

    if (_scroller == NULL)
        ScrollPosition(::g::Uno::Math::Min3(MaxScroll(), ::g::Uno::Math::Max3(MinScroll(), ScrollPosition())));
    else
        uPtr(_scroller)->Goto(position);
}

// public void GotoRelative(float2 position) [instance] :1241
void ScrollViewBase::GotoRelative(::g::Uno::Float2 position)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "GotoRelative(float2)");
    Goto(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll()), position), MinScroll()));
}

// public bool get_KeepFocusInView() [instance] :1084
bool ScrollViewBase::KeepFocusInView()
{
    return _keepFocusInView;
}

// public void set_KeepFocusInView(bool value) [instance] :1085
void ScrollViewBase::KeepFocusInView(bool value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_KeepFocusInView(bool)");

    if (_keepFocusInView != value)
    {
        _keepFocusInView = value;
        OnScrollPropertyChanged(ScrollViewBase::_keepFocusInViewName(), (uObject*)this);
    }
}

// public Fuse.Controls.ScrollViewLayoutMode get_LayoutMode() [instance] :543
int ScrollViewBase::LayoutMode()
{
    return _layoutMode;
}

// public void set_LayoutMode(Fuse.Controls.ScrollViewLayoutMode value) [instance] :544
void ScrollViewBase::LayoutMode(int value)
{
    _layoutMode = value;
}

// public float2 get_MaxOverflow() [instance] :1323
::g::Uno::Float2 ScrollViewBase::MaxOverflow()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MaxOverflow()");
    return ::g::Uno::Float2__op_Addition2(MaxScroll(), ConstrainUp((_scroller == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(_scroller)->OverflowExtent()));
}

// public float2 get_MaxScroll() [instance] :1308
::g::Uno::Float2 ScrollViewBase::MaxScroll()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MaxScroll()");
    ::g::Uno::Float4 ind8;
    ::g::Uno::Float4 ind9;

    if (Element() == NULL)
        return ::g::Uno::Float2__New1(0.0f);

    return ConstrainUp(::g::Uno::Math::Max3(::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Addition2(_contentMarginSize, uPtr(Element())->ActualPosition()), (ind8 = Padding(), ::g::Uno::Float2__New2(ind8.X, ind8.Y))), (ind9 = Padding(), ::g::Uno::Float2__New2(ind9.Z, ind9.W))), ActualSize()), ::g::Uno::Float2__New1(0.0f)));
}

// public float2 get_MinOverflow() [instance] :1347
::g::Uno::Float2 ScrollViewBase::MinOverflow()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MinOverflow()");
    return ::g::Uno::Float2__op_Subtraction2(MinScroll(), ConstrainDown((_scroller == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(_scroller)->OverflowExtent()));
}

// public float2 get_MinScroll() [instance] :1334
::g::Uno::Float2 ScrollViewBase::MinScroll()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_MinScroll()");
    ::g::Uno::Float4 ind10;

    if (Element() == NULL)
        return ::g::Uno::Float2__New1(0.0f);

    return ConstrainDown(::g::Uno::Math::Min3(::g::Uno::Float2__New1(0.0f), ::g::Uno::Float2__op_Subtraction2(uPtr(Element())->ActualPosition(), (ind10 = Padding(), ::g::Uno::Float2__New2(ind10.X, ind10.Y)))));
}

// public Fuse.Motion.MotionConfig get_Motion() [instance] :1047
::g::Fuse::Motion::MotionConfig* ScrollViewBase::Motion()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_Motion()");

    if (_motion == NULL)
        _motion = ::g::Fuse::Motion::ScrollViewMotion::New2();

    return _motion;
}

// public void set_Motion(Fuse.Motion.MotionConfig value) [instance] :1053
void ScrollViewBase::Motion(::g::Fuse::Motion::MotionConfig* value)
{
    _motion = value;

    if (IsRootingCompleted())
        ::g::Fuse::Diagnostics::UserError(::STRINGS[117/*"Motion shou...*/], this, ::STRINGS[111/*"/Users/medb...*/], 1057, ::STRINGS[118/*"set_Motion"*/], NULL);
}

// private Fuse.Controls.Native.IScrollView get_NativeScrollView() [instance] :763
uObject* ScrollViewBase::NativeScrollView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[93/*Fuse.Controls.Native.IScrollView*/]);
}

// private void OnScrollPositionChanged(float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) [instance] :1293
void ScrollViewBase::OnScrollPositionChanged(::g::Uno::Float2 arrangeOffset, bool adjustment, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnScrollPositionChanged(float2,bool,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(ScrollViewBase::ScrollPositionName(), origin);
    uDelegate* handler = ScrollPositionChanged1;

    if (::g::Uno::Delegate::op_Inequality(handler, NULL))
        uPtr(handler)->Invoke(2, this, (::g::Fuse::Controls::ScrollPositionChangedArgs*)::g::Fuse::Controls::ScrollPositionChangedArgs::New3(ScrollPosition(), arrangeOffset, adjustment, origin, RelativeScrollPosition()));
}

// private void OnScrollPropertyChanged(Uno.UX.Selector name, Uno.UX.IPropertyListener origin) [instance] :1128
void ScrollViewBase::OnScrollPropertyChanged(::g::Uno::UX::Selector name, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "OnScrollPropertyChanged(Uno.UX.Selector,Uno.UX.IPropertyListener)");
    InvalidateLayout(2);
    OnPropertyChanged1(name, origin);
}

// public float2 get_RelativeScrollPosition() [instance] :1269
::g::Uno::Float2 ScrollViewBase::RelativeScrollPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "get_RelativeScrollPosition()");
    ::g::Uno::Float2 r = ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll());
    ::g::Uno::Float2 q = ::g::Uno::Float2__op_Division2(::g::Uno::Float2__op_Subtraction2(ScrollPosition(), MinScroll()), ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll()));

    if (r.X < 1e-05f)
        q.X = ((Element() == NULL) ? 0.5f : ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(uPtr(Element())->Alignment()).X);

    if (r.Y < 1e-05f)
        q.Y = ((Element() == NULL) ? 0.5f : ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(uPtr(Element())->Alignment()).Y);

    return q;
}

// public void set_RelativeScrollPosition(float2 value) [instance] :1281
void ScrollViewBase::RelativeScrollPosition(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_RelativeScrollPosition(float2)");
    ScrollPosition(::g::Uno::Float2__op_Addition2(::g::Uno::Float2__op_Multiply2(value, ::g::Uno::Float2__op_Subtraction2(MaxScroll(), MinScroll())), MinScroll()));
}

// public Fuse.Gestures.Scroller get_Scroller() [instance] :1032
::g::Fuse::Gestures::Scroller* ScrollViewBase::Scroller()
{
    return _scroller;
}

// public float2 get_ScrollPosition() [instance] :1143
::g::Uno::Float2 ScrollViewBase::ScrollPosition()
{
    return _scrollPosition;
}

// public void set_ScrollPosition(float2 value) [instance] :1144
void ScrollViewBase::ScrollPosition(::g::Uno::Float2 value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_ScrollPosition(float2)");
    SetScrollPosition1(value, (uObject*)this);
}

// public generated void add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) [instance] :1290
void ScrollViewBase::add_ScrollPositionChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "add_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler)");
    ScrollPositionChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ScrollPositionChanged1, value), ::TYPES[94/*Fuse.Controls.ScrollPositionChangedHandler*/]);
}

// public generated void remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler value) [instance] :1290
void ScrollViewBase::remove_ScrollPositionChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "remove_ScrollPositionChanged(Fuse.Controls.ScrollPositionChangedHandler)");
    ScrollPositionChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ScrollPositionChanged1, value), ::TYPES[94/*Fuse.Controls.ScrollPositionChangedHandler*/]);
}

// private void SetScrollPosition(float2 position, float2 arrangeOffset, Uno.UX.IPropertyListener origin) [instance] :1155
void ScrollViewBase::SetScrollPosition(::g::Uno::Float2 position, ::g::Uno::Float2 arrangeOffset, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPosition(float2,float2,Uno.UX.IPropertyListener)");
    SetScrollPositionImpl(position, arrangeOffset, true, origin);
}

// public void SetScrollPosition(float2 position, Uno.UX.IPropertyListener origin) [instance] :1150
void ScrollViewBase::SetScrollPosition1(::g::Uno::Float2 position, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPosition(float2,Uno.UX.IPropertyListener)");
    SetScrollPositionImpl(position, ::g::Uno::Float2__New1(0.0f), false, origin);
}

// private void SetScrollPositionImpl(float2 position, float2 arrangeOffset, bool adjustment, Uno.UX.IPropertyListener origin) [instance] :1160
void ScrollViewBase::SetScrollPositionImpl(::g::Uno::Float2 position, ::g::Uno::Float2 arrangeOffset, bool adjustment, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "SetScrollPositionImpl(float2,float2,bool,Uno.UX.IPropertyListener)");
    bool changed = false;
    position = Constrain(position);

    if (::g::Uno::Vector::LengthSquared(::g::Uno::Float2__op_Subtraction2(position, _scrollPosition)) > 1e-05f)
    {
        _scrollPosition = position;
        changed = true;
    }

    if (!SnapMinTransform())
        position = ::g::Uno::Math::Max3(MinScroll(), position);

    if (!SnapMaxTransform())
        position = ::g::Uno::Math::Min3(MaxScroll(), position);

    ::g::Uno::Float3 nv = ::g::Uno::Float3__New4(::g::Uno::Float2__op_UnaryNegation(position), 0.0f);

    if (::g::Uno::Vector::LengthSquared1(::g::Uno::Float3__op_Subtraction2(nv, uPtr(_scrollTranslation)->Vector())) > 1e-05f)
    {
        uPtr(_scrollTranslation)->Vector(nv);
        changed = true;
    }

    ::g::Uno::Float2 nRel = RelativeScrollPosition();

    if (::g::Uno::Vector::LengthSquared(::g::Uno::Float2__op_Subtraction2(nRel, _previousRelative)) > 1e-05f)
    {
        _previousRelative = nRel;
        changed = true;
    }

    if (origin != NULL)
    {
        uObject* sv = NativeScrollView();

        if (sv != NULL)
            ::g::Fuse::Controls::Native::IScrollView::ScrollPosition(uInterface(uPtr(sv), ::TYPES[93/*Fuse.Controls.Native.IScrollView*/]), position);
    }

    if (changed)
        OnScrollPositionChanged(arrangeOffset, adjustment, origin);
}

// public bool get_SnapMaxTransform() [instance] :995
bool ScrollViewBase::SnapMaxTransform()
{
    return _snapMaxTransform;
}

// public void set_SnapMaxTransform(bool value) [instance] :996
void ScrollViewBase::SnapMaxTransform(bool value)
{
    _snapMaxTransform = value;
}

// public bool get_SnapMinTransform() [instance] :985
bool ScrollViewBase::SnapMinTransform()
{
    return _snapMinTransform;
}

// public void set_SnapMinTransform(bool value) [instance] :986
void ScrollViewBase::SnapMinTransform(bool value)
{
    _snapMinTransform = value;
}

// internal float ToScalarPosition(float2 value) [instance] :1255
float ScrollViewBase::ToScalarPosition(::g::Uno::Float2 value)
{
    if (AllowedScrollDirections() == 3)
        return value.X;
    else if (AllowedScrollDirections() == 12)
        return value.Y;

    return (value.X + value.Y) / 2.0f;
}

// private void UpdateScrollPosition() [instance] :578
void ScrollViewBase::UpdateScrollPosition()
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "UpdateScrollPosition()");

    if (_placeAnchor != NULL)
    {
        ::g::Uno::Float2 relAnchor = ::g::Fuse::Elements::AlignmentHelpers::GetAnchor(_contentAlignment);
        ::g::Uno::Float2 oldAnchor = ::g::Uno::Float2__op_Multiply2(relAnchor, _oldActualSize);
        ::g::Uno::Float2 oldOffset = ::g::Uno::Float2__op_Subtraction2(_placePosition, oldAnchor);
        ::g::Uno::Float2 newAnchor = ::g::Uno::Float2__op_Multiply2(relAnchor, ActualSize());
        ::g::Uno::Float2 newOffset = ::g::Uno::Float2__op_Subtraction2(::g::Uno::Float2__op_Addition2(uPtr(Content())->ActualPosition(), uPtr(_placeAnchor)->ActualPosition()), newAnchor);
        ::g::Uno::Float2 diff = ::g::Uno::Float2__op_Subtraction2(newOffset, oldOffset);
        ::g::Uno::Float2 nsp = ::g::Uno::Math::Min3(MaxScroll(), ::g::Uno::Math::Max3(MinScroll(), ::g::Uno::Float2__op_Addition2(ScrollPosition(), diff)));
        ::g::Uno::Float2 ndiff = ::g::Uno::Float2__op_Subtraction2(nsp, ScrollPosition());
        SetScrollPosition(nsp, ndiff, (uObject*)this);
    }

    if ((_scroller != NULL) && IsRootingCompleted())
        uPtr(_scroller)->CheckLimits();
    else
    {
        ScrollPosition(::g::Uno::Math::Min3(MaxScroll(), ::g::Uno::Math::Max3(MinScroll(), ScrollPosition())));
        OnScrollPositionChanged(::g::Uno::Float2__New1(0.0f), false, (uObject*)this);
    }
}

// public bool get_UserScroll() [instance] :968
bool ScrollViewBase::UserScroll()
{
    return _userScroll;
}

// public void set_UserScroll(bool value) [instance] :969
void ScrollViewBase::UserScroll(bool value)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "set_UserScroll(bool)");

    if (_userScroll == value)
        return;

    _userScroll = value;
    OnScrollPropertyChanged(ScrollViewBase::UserScrollName(), (uObject*)this);
}

// private static bool getParams(Fuse.Controls.ScrollViewBase s, object[] args, string func, float2& pos) [static] :804
bool ScrollViewBase::getParams(ScrollViewBase* s, uArray* args, uString* func, ::g::Uno::Float2* pos)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "getParams(Fuse.Controls.ScrollViewBase,object[],string,float2&)");
    ScrollViewBase_typeof()->Init();

    if ((uPtr(args)->Length() == 0) || (uPtr(args)->Length() > 2))
    {
        ::g::Fuse::Diagnostics::UserError(::g::Uno::String::op_Addition2(::g::Uno::String::op_Addition2(::STRINGS[113/*"ScrollViewB...*/], func), ::STRINGS[44/*" requires 1...*/]), s, ::STRINGS[111/*"/Users/medb...*/], 808, ::STRINGS[114/*"getParams"*/], NULL);
        *pos = ::g::Uno::Float2__New1(0.0f);
        return false;
    }

    *pos = (uPtr(args)->Length() == 1) ? uPtr(s)->FromScalarPosition(::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(0))) : ::g::Uno::Float2__New2(::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(0)), ::g::Fuse::Marshal::ToFloat(uPtr(args)->Strong<uObject*>(1)));
    return true;
}

// private static void goto_(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) [static] :825
void ScrollViewBase::goto_(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "goto_(Fuse.Scripting.Context,Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, ::STRINGS[75/*"goto"*/], &pos))
        return;

    uPtr(s)->Goto(pos);
}

// private static void gotoRelative(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) [static] :839
void ScrollViewBase::gotoRelative(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "gotoRelative(Fuse.Scripting.Context,Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, ::STRINGS[115/*"gotoToRelat...*/], &pos))
        return;

    uPtr(s)->GotoRelative(pos);
}

// public ScrollViewBase New() [static] :1023
ScrollViewBase* ScrollViewBase::New3()
{
    ScrollViewBase* obj11 = (ScrollViewBase*)uNew(ScrollViewBase_typeof());
    obj11->ctor_6();
    return obj11;
}

// private static void seekTo(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) [static] :853
void ScrollViewBase::seekTo(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "seekTo(Fuse.Scripting.Context,Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, ::STRINGS[108/*"seekTo"*/], &pos))
        return;

    uPtr(s)->ScrollPosition(pos);
}

// private static void seekToRelative(Fuse.Scripting.Context c, Fuse.Controls.ScrollViewBase s, object[] args) [static] :867
void ScrollViewBase::seekToRelative(::g::Fuse::Scripting::Context* c, ScrollViewBase* s, uArray* args)
{
    uStackFrame __("Fuse.Controls.ScrollViewBase", "seekToRelative(Fuse.Scripting.Context,Fuse.Controls.ScrollViewBase,object[])");
    ScrollViewBase_typeof()->Init();
    ::g::Uno::Float2 pos;

    if (!ScrollViewBase::getParams(s, args, ::STRINGS[109/*"seekToRelat...*/], &pos))
        return;

    uPtr(s)->RelativeScrollPosition(pos);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/$.uno
// ---------------------------------------------------------------------------------------------------

// public enum ScrollViewLayoutMode :523
uEnumType* ScrollViewLayoutMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.ScrollViewLayoutMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "PreserveScrollPosition", 0LL,
        "PreserveVisual", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/behaviors/$.uno
// -------------------------------------------------------------------------------------------------------------

// public sealed class Shadow :29
// {
static void Shadow_build(uType* type)
{
    ::STRINGS[119] = uString::Const("Invalid rectangle-state");
    ::STRINGS[120] = uString::Const("Invalid dropshadow-state");
    ::STRINGS[121] = uString::Const("Invalid parent for Effect: ");
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[21] = ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[95] = ::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(6/*IndexOf<Fuse.Node>*/, ::g::Fuse::Node_typeof(), NULL);
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Node_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Node_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Node_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Node_type, interface5));
    type->SetFields(13,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Shadow, _angle), 0,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Shadow, _color), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Shadow, _distance), 0,
        ::g::Fuse::Effects::DropShadow_typeof(), offsetof(::g::Fuse::Controls::Shadow, _dropShadow), 0,
        ::TYPES[10/*Fuse.Elements.Element*/], offsetof(::g::Fuse::Controls::Shadow, _elementParent), 0,
        Shadow__ShadowMode_typeof(), offsetof(::g::Fuse::Controls::Shadow, _mode), 0,
        ::g::Fuse::Controls::Primitives::ShadowElement_typeof(), offsetof(::g::Fuse::Controls::Shadow, _rectangle), 0,
        ::g::Fuse::Translation_typeof(), offsetof(::g::Fuse::Controls::Shadow, _rectangleTranslation), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Shadow, _size), 0);
    type->Reflection.SetFunctions(11,
        new uFunction("get_Angle", NULL, (void*)Shadow__get_Angle_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Angle", NULL, (void*)Shadow__set_Angle_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Color", NULL, (void*)Shadow__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Shadow__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Distance", NULL, (void*)Shadow__get_Distance_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Distance", NULL, (void*)Shadow__set_Distance_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Mode", NULL, (void*)Shadow__get_Mode_fn, 0, false, Shadow__ShadowMode_typeof(), 0),
        new uFunction("set_Mode", NULL, (void*)Shadow__set_Mode_fn, 0, false, uVoid_typeof(), 1, Shadow__ShadowMode_typeof()),
        new uFunction(".ctor", NULL, (void*)Shadow__New2_fn, 0, true, type, 0),
        new uFunction("get_Size", NULL, (void*)Shadow__get_Size_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Size", NULL, (void*)Shadow__set_Size_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Node_type* Shadow_typeof()
{
    static uSStrong< ::g::Fuse::Node_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Behavior_typeof();
    options.FieldCount = 22;
    options.InterfaceCount = 6;
    options.ObjectSize = sizeof(Shadow);
    options.TypeSize = sizeof(::g::Fuse::Node_type);
    type = (::g::Fuse::Node_type*)uClassType::New("Fuse.Controls.Shadow", options);
    type->fp_build_ = Shadow_build;
    type->fp_ctor_ = (void*)Shadow__New2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Shadow__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Shadow__OnUnrooted_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Shadow() :72
void Shadow__ctor_3_fn(Shadow* __this)
{
    __this->ctor_3();
}

// private void AddDecoration() :158
void Shadow__AddDecoration_fn(Shadow* __this)
{
    __this->AddDecoration();
}

// public float get_Angle() :85
void Shadow__get_Angle_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Angle();
}

// public void set_Angle(float value) :86
void Shadow__set_Angle_fn(Shadow* __this, float* value)
{
    __this->Angle(*value);
}

// public float4 get_Color() :145
void Shadow__get_Color_fn(Shadow* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :146
void Shadow__set_Color_fn(Shadow* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// public float get_Distance() :102
void Shadow__get_Distance_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Distance();
}

// public void set_Distance(float value) :103
void Shadow__set_Distance_fn(Shadow* __this, float* value)
{
    __this->Distance(*value);
}

// public Fuse.Controls.Shadow.ShadowMode get_Mode() :52
void Shadow__get_Mode_fn(Shadow* __this, int* __retval)
{
    *__retval = __this->Mode();
}

// public void set_Mode(Fuse.Controls.Shadow.ShadowMode value) :57
void Shadow__set_Mode_fn(Shadow* __this, int* value)
{
    __this->Mode(*value);
}

// public Shadow New() :72
void Shadow__New2_fn(Shadow** __retval)
{
    *__retval = Shadow::New2();
}

// private float2 get_Offset() :117
void Shadow__get_Offset_fn(Shadow* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Offset();
}

// protected override sealed void OnRooted() :222
void Shadow__OnRooted_fn(Shadow* __this)
{
    uStackFrame __("Fuse.Controls.Shadow", "OnRooted()");
    ::g::Fuse::Node__OnRooted_fn(__this);
    __this->_elementParent = uAs< ::g::Fuse::Elements::Element*>(__this->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]);

    if (__this->_elementParent == NULL)
        U_THROW(::g::Uno::Exception::New2(::g::Uno::String::op_Addition1(::STRINGS[121/*"Invalid par...*/], __this->Parent())));

    __this->AddDecoration();
}

// protected override sealed void OnUnrooted() :233
void Shadow__OnUnrooted_fn(Shadow* __this)
{
    uStackFrame __("Fuse.Controls.Shadow", "OnUnrooted()");
    __this->RemoveDecoration();
    __this->_elementParent = NULL;
    ::g::Fuse::Node__OnUnrooted_fn(__this);
}

// private void RemoveDecoration() :199
void Shadow__RemoveDecoration_fn(Shadow* __this)
{
    __this->RemoveDecoration();
}

// public float get_Size() :128
void Shadow__get_Size_fn(Shadow* __this, float* __retval)
{
    *__retval = __this->Size();
}

// public void set_Size(float value) :129
void Shadow__set_Size_fn(Shadow* __this, float* value)
{
    __this->Size(*value);
}

// public Shadow() [instance] :72
void Shadow::ctor_3()
{
    uStackFrame __("Fuse.Controls.Shadow", ".ctor()");
    ctor_2();
    Size(5.0f);
    Color(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 0.35f));
    Angle(90.0f);
    Distance(3.0f);
}

// private void AddDecoration() [instance] :158
void Shadow::AddDecoration()
{
    uStackFrame __("Fuse.Controls.Shadow", "AddDecoration()");
    ::g::Fuse::Controls::Primitives::ShadowElement* collection1;
    ::g::Uno::UX::Size ind3;
    ::g::Uno::UX::Size ind4;
    ::g::Uno::Float4 ind5;
    float ind6;
    ::g::Fuse::Effects::DropShadow* collection2;
    ::g::Uno::Float4 ind7;
    float ind8;
    float ind9;
    float ind10;
    int ret12;
    int ret13;

    switch (_mode)
    {
        case 0:
        {
            if (_rectangle != NULL)
                U_THROW(::g::Uno::Exception::New2(::STRINGS[119/*"Invalid rec...*/]));

            _rectangle = (collection1 = ::g::Fuse::Controls::Primitives::ShadowElement::New2(), uPtr(collection1)->Layer(0), 0, ind3 = ::g::Uno::UX::Size__New1(100.0f, 4), uPtr(collection1)->Width(ind3), ind3, ind4 = ::g::Uno::UX::Size__New1(100.0f, 4), uPtr(collection1)->Height(ind4), ind4, ind5 = _color, uPtr(collection1)->Color(ind5), ind5, ind6 = _size, uPtr(collection1)->Size(ind6), ind6, collection1);
            _rectangleTranslation = ::g::Fuse::Translation::New2();
            uPtr(_rectangleTranslation)->XY(Offset());
            ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(_rectangle)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _rectangleTranslation);
            ::g::Uno::Collections::IList::Insert_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>((::g::Uno::Collections::EnumerableExtensions__IndexOf_fn(::TYPES[95/*Uno.Collections.EnumerableExtensions.IndexOf<Fuse.Node>*/], uPtr(_elementParent)->Children(), this, &ret12), ret12) + 1), _rectangle);
            break;
        }
        case 1:
        {
            if (_dropShadow != NULL)
                U_THROW(::g::Uno::Exception::New2(::STRINGS[120/*"Invalid dro...*/]));

            _dropShadow = (collection2 = ::g::Fuse::Effects::DropShadow::New2(), ind7 = _color, uPtr(collection2)->Color(ind7), ind7, ind8 = _size, uPtr(collection2)->Size(ind8), ind8, ind9 = _angle, uPtr(collection2)->Angle(ind9), ind9, ind10 = _distance, uPtr(collection2)->Distance(ind10), ind10, collection2);
            ::g::Uno::Collections::IList::Insert_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[21/*Uno.Collections.IList<Fuse.Node>*/]), uCRef<int>((::g::Uno::Collections::EnumerableExtensions__IndexOf_fn(::TYPES[95/*Uno.Collections.EnumerableExtensions.IndexOf<Fuse.Node>*/], uPtr(_elementParent)->Children(), this, &ret13), ret13) + 1), _dropShadow);
            break;
        }
    }
}

// public float get_Angle() [instance] :85
float Shadow::Angle()
{
    return _angle;
}

// public void set_Angle(float value) [instance] :86
void Shadow::Angle(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Angle(float)");
    _angle = value;

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Angle(value);

    if (_rectangleTranslation != NULL)
        uPtr(_rectangleTranslation)->XY(Offset());
}

// public float4 get_Color() [instance] :145
::g::Uno::Float4 Shadow::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :146
void Shadow::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Color(float4)");
    _color = value;

    if (_rectangle != NULL)
        uPtr(_rectangle)->Color(_color);

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Color(_color);
}

// public float get_Distance() [instance] :102
float Shadow::Distance()
{
    return _distance;
}

// public void set_Distance(float value) [instance] :103
void Shadow::Distance(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Distance(float)");
    _distance = value;

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Distance(value);

    if (_rectangleTranslation != NULL)
        uPtr(_rectangleTranslation)->XY(Offset());
}

// public Fuse.Controls.Shadow.ShadowMode get_Mode() [instance] :52
int Shadow::Mode()
{
    return _mode;
}

// public void set_Mode(Fuse.Controls.Shadow.ShadowMode value) [instance] :57
void Shadow::Mode(int value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Mode(Fuse.Controls.Shadow.ShadowMode)");

    if (_mode != value)
    {
        if (IsRootingCompleted())
            RemoveDecoration();

        _mode = value;

        if (IsRootingCompleted())
            AddDecoration();
    }
}

// private float2 get_Offset() [instance] :117
::g::Uno::Float2 Shadow::Offset()
{
    float th = Angle() * 0.0174532924f;
    return ::g::Uno::Float2__op_Multiply1(::g::Uno::Float2__New2(-::g::Uno::Math::Cos1(th), ::g::Uno::Math::Sin1(th)), Distance());
}

// private void RemoveDecoration() [instance] :199
void Shadow::RemoveDecoration()
{
    uStackFrame __("Fuse.Controls.Shadow", "RemoveDecoration()");
    bool ret14;
    bool ret15;

    switch (_mode)
    {
        case 0:
        {
            if (_rectangle == NULL)
                U_THROW(::g::Uno::Exception::New2(::STRINGS[119/*"Invalid rec...*/]));

            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _rectangle, &ret14);
            _rectangle = NULL;
            _rectangleTranslation = NULL;
            break;
        }
        case 1:
        {
            if (_dropShadow == NULL)
                U_THROW(::g::Uno::Exception::New2(::STRINGS[119/*"Invalid rec...*/]));

            ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(uPtr(_elementParent)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _dropShadow, &ret15);
            _dropShadow = NULL;
            break;
        }
    }
}

// public float get_Size() [instance] :128
float Shadow::Size()
{
    return _size;
}

// public void set_Size(float value) [instance] :129
void Shadow::Size(float value)
{
    uStackFrame __("Fuse.Controls.Shadow", "set_Size(float)");
    _size = value;

    if (_rectangle != NULL)
        uPtr(_rectangle)->Size(_size);

    if (_dropShadow != NULL)
        uPtr(_dropShadow)->Size(_size);
}

// public Shadow New() [static] :72
Shadow* Shadow::New2()
{
    Shadow* obj11 = (Shadow*)uNew(Shadow_typeof());
    obj11->ctor_3();
    return obj11;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/behaviors/$.uno
// -------------------------------------------------------------------------------------------------------------

// public enum Shadow.ShadowMode :32
uEnumType* Shadow__ShadowMode_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.Shadow.ShadowMode", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Background", 0LL,
        "PerPixel", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public interfacemodifiers class Shape :996
// {
// static Shape() :996
static void Shape__cctor_3_fn(uType* __type)
{
    Shape::_loadingResourcesHandle_ = ::g::Fuse::Properties::CreateHandle();
    Shape::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
    Shape::_widthName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[122/*"Width"*/]);
    Shape::_offsetName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[123/*"Offset"*/]);
}

static void Shape_build(uType* type)
{
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[122] = uString::Const("Width");
    ::STRINGS[123] = uString::Const("Offset");
    ::STRINGS[23] = uString::Const("");
    ::TYPES[96] = ::g::Fuse::ILoading_typeof();
    ::TYPES[97] = ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[98] = ::g::Uno::Collections::IEnumerator_typeof();
    ::TYPES[99] = ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[100] = ::g::Uno::Collections::Dictionary__Enumerator_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__Watcher_typeof(), NULL);
    ::TYPES[101] = ::g::Uno::Collections::KeyValuePair_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__Watcher_typeof(), NULL);
    ::TYPES[102] = ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[103] = ::g::Uno::Collections::IEnumerator1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[26] = ::g::Fuse::Drawing::SolidColor_typeof();
    ::TYPES[78] = ::g::Uno::UX::IPropertyListener_typeof();
    ::TYPES[12] = ::g::Fuse::Drawing::DynamicBrush_typeof();
    ::TYPES[104] = ::g::Fuse::Drawing::Brush_typeof();
    ::TYPES[105] = ::g::Fuse::Drawing::Stroke_typeof();
    ::TYPES[106] = ::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(11/*ToArray<Fuse.Drawing.Brush>*/, ::TYPES[104/*Fuse.Drawing.Brush*/], NULL);
    ::TYPES[107] = ::TYPES[104/*Fuse.Drawing.Brush*/]->Array();
    ::TYPES[108] = ::g::Uno::Collections::EnumerableExtensions_typeof()->MakeMethod(11/*ToArray<Fuse.Drawing.Stroke>*/, ::TYPES[105/*Fuse.Drawing.Stroke*/], NULL);
    ::TYPES[109] = ::TYPES[105/*Fuse.Drawing.Stroke*/]->Array();
    ::TYPES[110] = ::g::Fuse::Controls::Native::IShapeView_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    ::TYPES[111] = ::g::Fuse::Drawing::ISolidColor_typeof();
    ::TYPES[112] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::TYPES[104/*Fuse.Drawing.Brush*/], NULL);
    ::TYPES[113] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::TYPES[105/*Fuse.Drawing.Stroke*/], NULL);
    ::TYPES[114] = ::g::Uno::Collections::ObservableList_typeof()->MakeType(::TYPES[104/*Fuse.Drawing.Brush*/], NULL);
    ::TYPES[115] = ::g::Uno::Action1_typeof()->MakeType(::TYPES[104/*Fuse.Drawing.Brush*/], NULL);
    ::TYPES[116] = ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Uno::UX::PropertyObject_typeof(), Shape__Watcher_typeof(), NULL);
    ::TYPES[117] = ::g::Uno::Collections::ObservableList_typeof()->MakeType(::TYPES[105/*Fuse.Drawing.Stroke*/], NULL);
    ::TYPES[118] = ::g::Uno::Action1_typeof()->MakeType(::TYPES[105/*Fuse.Drawing.Stroke*/], NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Shape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Shape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Shape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Shape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface6),
        ::TYPES[78/*Uno.UX.IPropertyListener*/], offsetof(Shape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Shape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Shape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Shape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Shape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Shape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Shape_type, interface14));
    type->SetFields(96,
        ::TYPES[114/*Uno.Collections.ObservableList<Fuse.Drawing.Brush>*/], offsetof(::g::Fuse::Controls::Shape, _fills), 0,
        ::g::Fuse::Triggers::BusyTask_typeof(), offsetof(::g::Fuse::Controls::Shape, _loadingResourceTask), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Shape, _smoothness), 0,
        ::TYPES[117/*Uno.Collections.ObservableList<Fuse.Drawing.Stroke>*/], offsetof(::g::Fuse::Controls::Shape, _strokes), 0,
        ::g::Fuse::PropertyHandle_typeof(), (uintptr_t)&::g::Fuse::Controls::Shape::_loadingResourcesHandle_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Shape::_offsetName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Shape::_widthName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Shape::ColorPropertyName_, uFieldFlagsStatic);
    type->Reflection.SetFields(1,
        new uField("ColorPropertyName", 103));
    type->Reflection.SetFunctions(13,
        new uFunction("get_Color", NULL, (void*)Shape__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)Shape__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Fill", NULL, (void*)Shape__get_Fill_fn, 0, false, ::TYPES[104/*Fuse.Drawing.Brush*/], 0),
        new uFunction("set_Fill", NULL, (void*)Shape__set_Fill_fn, 0, false, uVoid_typeof(), 1, ::TYPES[104/*Fuse.Drawing.Brush*/]),
        new uFunction("get_Fills", NULL, (void*)Shape__get_Fills_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::TYPES[104/*Fuse.Drawing.Brush*/], NULL), 0),
        new uFunction("get_HasFills", NULL, (void*)Shape__get_HasFills_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_HasStrokes", NULL, (void*)Shape__get_HasStrokes_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("SetColor", NULL, (void*)Shape__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::TYPES[78/*Uno.UX.IPropertyListener*/]),
        new uFunction("get_Smoothness", NULL, (void*)Shape__get_Smoothness_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Smoothness", NULL, (void*)Shape__set_Smoothness_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Stroke", NULL, (void*)Shape__get_Stroke_fn, 0, false, ::TYPES[105/*Fuse.Drawing.Stroke*/], 0),
        new uFunction("set_Stroke", NULL, (void*)Shape__set_Stroke_fn, 0, false, uVoid_typeof(), 1, ::TYPES[105/*Fuse.Drawing.Stroke*/]),
        new uFunction("get_Strokes", NULL, (void*)Shape__get_Strokes_fn, 0, false, ::g::Uno::Collections::IList_typeof()->MakeType(::TYPES[105/*Fuse.Drawing.Stroke*/], NULL), 0));
}

Shape_type* Shape_typeof()
{
    static uSStrong<Shape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Shape);
    options.TypeSize = sizeof(Shape_type);
    type = (Shape_type*)uClassType::New("Fuse.Controls.Shape", options);
    type->fp_build_ = Shape_build;
    type->fp_cctor_ = Shape__cctor_3_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Shape__CalcRenderBounds_fn;
    type->fp_DrawFill = Shape__DrawFill_fn;
    type->fp_DrawStroke = Shape__DrawStroke_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))Shape__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))Shape__FastTrackDrawWithOpacity_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))Shape__get_HitTestLocalVisualBounds_fn;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Shape__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Shape__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Shape__OnUnrooted_fn;
    type->fp_PrepareDraw = Shape__PrepareDraw_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))Shape__PushPropertiesToNativeView_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected generated Shape() :996
void Shape__ctor_6_fn(Shape* __this)
{
    __this->ctor_6();
}

// internal void AddLoadingResource(Uno.UX.PropertyObject res) :1031
void Shape__AddLoadingResource_fn(Shape* __this, ::g::Uno::UX::PropertyObject* res)
{
    __this->AddLoadingResource(res);
}

// protected override Fuse.VisualBounds CalcRenderBounds() :1555
void Shape__CalcRenderBounds_fn(Shape* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Shape", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret8;
    ::g::Fuse::Drawing::Stroke* ret9;
    ::g::Fuse::VisualBounds* r = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret8), ret8);

    if (__this->HasStrokes() || __this->HasFills())
        r = uPtr(r)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());

    if (__this->HasStrokes())

        for (uObject* enum6 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::TYPES[97/*Uno.Collections.IEnumerable<Fuse.Drawing.Stroke>*/])); ::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum6), ::TYPES[98/*Uno.Collections.IEnumerator*/])); )
        {
            ::g::Fuse::Drawing::Stroke* stroke = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum6), ::TYPES[99/*Uno.Collections.IEnumerator<Fuse.Drawing.Stroke>*/]), &ret9), ret9);
            float b = uPtr(stroke)->Offset() + uPtr(stroke)->Width();

            if (b > 0.0f)
                r = uPtr(r)->InflateXY(b);
        }

    if (__this->HasStrokes() || __this->HasFills())
        r = uPtr(r)->InflateXY(__this->Smoothness() - 1.0f);

    return *__retval = r, void();
}

// protected float2 get_Center() :1462
void Shape__get_Center_fn(Shape* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->Center();
}

// private void CheckStatus() :1112
void Shape__CheckStatus_fn(Shape* __this)
{
    __this->CheckStatus();
}

// public float4 get_Color() :1185
void Shape__get_Color_fn(Shape* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :1191
void Shape__set_Color_fn(Shape* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// protected float2 get_ContentSize() :1458
void Shape__get_ContentSize_fn(Shape* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ContentSize();
}

// protected float2 get_ContentTopLeft() :1470
void Shape__get_ContentTopLeft_fn(Shape* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->ContentTopLeft();
}

// private float get_CurrentDrawCost() :1392
void Shape__get_CurrentDrawCost_fn(Shape* __this, float* __retval)
{
    *__retval = __this->CurrentDrawCost();
}

// protected virtual void DrawFill(Fuse.DrawContext dc, Fuse.Drawing.Brush fill) :1542
void Shape__DrawFill_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Brush* fill)
{
}

// protected virtual void DrawStroke(Fuse.DrawContext dc, Fuse.Drawing.Stroke stroke) :1543
void Shape__DrawStroke_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Fuse::Drawing::Stroke* stroke)
{
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :1525
void Shape__DrawVisual_fn(Shape* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.Shape", "DrawVisual(Fuse.DrawContext)");
    ::g::Fuse::Drawing::Brush* ret11;
    ::g::Fuse::Drawing::Stroke* ret12;
    __this->PrepareDraw(dc, __this->ActualSize());

    if (__this->HasFills())

        for (uObject* enum4 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Fills()), ::TYPES[102/*Uno.Collections.IEnumerable<Fuse.Drawing.Brush>*/])); ::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum4), ::TYPES[98/*Uno.Collections.IEnumerator*/])); )
        {
            ::g::Fuse::Drawing::Brush* fill = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum4), ::TYPES[103/*Uno.Collections.IEnumerator<Fuse.Drawing.Brush>*/]), &ret11), ret11);
            __this->DrawFill(dc, fill);
        }

    if (__this->HasStrokes())

        for (uObject* enum5 = (uObject*)::g::Uno::Collections::IEnumerable::GetEnumerator(uInterface(uPtr(__this->Strokes()), ::TYPES[97/*Uno.Collections.IEnumerable<Fuse.Drawing.Stroke>*/])); ::g::Uno::Collections::IEnumerator::MoveNext(uInterface(uPtr(enum5), ::TYPES[98/*Uno.Collections.IEnumerator*/])); )
        {
            ::g::Fuse::Drawing::Stroke* stroke = (::g::Uno::Collections::IEnumerator1::get_Current_ex(uInterface(uPtr(enum5), ::TYPES[99/*Uno.Collections.IEnumerator<Fuse.Drawing.Stroke>*/]), &ret12), ret12);
            __this->DrawStroke(dc, stroke);
        }
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :1520
void Shape__FastTrackDrawWithOpacity_fn(Shape* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    return *__retval = false, void();
}

// public Fuse.Drawing.Brush get_Fill() :1218
void Shape__get_Fill_fn(Shape* __this, ::g::Fuse::Drawing::Brush** __retval)
{
    *__retval = __this->Fill();
}

// public void set_Fill(Fuse.Drawing.Brush value) :1223
void Shape__set_Fill_fn(Shape* __this, ::g::Fuse::Drawing::Brush* value)
{
    __this->Fill(value);
}

// public Uno.Collections.IList<Fuse.Drawing.Brush> get_Fills() :1237
void Shape__get_Fills_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->Fills();
}

// public bool get_HasFills() :1304
void Shape__get_HasFills_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasFills();
}

// private bool get_HasLoadingResources() :1028
void Shape__get_HasLoadingResources_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasLoadingResources();
}

// public bool get_HasStrokes() :1324
void Shape__get_HasStrokes_fn(Shape* __this, bool* __retval)
{
    *__retval = __this->HasStrokes();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :1547
void Shape__get_HitTestLocalVisualBounds_fn(Shape* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.Shape", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret24;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret24), ret24);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// private Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher> get_LoadingResources() :1008
void Shape__get_LoadingResources_fn(Shape* __this, ::g::Uno::Collections::Dictionary** __retval)
{
    *__retval = __this->LoadingResources();
}

// private Fuse.Controls.Native.IShapeView get_NativeShape() :1478
void Shape__get_NativeShape_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->NativeShape();
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) :1205
void Shape__OnColorChanged_fn(Shape* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->OnColorChanged(*value, origin);
}

// private void OnFillAdded(Fuse.Drawing.Brush f) :1245
void Shape__OnFillAdded_fn(Shape* __this, ::g::Fuse::Drawing::Brush* f)
{
    __this->OnFillAdded(f);
}

// private void OnFillRemoved(Fuse.Drawing.Brush f) :1265
void Shape__OnFillRemoved_fn(Shape* __this, ::g::Fuse::Drawing::Brush* f)
{
    __this->OnFillRemoved(f);
}

// internal void OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) :1070
void Shape__OnLoadingResourcePropertyChanged_fn(Shape* __this, ::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector* property)
{
    __this->OnLoadingResourcePropertyChanged(sender, *property);
}

// internal void OnLoadingResourceRooted() :1082
void Shape__OnLoadingResourceRooted_fn(Shape* __this)
{
    __this->OnLoadingResourceRooted();
}

// internal void OnLoadingResourceUnrooted() :1097
void Shape__OnLoadingResourceUnrooted_fn(Shape* __this)
{
    __this->OnLoadingResourceUnrooted();
}

// public override sealed void OnPropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) :1288
void Shape__OnPropertyChanged2_fn(Shape* __this, ::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector* property)
{
    uStackFrame __("Fuse.Controls.Shape", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector property_ = *property;
    __this->OnLoadingResourcePropertyChanged(sender, property_);

    if (uIs(sender, ::TYPES[104/*Fuse.Drawing.Brush*/]))
        __this->InvalidateVisual();
    else if (uIs(sender, ::TYPES[105/*Fuse.Drawing.Stroke*/]))
    {
        __this->InvalidateVisual();

        if (::g::Uno::UX::Selector__op_Equality(property_, Shape::_widthName()) || ::g::Uno::UX::Selector__op_Equality(property_, Shape::_offsetName()))
            __this->InvalidateRenderBounds();
    }
    else
        ::g::Fuse::Controls::Control__OnPropertyChanged2_fn(__this, sender, uCRef(property_));

    __this->UpdateNativeShape();
}

// protected override void OnRooted() :1406
void Shape__OnRooted_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "OnRooted()");
    ::g::Fuse::Drawing::Stroke* ret15;
    ::g::Fuse::Drawing::Brush* ret16;
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);

    if (__this->HasStrokes())

        for (int i = 0; i < uPtr(__this->_strokes)->Count(); ++i)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_strokes), uCRef<int>(i), &ret15), ret15))->Pin();

    if (__this->HasFills())

        for (int i1 = 0; i1 < uPtr(__this->_fills)->Count(); ++i1)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_fills), uCRef<int>(i1), &ret16), ret16))->Pin();

    __this->AddDrawCost((double)__this->CurrentDrawCost());
    __this->OnLoadingResourceRooted();
}

// protected void OnShapeLayoutChanged() :1368
void Shape__OnShapeLayoutChanged_fn(Shape* __this)
{
    __this->OnShapeLayoutChanged();
}

// private void OnStrokeAdded(Fuse.Drawing.Stroke s) :1341
void Shape__OnStrokeAdded_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* s)
{
    __this->OnStrokeAdded(s);
}

// private void OnStrokeRemoved(Fuse.Drawing.Stroke s) :1355
void Shape__OnStrokeRemoved_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* s)
{
    __this->OnStrokeRemoved(s);
}

// protected override sealed void OnUnrooted() :1424
void Shape__OnUnrooted_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "OnUnrooted()");
    ::g::Fuse::Drawing::Stroke* ret17;
    ::g::Fuse::Drawing::Brush* ret18;
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);

    if (__this->HasStrokes())

        for (int i = 0; i < uPtr(__this->_strokes)->Count(); ++i)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_strokes), uCRef<int>(i), &ret17), ret17))->Unpin();

    if (__this->HasFills())

        for (int i1 = 0; i1 < uPtr(__this->_fills)->Count(); ++i1)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_fills), uCRef<int>(i1), &ret18), ret18))->Unpin();

    __this->RemoveDrawCost((double)__this->CurrentDrawCost());
    __this->OnLoadingResourceUnrooted();
}

// internal virtual void PrepareDraw(Fuse.DrawContext dc, float2 canvasSize) :1442
void Shape__PrepareDraw_fn(Shape* __this, ::g::Fuse::DrawContext* dc, ::g::Uno::Float2* canvasSize)
{
    uStackFrame __("Fuse.Controls.Shape", "PrepareDraw(Fuse.DrawContext,float2)");
    ::g::Fuse::Drawing::Brush* ret19;
    ::g::Uno::Float2 canvasSize_ = *canvasSize;
    ::g::Fuse::Drawing::Stroke* ret20;

    if (__this->HasFills())

        for (int i = 0; i < uPtr(__this->_fills)->Count(); ++i)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_fills), uCRef<int>(i), &ret19), ret19))->Prepare(dc, canvasSize_);

    if (__this->HasStrokes())

        for (int i1 = 0; i1 < uPtr(__this->_strokes)->Count(); ++i1)
            uPtr((::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(__this->_strokes), uCRef<int>(i1), &ret20), ret20))->Prepare(dc, canvasSize_);
}

// protected override void PushPropertiesToNativeView() :1498
void Shape__PushPropertiesToNativeView_fn(Shape* __this)
{
    uStackFrame __("Fuse.Controls.Shape", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    __this->UpdateNativeShape();
}

// internal void RemoveLoadingResource(Uno.UX.PropertyObject res) :1051
void Shape__RemoveLoadingResource_fn(Shape* __this, ::g::Uno::UX::PropertyObject* res)
{
    __this->RemoveLoadingResource(res);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) :1196
void Shape__SetColor_fn(Shape* __this, ::g::Uno::Float4* value, uObject* origin)
{
    __this->SetColor(*value, origin);
}

// public float get_Smoothness() :1378
void Shape__get_Smoothness_fn(Shape* __this, float* __retval)
{
    *__retval = __this->Smoothness();
}

// public void set_Smoothness(float value) :1379
void Shape__set_Smoothness_fn(Shape* __this, float* value)
{
    __this->Smoothness(*value);
}

// public Fuse.Drawing.Stroke get_Stroke() :1310
void Shape__get_Stroke_fn(Shape* __this, ::g::Fuse::Drawing::Stroke** __retval)
{
    *__retval = __this->Stroke();
}

// public void set_Stroke(Fuse.Drawing.Stroke value) :1315
void Shape__set_Stroke_fn(Shape* __this, ::g::Fuse::Drawing::Stroke* value)
{
    __this->Stroke(value);
}

// public Uno.Collections.IList<Fuse.Drawing.Stroke> get_Strokes() :1333
void Shape__get_Strokes_fn(Shape* __this, uObject** __retval)
{
    *__retval = __this->Strokes();
}

// private void UpdateNativeShape() :1481
void Shape__UpdateNativeShape_fn(Shape* __this)
{
    __this->UpdateNativeShape();
}

uSStrong< ::g::Fuse::PropertyHandle*> Shape::_loadingResourcesHandle_;
::g::Uno::UX::Selector Shape::_offsetName_;
::g::Uno::UX::Selector Shape::_widthName_;
::g::Uno::UX::Selector Shape::ColorPropertyName_;

// protected generated Shape() [instance] :996
void Shape::ctor_6()
{
    _smoothness = 1.0f;
    ctor_5();
}

// internal void AddLoadingResource(Uno.UX.PropertyObject res) [instance] :1031
void Shape::AddLoadingResource(::g::Uno::UX::PropertyObject* res)
{
    uStackFrame __("Fuse.Controls.Shape", "AddLoadingResource(Uno.UX.PropertyObject)");
    bool ret7;

    if (!uIs(res, ::TYPES[96/*Fuse.ILoading*/]))
        return;

    ::g::Uno::Collections::Dictionary* all = LoadingResources();
    Shape__Watcher* watcher;

    if (!(::g::Uno::Collections::Dictionary__TryGetValue_fn(uPtr(all), res, (void**)(&watcher), &ret7), ret7))
    {
        watcher = Shape__Watcher::New1();
        ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(all), res, watcher);
    }

    if (IsRootingStarted() && !uPtr(watcher)->IsWatching)
    {
        uPtr(res)->AddPropertyListener((uObject*)this);
        uPtr(watcher)->IsWatching = true;
    }
}

// protected float2 get_Center() [instance] :1462
::g::Uno::Float2 Shape::Center()
{
    return ::g::Uno::Float2__op_Division1(ContentSize(), 2.0f);
}

// private void CheckStatus() [instance] :1112
void Shape::CheckStatus()
{
    uStackFrame __("Fuse.Controls.Shape", "CheckStatus()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > ret10;
    bool loading = false;

    if (HasLoadingResources())

        for (::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > enum3 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret10), ret10); enum3.MoveNext(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]); )
        {
            ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > item = enum3.Current(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]);

            if (::g::Fuse::ILoading::IsLoading(uInterface(uPtr(uAs<uObject*>(item.Key(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]), ::TYPES[96/*Fuse.ILoading*/])), ::TYPES[96/*Fuse.ILoading*/])))
            {
                loading = true;
                break;
            }
        }

    ::g::Fuse::Triggers::BusyTask::SetBusy(this, &_loadingResourceTask, loading ? 1 : 0, ::STRINGS[23/*""*/]);
}

// public float4 get_Color() [instance] :1185
::g::Uno::Float4 Shape::Color()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Color()");
    uObject* f = uAs<uObject*>(Fill(), ::TYPES[111/*Fuse.Drawing.ISolidColor*/]);

    if (f != NULL)
        return ::g::Fuse::Drawing::ISolidColor::Color(uInterface(uPtr(f), ::TYPES[111/*Fuse.Drawing.ISolidColor*/]));

    return ::g::Uno::Float4__New1(0.0f);
}

// public void set_Color(float4 value) [instance] :1191
void Shape::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// protected float2 get_ContentSize() [instance] :1458
::g::Uno::Float2 Shape::ContentSize()
{
    return ActualSize();
}

// protected float2 get_ContentTopLeft() [instance] :1470
::g::Uno::Float2 Shape::ContentTopLeft()
{
    return ::g::Uno::Float2__New1(0.0f);
}

// private float get_CurrentDrawCost() [instance] :1392
float Shape::CurrentDrawCost()
{
    uStackFrame __("Fuse.Controls.Shape", "get_CurrentDrawCost()");
    float cost = 0.0f;

    if (HasFills())
        cost = cost + (float)::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Fills()), ::TYPES[112/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]));

    if (HasStrokes())
        cost = cost + (float)::g::Uno::Collections::ICollection::Count(uInterface(uPtr(Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]));

    return cost;
}

// public Fuse.Drawing.Brush get_Fill() [instance] :1218
::g::Fuse::Drawing::Brush* Shape::Fill()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Fill()");
    ::g::Fuse::Drawing::Brush* ret23;

    if ((_fills == NULL) || (uPtr(_fills)->Count() == 0))
        return NULL;
    else
        return (::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(_fills), uCRef<int>(0), &ret23), ret23);
}

// public void set_Fill(Fuse.Drawing.Brush value) [instance] :1223
void Shape::Fill(::g::Fuse::Drawing::Brush* value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Fill(Fuse.Drawing.Brush)");
    ::g::Uno::Collections::ICollection::Clear(uInterface(uPtr(Fills()), ::TYPES[112/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]));

    if (value != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Fills()), ::TYPES[112/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), value);
}

// public Uno.Collections.IList<Fuse.Drawing.Brush> get_Fills() [instance] :1237
uObject* Shape::Fills()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Fills()");

    if (_fills == NULL)
        _fills = ((::g::Uno::Collections::ObservableList*)::g::Uno::Collections::ObservableList::New1(::TYPES[114/*Uno.Collections.ObservableList<Fuse.Drawing.Brush>*/], uDelegate::New(::TYPES[115/*Uno.Action<Fuse.Drawing.Brush>*/], (void*)Shape__OnFillAdded_fn, this), uDelegate::New(::TYPES[115/*Uno.Action<Fuse.Drawing.Brush>*/], (void*)Shape__OnFillRemoved_fn, this)));

    return (uObject*)_fills;
}

// public bool get_HasFills() [instance] :1304
bool Shape::HasFills()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasFills()");
    return (_fills != NULL) && (uPtr(_fills)->Count() > 0);
}

// private bool get_HasLoadingResources() [instance] :1028
bool Shape::HasLoadingResources()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasLoadingResources()");
    return uPtr(Properties())->Has(Shape::_loadingResourcesHandle());
}

// public bool get_HasStrokes() [instance] :1324
bool Shape::HasStrokes()
{
    uStackFrame __("Fuse.Controls.Shape", "get_HasStrokes()");
    return (_strokes != NULL) && (uPtr(_strokes)->Count() > 0);
}

// private Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher> get_LoadingResources() [instance] :1008
::g::Uno::Collections::Dictionary* Shape::LoadingResources()
{
    uStackFrame __("Fuse.Controls.Shape", "get_LoadingResources()");
    uObject* val;
    ::g::Uno::Collections::Dictionary* loading;

    if (uPtr(Properties())->TryGet(Shape::_loadingResourcesHandle(), &val))
        loading = uCast< ::g::Uno::Collections::Dictionary*>(val, ::TYPES[116/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]);
    else
    {
        loading = (::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::TYPES[116/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]);
        uPtr(Properties())->Set(Shape::_loadingResourcesHandle(), loading);
    }

    return loading;
}

// private Fuse.Controls.Native.IShapeView get_NativeShape() [instance] :1478
uObject* Shape::NativeShape()
{
    return uAs<uObject*>(NativeView(), ::TYPES[110/*Fuse.Controls.Native.IShapeView*/]);
}

// private void OnColorChanged(float4 value, Uno.UX.IPropertyListener origin) [instance] :1205
void Shape::OnColorChanged(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Shape", "OnColorChanged(float4,Uno.UX.IPropertyListener)");

    if (!uIs((::g::Fuse::Drawing::Brush*)Fill(), ::TYPES[26/*Fuse.Drawing.SolidColor*/]))
        Fill(::g::Fuse::Drawing::SolidColor::New3(value));
    else
        uPtr(uCast< ::g::Fuse::Drawing::SolidColor*>(Fill(), ::TYPES[26/*Fuse.Drawing.SolidColor*/]))->Color(value);

    OnPropertyChanged1(Shape::ColorPropertyName(), uAs<uObject*>(origin, ::TYPES[78/*Uno.UX.IPropertyListener*/]));
}

// private void OnFillAdded(Fuse.Drawing.Brush f) [instance] :1245
void Shape::OnFillAdded(::g::Fuse::Drawing::Brush* f)
{
    uStackFrame __("Fuse.Controls.Shape", "OnFillAdded(Fuse.Drawing.Brush)");

    if (IsRootingCompleted() && (f != NULL))
    {
        uPtr(f)->Pin();
        AddDrawCost(1.0);
    }

    if (uIs(f, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]))
        uPtr(uCast< ::g::Fuse::Drawing::DynamicBrush*>(f, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]))->AddPropertyListener((uObject*)this);

    AddLoadingResource(f);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// private void OnFillRemoved(Fuse.Drawing.Brush f) [instance] :1265
void Shape::OnFillRemoved(::g::Fuse::Drawing::Brush* f)
{
    uStackFrame __("Fuse.Controls.Shape", "OnFillRemoved(Fuse.Drawing.Brush)");

    if (IsRootingCompleted() && (f != NULL))
    {
        uPtr(f)->Unpin();
        RemoveDrawCost(1.0);
    }

    if (uIs(f, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]))
        uPtr(uCast< ::g::Fuse::Drawing::DynamicBrush*>(f, ::TYPES[12/*Fuse.Drawing.DynamicBrush*/]))->RemovePropertyListener((uObject*)this);

    RemoveLoadingResource(f);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// internal void OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject sender, Uno.UX.Selector property) [instance] :1070
void Shape::OnLoadingResourcePropertyChanged(::g::Uno::UX::PropertyObject* sender, ::g::Uno::UX::Selector property)
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourcePropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    uObject* loading = uAs<uObject*>(sender, ::TYPES[96/*Fuse.ILoading*/]);

    if (!HasLoadingResources() || (loading == NULL))
        return;

    if (::g::Uno::UX::Selector__op_Inequality(property, ::g::Fuse::ILoadingStatic::IsLoadingName()))
        return;

    CheckStatus();
}

// internal void OnLoadingResourceRooted() [instance] :1082
void Shape::OnLoadingResourceRooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourceRooted()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > ret13;

    if (HasLoadingResources())

        for (::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > enum1 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret13), ret13); enum1.MoveNext(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]); )
        {
            ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > item = enum1.Current(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]);

            if (uPtr(item.Value(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->IsWatching)
                continue;

            uPtr(item.Key(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->AddPropertyListener((uObject*)this);
            uPtr(item.Value(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->IsWatching = true;
        }

    CheckStatus();
}

// internal void OnLoadingResourceUnrooted() [instance] :1097
void Shape::OnLoadingResourceUnrooted()
{
    uStackFrame __("Fuse.Controls.Shape", "OnLoadingResourceUnrooted()");
    ::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > ret14;

    if (!HasLoadingResources())
        return;

    for (::g::Uno::Collections::Dictionary__Enumerator<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > enum2 = (::g::Uno::Collections::Dictionary__GetEnumerator_fn(uPtr(LoadingResources()), &ret14), ret14); enum2.MoveNext(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]); )
    {
        ::g::Uno::Collections::KeyValuePair<uStrong< ::g::Uno::UX::PropertyObject*>, uStrong<Shape__Watcher*> > item = enum2.Current(::TYPES[100/*Uno.Collections.Dictionary<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>.Enumerator*/]);

        if (uPtr(item.Value(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->IsWatching)
            uPtr(item.Key(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->RemovePropertyListener((uObject*)this);

        uPtr(item.Value(::TYPES[101/*Uno.Collections.KeyValuePair<Uno.UX.PropertyObject, Fuse.Controls.Shape.Watcher>*/]))->IsWatching = false;
    }
}

// protected void OnShapeLayoutChanged() [instance] :1368
void Shape::OnShapeLayoutChanged()
{
    uStackFrame __("Fuse.Controls.Shape", "OnShapeLayoutChanged()");
    InvalidateLayout(2);
    InvalidateRenderBounds();
}

// private void OnStrokeAdded(Fuse.Drawing.Stroke s) [instance] :1341
void Shape::OnStrokeAdded(::g::Fuse::Drawing::Stroke* s)
{
    uStackFrame __("Fuse.Controls.Shape", "OnStrokeAdded(Fuse.Drawing.Stroke)");

    if (IsRootingCompleted() && (s != NULL))
    {
        uPtr(s)->Pin();
        AddDrawCost(1.0);
    }

    uPtr(s)->AddPropertyListener((uObject*)this);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// private void OnStrokeRemoved(Fuse.Drawing.Stroke s) [instance] :1355
void Shape::OnStrokeRemoved(::g::Fuse::Drawing::Stroke* s)
{
    uStackFrame __("Fuse.Controls.Shape", "OnStrokeRemoved(Fuse.Drawing.Stroke)");

    if (IsRootingCompleted() && (s != NULL))
    {
        uPtr(s)->Unpin();
        RemoveDrawCost(1.0);
    }

    uPtr(s)->RemovePropertyListener((uObject*)this);
    InvalidateRenderBounds();
    UpdateNativeShape();
}

// internal void RemoveLoadingResource(Uno.UX.PropertyObject res) [instance] :1051
void Shape::RemoveLoadingResource(::g::Uno::UX::PropertyObject* res)
{
    uStackFrame __("Fuse.Controls.Shape", "RemoveLoadingResource(Uno.UX.PropertyObject)");
    bool ret21;
    bool ret22;

    if (!uIs(res, ::TYPES[96/*Fuse.ILoading*/]))
        return;

    ::g::Uno::Collections::Dictionary* all = LoadingResources();
    Shape__Watcher* watcher;

    if (!(::g::Uno::Collections::Dictionary__TryGetValue_fn(uPtr(all), res, (void**)(&watcher), &ret21), ret21))
        return;

    if (uPtr(watcher)->IsWatching)
    {
        uPtr(res)->RemovePropertyListener((uObject*)this);
        uPtr(watcher)->IsWatching = false;
    }

    ::g::Uno::Collections::Dictionary__Remove_fn(uPtr(all), res, &ret22);
}

// public void SetColor(float4 value, Uno.UX.IPropertyListener origin) [instance] :1196
void Shape::SetColor(::g::Uno::Float4 value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Shape", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(Color(), value))
        OnColorChanged(value, origin);
}

// public float get_Smoothness() [instance] :1378
float Shape::Smoothness()
{
    return _smoothness;
}

// public void set_Smoothness(float value) [instance] :1379
void Shape::Smoothness(float value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Smoothness(float)");

    if (_smoothness != value)
    {
        _smoothness = value;
        InvalidateVisual();
        InvalidateRenderBounds();
    }
}

// public Fuse.Drawing.Stroke get_Stroke() [instance] :1310
::g::Fuse::Drawing::Stroke* Shape::Stroke()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Stroke()");
    ::g::Fuse::Drawing::Stroke* ret25;

    if ((_strokes == NULL) || (uPtr(_strokes)->Count() == 0))
        return NULL;

    return (::g::Uno::Collections::ObservableList__get_Item_fn(uPtr(_strokes), uCRef<int>(0), &ret25), ret25);
}

// public void set_Stroke(Fuse.Drawing.Stroke value) [instance] :1315
void Shape::Stroke(::g::Fuse::Drawing::Stroke* value)
{
    uStackFrame __("Fuse.Controls.Shape", "set_Stroke(Fuse.Drawing.Stroke)");
    ::g::Uno::Collections::ICollection::Clear(uInterface(uPtr(Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]));

    if (value != NULL)
        ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), value);
}

// public Uno.Collections.IList<Fuse.Drawing.Stroke> get_Strokes() [instance] :1333
uObject* Shape::Strokes()
{
    uStackFrame __("Fuse.Controls.Shape", "get_Strokes()");

    if (_strokes == NULL)
        _strokes = ((::g::Uno::Collections::ObservableList*)::g::Uno::Collections::ObservableList::New1(::TYPES[117/*Uno.Collections.ObservableList<Fuse.Drawing.Stroke>*/], uDelegate::New(::TYPES[118/*Uno.Action<Fuse.Drawing.Stroke>*/], (void*)Shape__OnStrokeAdded_fn, this), uDelegate::New(::TYPES[118/*Uno.Action<Fuse.Drawing.Stroke>*/], (void*)Shape__OnStrokeRemoved_fn, this)));

    return (uObject*)_strokes;
}

// private void UpdateNativeShape() [instance] :1481
void Shape::UpdateNativeShape()
{
    uStackFrame __("Fuse.Controls.Shape", "UpdateNativeShape()");
    uObject* ns = NativeShape();

    if (ns != NULL)
    {
        uArray* fills = HasFills() ? (uArray*)::g::Uno::Collections::EnumerableExtensions::ToArray(::TYPES[106/*Uno.Collections.EnumerableExtensions.ToArray<Fuse.Drawing.Brush>*/], Fills()) : uArray::New(::TYPES[107/*Fuse.Drawing.Brush[]*/], 0);
        uArray* strokes = HasStrokes() ? (uArray*)::g::Uno::Collections::EnumerableExtensions::ToArray(::TYPES[108/*Uno.Collections.EnumerableExtensions.ToArray<Fuse.Drawing.Stroke>*/], Strokes()) : uArray::New(::TYPES[109/*Fuse.Drawing.Stroke[]*/], 0);
        ::g::Fuse::Controls::Native::IShapeView::Update(uInterface(uPtr(ns), ::TYPES[110/*Fuse.Controls.Native.IShapeView*/]), fills, strokes, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])));
    }
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal sealed extern class SingleViewHost :2077
// {
static void SingleViewHost_build(uType* type)
{
    ::TYPES[42] = ::g::Fuse::Controls::IProxyHost_typeof();
    ::TYPES[46] = ::g::Uno::IDisposable_typeof();
    ::TYPES[119] = ::g::Fuse::Controls::Native::IViewHandleRenderer_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    ::TYPES[14] = ::g::Uno::Action_typeof();
    ::TYPES[13] = ::g::Fuse::Controls::Control_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(SingleViewHost_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(SingleViewHost_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(SingleViewHost_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(SingleViewHost_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(SingleViewHost_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(SingleViewHost_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(SingleViewHost_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(SingleViewHost_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(SingleViewHost_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(SingleViewHost_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(SingleViewHost_type, interface14),
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(SingleViewHost_type, interface15),
        ::TYPES[46/*Uno.IDisposable*/], offsetof(SingleViewHost_type, interface16));
    type->SetFields(95,
        ::TYPES[46/*Uno.IDisposable*/], offsetof(::g::Fuse::Controls::SingleViewHost, _changingState), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _draw), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _isVisible), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _offscreen), 0,
        ::TYPES[42/*Fuse.Controls.IProxyHost*/], offsetof(::g::Fuse::Controls::SingleViewHost, _proxyHost), 0,
        ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/], offsetof(::g::Fuse::Controls::SingleViewHost, _renderer), 0,
        SingleViewHost__RenderState_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _renderState), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _updateTransform), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::SingleViewHost, _viewHandle), 0);
}

SingleViewHost_type* SingleViewHost_typeof()
{
    static uSStrong<SingleViewHost_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(SingleViewHost);
    options.TypeSize = sizeof(SingleViewHost_type);
    type = (SingleViewHost_type*)uClassType::New("Fuse.Controls.SingleViewHost", options);
    type->fp_build_ = SingleViewHost_build;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))SingleViewHost__CalcRenderBounds_fn;
    type->fp_DrawWithChildren = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*))SingleViewHost__DrawWithChildren_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))SingleViewHost__GetContentSize_fn;
    type->fp_OnInvalidateVisual = (void(*)(::g::Fuse::Visual*))SingleViewHost__OnInvalidateVisual_fn;
    type->fp_OnInvalidateWorldTransform = (void(*)(::g::Fuse::Visual*))SingleViewHost__OnInvalidateWorldTransform_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))SingleViewHost__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))SingleViewHost__OnUnrooted_fn;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))SingleViewHost__get_TreeRenderer_fn;
    type->interface15.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererRootingStarted_fn;
    type->interface15.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererRooted_fn;
    type->interface15.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererUnrooted_fn;
    type->interface15.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))SingleViewHost__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface15.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface15.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Uno::Collections::List*))SingleViewHost__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface15.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface15.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))SingleViewHost__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface15.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface15.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))SingleViewHost__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface15.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))SingleViewHost__FuseElementsITreeRendererMeasure_fn;
    type->interface15.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererTransformChanged_fn;
    type->interface15.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))SingleViewHost__FuseElementsITreeRendererPlaced_fn;
    type->interface16.fp_Dispose = (void(*)(uObject*))SingleViewHost__Dispose_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public SingleViewHost(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) :2160
void SingleViewHost__ctor_5_fn(SingleViewHost* __this, int* initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    __this->ctor_5(*initialState, viewHandle, renderer);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :2234
void SingleViewHost__CalcRenderBounds_fn(SingleViewHost* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret2;
    ::g::Fuse::VisualBounds* ret3;
    return *__retval = __this->_draw ? (::g::Fuse::VisualBounds*)uPtr((::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret2), ret2))->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize()) : (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret3), ret3), void();
}

// private float4x4 CalcTransform() :2257
void SingleViewHost__CalcTransform_fn(SingleViewHost* __this, ::g::Uno::Float4x4* __retval)
{
    *__retval = __this->CalcTransform();
}

// public void Dispose() :2315
void SingleViewHost__Dispose_fn(SingleViewHost* __this)
{
    __this->Dispose();
}

// protected override sealed void DrawWithChildren(Fuse.DrawContext dc) :2223
void SingleViewHost__DrawWithChildren_fn(SingleViewHost* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "DrawWithChildren(Fuse.DrawContext)");

    if (__this->_draw)
        ::g::Fuse::Controls::Native::IViewHandleRenderer::Draw(uInterface(uPtr(__this->_renderer), ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/]), __this->_viewHandle, uPtr(dc)->GetLocalToClipTransform(__this), ::g::Uno::Float2__New1(0.0f), __this->ActualSize(), ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/])));
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :2278
void SingleViewHost__FuseElementsITreeRendererBackgroundChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :2279
void SingleViewHost__FuseElementsITreeRendererClipToBoundsChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :2293
void SingleViewHost__FuseElementsITreeRendererHitTestModeChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    bool enabled_ = *enabled;
    uPtr(__this->_viewHandle)->SetHitTestEnabled(enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :2297
void SingleViewHost__FuseElementsITreeRendererIsEnabledChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    bool isEnabled_ = *isEnabled;
    uPtr(__this->_viewHandle)->SetEnabled(isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :2283
void SingleViewHost__FuseElementsITreeRendererIsVisibleChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    bool isVisible_ = *isVisible;
    __this->_isVisible = isVisible_;
    uPtr(__this->_viewHandle)->SetOpacity(isVisible_ ? uPtr(e)->Opacity() : 0.0f);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :2301
void SingleViewHost__FuseElementsITreeRendererMeasure_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    *size = ::g::Uno::Float2__New1(0.0f);
    return *__retval = false, void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :2288
void SingleViewHost__FuseElementsITreeRendererOpacityChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    float opacity_ = *opacity;

    if (__this->_isVisible)
        uPtr(__this->_viewHandle)->SetOpacity(opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :2309
void SingleViewHost__FuseElementsITreeRendererPlaced_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :2276
void SingleViewHost__FuseElementsITreeRendererRooted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :2275
void SingleViewHost__FuseElementsITreeRendererRootingStarted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :2303
void SingleViewHost__FuseElementsITreeRendererTransformChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");

    if (e == __this)
        __this->UpdateHostViewTransform();
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :2277
void SingleViewHost__FuseElementsITreeRendererUnrooted_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) :2280
void SingleViewHost__FuseElementsITreeRendererZOrderChanged_fn(SingleViewHost* __this, ::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :2262
void SingleViewHost__GetContentSize_fn(SingleViewHost* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 ret4;

    if (uPtr(__this->_viewHandle)->IsLeafView)
        return *__retval = uPtr(__this->_viewHandle)->Measure(lp_, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(__this->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]))), void();
    else
        return *__retval = (::g::Fuse::Controls::Control__GetContentSize_fn(__this, uCRef(lp_), &ret4), ret4), void();
}

// public SingleViewHost New(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) :2160
void SingleViewHost__New2_fn(int* initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer, SingleViewHost** __retval)
{
    *__retval = SingleViewHost::New2(*initialState, viewHandle, renderer);
}

// protected override sealed void OnInvalidateVisual() :2215
void SingleViewHost__OnInvalidateVisual_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnInvalidateVisual()");
    ::g::Fuse::Elements::Element__OnInvalidateVisual_fn(__this);

    if (__this->_renderer != NULL)
        ::g::Fuse::Controls::Native::IViewHandleRenderer::Invalidate(uInterface(uPtr(__this->_renderer), ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/]));
}

// protected override sealed void OnInvalidateWorldTransform() :2205
void SingleViewHost__OnInvalidateWorldTransform_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnInvalidateWorldTransform()");
    ::g::Fuse::Visual__OnInvalidateWorldTransform_fn(__this);

    if (!__this->_updateTransform)
    {
        ::g::Fuse::UpdateManager::AddDeferredAction(uDelegate::New(::TYPES[14/*Uno.Action*/], (void*)SingleViewHost__UpdateHostViewTransform_fn, __this), 1, ::g::Fuse::LayoutPriority::Post());
        __this->_updateTransform = true;
    }
}

// protected override sealed void OnRooted() :2170
void SingleViewHost__OnRooted_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    __this->_proxyHost = ::g::Fuse::Controls::IProxyHostExtensions::FindProxyHost(__this);

    if (__this->RenderToTexture() == 1)
        __this->SetOnscreen();
}

// protected override sealed void OnUnrooted() :2178
void SingleViewHost__OnUnrooted_fn(SingleViewHost* __this)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    __this->SetOffscreen();
    __this->_proxyHost = NULL;
}

// public Fuse.Controls.SingleViewHost.RenderState get_RenderToTexture() :2137
void SingleViewHost__get_RenderToTexture_fn(SingleViewHost* __this, int* __retval)
{
    *__retval = __this->RenderToTexture();
}

// public void set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState value) :2138
void SingleViewHost__set_RenderToTexture_fn(SingleViewHost* __this, int* value)
{
    __this->RenderToTexture(*value);
}

// private void SetOffscreen() :2195
void SingleViewHost__SetOffscreen_fn(SingleViewHost* __this)
{
    __this->SetOffscreen();
}

// private void SetOnscreen() :2186
void SingleViewHost__SetOnscreen_fn(SingleViewHost* __this)
{
    __this->SetOnscreen();
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :2272
void SingleViewHost__get_TreeRenderer_fn(SingleViewHost* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "get_TreeRenderer()");
    return *__retval = (uObject*)__this, void();
}

// private void UpdateHostViewTransform() :2241
void SingleViewHost__UpdateHostViewTransform_fn(SingleViewHost* __this)
{
    __this->UpdateHostViewTransform();
}

// public SingleViewHost(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) [instance] :2160
void SingleViewHost::ctor_5(int initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    _offscreen = true;
    _isVisible = true;
    ctor_4();
    _renderState = initialState;
    _viewHandle = viewHandle;
    _renderer = renderer;
    _draw = (initialState == 0);
}

// private float4x4 CalcTransform() [instance] :2257
::g::Uno::Float4x4 SingleViewHost::CalcTransform()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "CalcTransform()");
    return ::g::Uno::Matrix::Mul8(::g::Uno::Matrix::Invert2(::g::Fuse::Controls::IProxyHost::LocalTransform(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]))), WorldTransform());
}

// public void Dispose() [instance] :2315
void SingleViewHost::Dispose()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "Dispose()");
    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_renderer), ::TYPES[46/*Uno.IDisposable*/]));
    _renderer = NULL;
    _viewHandle = NULL;
}

// public Fuse.Controls.SingleViewHost.RenderState get_RenderToTexture() [instance] :2137
int SingleViewHost::RenderToTexture()
{
    return _renderState;
}

// public void set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState value) [instance] :2138
void SingleViewHost::RenderToTexture(int value)
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "set_RenderToTexture(Fuse.Controls.SingleViewHost.RenderState)");

    if (_renderState == value)
        return;

    _renderState = value;

    if (_changingState != NULL)
        ::g::Uno::IDisposable::Dispose(uInterface(uPtr(_changingState), ::TYPES[46/*Uno.IDisposable*/]));

    if (_renderState == 0)
        _changingState = (uObject*)SingleViewHost__Enable::New1(this);
    else
        _changingState = (uObject*)SingleViewHost__Disable::New1(this);
}

// private void SetOffscreen() [instance] :2195
void SingleViewHost::SetOffscreen()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "SetOffscreen()");

    if (!_offscreen && (_proxyHost != NULL))
    {
        ::g::Fuse::Controls::IProxyHost::Remove(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), _viewHandle);
        _offscreen = true;
    }
}

// private void SetOnscreen() [instance] :2186
void SingleViewHost::SetOnscreen()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "SetOnscreen()");

    if (_offscreen && (_proxyHost != NULL))
    {
        ::g::Fuse::Controls::IProxyHost::Insert(uInterface(uPtr(_proxyHost), ::TYPES[42/*Fuse.Controls.IProxyHost*/]), _viewHandle);
        _offscreen = false;
    }
}

// private void UpdateHostViewTransform() [instance] :2241
void SingleViewHost::UpdateHostViewTransform()
{
    uStackFrame __("Fuse.Controls.SingleViewHost", "UpdateHostViewTransform()");

    if (!IsRootingCompleted())
        return;

    _updateTransform = false;
    ::g::Uno::Float4x4 transform = CalcTransform();
    ::g::Uno::Float2 size = ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = Parent();

    if (uIs(p, ::TYPES[13/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[13/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(_viewHandle)->UpdateViewRect(transform, size, density);
}

// public SingleViewHost New(Fuse.Controls.SingleViewHost.RenderState initialState, Fuse.Controls.Native.ViewHandle viewHandle, Fuse.Controls.Native.IViewHandleRenderer renderer) [static] :2160
SingleViewHost* SingleViewHost::New2(int initialState, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, uObject* renderer)
{
    SingleViewHost* obj1 = (SingleViewHost*)uNew(SingleViewHost_typeof());
    obj1->ctor_5(initialState, viewHandle, renderer);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/rangecontrols/$.uno
// -----------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider :901
// {
// static Slider() :369
static void Slider__cctor_5_fn(uType* __type)
{
}

static void Slider_build(uType* type)
{
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface14),
        ::g::Fuse::Triggers::IProgress_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface15),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Double_typeof(), NULL), offsetof(::g::Fuse::Controls::RangeControl_type, interface16),
        ::g::Fuse::Controls::Native::IRangeViewHost_typeof(), offsetof(::g::Fuse::Controls::RangeControl_type, interface17));
    type->SetFields(108);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::RangeControl_type* Slider_typeof()
{
    static uSStrong< ::g::Fuse::Controls::RangeControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::RangeControl_typeof();
    options.FieldCount = 108;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Slider);
    options.TypeSize = sizeof(::g::Fuse::Controls::RangeControl_type);
    type = (::g::Fuse::Controls::RangeControl_type*)uClassType::New("Fuse.Controls.Slider", options);
    type->fp_build_ = Slider_build;
    type->fp_ctor_ = (void*)Slider__New5_fn;
    type->fp_cctor_ = Slider__cctor_5_fn;
    type->interface17.fp_OnProgressChanged = (void(*)(uObject*, double*))::g::Fuse::Controls::RangeControl__FuseControlsNativeIRangeViewHostOnProgressChanged_fn;
    type->interface15.fp_get_Progress = (void(*)(uObject*, double*))::g::Fuse::Controls::RangeControl__get_Progress_fn;
    type->interface15.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__add_ProgressChanged_fn;
    type->interface15.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__remove_ProgressChanged_fn;
    type->interface16.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::RangeControl__get_Value_fn;
    type->interface16.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::RangeControl__set_Value_fn;
    type->interface16.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__add_ValueChanged_fn;
    type->interface16.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::RangeControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Slider() :373
void Slider__ctor_8_fn(Slider* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :377
void Slider__InitializeUX_fn(Slider* __this)
{
    __this->InitializeUX();
}

// public Slider New() :373
void Slider__New5_fn(Slider** __retval)
{
    *__retval = Slider::New5();
}

// public Slider() [instance] :373
void Slider::ctor_8()
{
    uStackFrame __("Fuse.Controls.Slider", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :377
void Slider::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Slider", "InitializeUX()");
    Slider__Template* GraphicsAppearance = Slider__Template::New2(this, this);
    Slider__Template1* AndroidAppearance = Slider__Template1::New2(this, this);
    Slider__Template2* iOSAppearance = Slider__Template2::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// public Slider New() [static] :373
Slider* Slider::New5()
{
    Slider* obj1 = (Slider*)uNew(Slider_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public class StackPanel :2355
// {
static void StackPanel_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Layouts::StackLayout_typeof(), offsetof(::g::Fuse::Controls::StackPanel, _stackLayout), 0);
    type->Reflection.SetFunctions(9,
        new uFunction("get_ContentAlignment", NULL, (void*)StackPanel__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)StackPanel__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_ItemSpacing", NULL, (void*)StackPanel__get_ItemSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemSpacing", NULL, (void*)StackPanel__set_ItemSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_Mode", NULL, (void*)StackPanel__get_Mode_fn, 0, false, ::g::Fuse::Layouts::StackLayoutMode_typeof(), 0),
        new uFunction("set_Mode", NULL, (void*)StackPanel__set_Mode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::StackLayoutMode_typeof()),
        new uFunction(".ctor", NULL, (void*)StackPanel__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)StackPanel__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)StackPanel__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()));
}

::g::Fuse::Controls::Control_type* StackPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(StackPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.StackPanel", options);
    type->fp_build_ = StackPanel_build;
    type->fp_ctor_ = (void*)StackPanel__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public StackPanel() :2359
void StackPanel__ctor_7_fn(StackPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Elements.Alignment get_ContentAlignment() :2395
void StackPanel__get_ContentAlignment_fn(StackPanel* __this, int* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :2396
void StackPanel__set_ContentAlignment_fn(StackPanel* __this, int* value)
{
    __this->ContentAlignment(*value);
}

// public float get_ItemSpacing() :2388
void StackPanel__get_ItemSpacing_fn(StackPanel* __this, float* __retval)
{
    *__retval = __this->ItemSpacing();
}

// public void set_ItemSpacing(float value) :2389
void StackPanel__set_ItemSpacing_fn(StackPanel* __this, float* value)
{
    __this->ItemSpacing(*value);
}

// public Fuse.Layouts.StackLayoutMode get_Mode() :2402
void StackPanel__get_Mode_fn(StackPanel* __this, int* __retval)
{
    *__retval = __this->Mode();
}

// public void set_Mode(Fuse.Layouts.StackLayoutMode value) :2403
void StackPanel__set_Mode_fn(StackPanel* __this, int* value)
{
    __this->Mode(*value);
}

// public StackPanel New() :2359
void StackPanel__New4_fn(StackPanel** __retval)
{
    *__retval = StackPanel::New4();
}

// public Fuse.Layouts.Orientation get_Orientation() :2367
void StackPanel__get_Orientation_fn(StackPanel* __this, int* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :2368
void StackPanel__set_Orientation_fn(StackPanel* __this, int* value)
{
    __this->Orientation(*value);
}

// public StackPanel() [instance] :2359
void StackPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.StackPanel", ".ctor()");
    ctor_6();
    Layout(_stackLayout = ::g::Fuse::Layouts::StackLayout::New2());
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :2395
int StackPanel::ContentAlignment()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_ContentAlignment()");
    return uPtr(_stackLayout)->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :2396
void StackPanel::ContentAlignment(int value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_ContentAlignment(Fuse.Elements.Alignment)");
    uPtr(_stackLayout)->ContentAlignment(value);
}

// public float get_ItemSpacing() [instance] :2388
float StackPanel::ItemSpacing()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_ItemSpacing()");
    return uPtr(_stackLayout)->ItemSpacing();
}

// public void set_ItemSpacing(float value) [instance] :2389
void StackPanel::ItemSpacing(float value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_ItemSpacing(float)");
    uPtr(_stackLayout)->ItemSpacing(value);
}

// public Fuse.Layouts.StackLayoutMode get_Mode() [instance] :2402
int StackPanel::Mode()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_Mode()");
    return uPtr(_stackLayout)->Mode();
}

// public void set_Mode(Fuse.Layouts.StackLayoutMode value) [instance] :2403
void StackPanel::Mode(int value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_Mode(Fuse.Layouts.StackLayoutMode)");
    uPtr(_stackLayout)->Mode(value);
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :2367
int StackPanel::Orientation()
{
    uStackFrame __("Fuse.Controls.StackPanel", "get_Orientation()");
    return uPtr(_stackLayout)->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :2368
void StackPanel::Orientation(int value)
{
    uStackFrame __("Fuse.Controls.StackPanel", "set_Orientation(Fuse.Layouts.Orientation)");
    uPtr(_stackLayout)->Orientation(value);
}

// public StackPanel New() [static] :2359
StackPanel* StackPanel::New4()
{
    StackPanel* obj1 = (StackPanel*)uNew(StackPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// public partial sealed class Star :1609
// {
static void Star_build(uType* type)
{
    ::STRINGS[124] = uString::Const("Star has been deprecated. Use an image instead");
    ::STRINGS[18] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno");
    ::STRINGS[19] = uString::Const(".ctor");
    ::STRINGS[125] = uString::Const("Points");
    ::STRINGS[126] = uString::Const("Ratio");
    ::STRINGS[127] = uString::Const("RotationDegrees");
    ::STRINGS[128] = uString::Const("RoundRatio");
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::PathShape_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::PathShape_type, interface14));
    type->SetFields(102,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _cachedDegrees), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::Star, _cachedPoints), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _cachedRadius), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _cachedRoundRatio), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _cachedSpokeRadius), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _degrees), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::Star, _points), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _ratio), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Star, _roundRatio), 0);
    type->Reflection.SetFunctions(9,
        new uFunction(".ctor", NULL, (void*)Star__New4_fn, 0, true, type, 0),
        new uFunction("get_Points", NULL, (void*)Star__get_Points_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_Points", NULL, (void*)Star__set_Points_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_Ratio", NULL, (void*)Star__get_Ratio_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Ratio", NULL, (void*)Star__set_Ratio_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_RotationDegrees", NULL, (void*)Star__get_RotationDegrees_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_RotationDegrees", NULL, (void*)Star__set_RotationDegrees_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_RoundRatio", NULL, (void*)Star__get_RoundRatio_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_RoundRatio", NULL, (void*)Star__set_RoundRatio_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

::g::Fuse::Controls::PathShape_type* Star_typeof()
{
    static uSStrong< ::g::Fuse::Controls::PathShape_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::PathShape_typeof();
    options.FieldCount = 111;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Star);
    options.TypeSize = sizeof(::g::Fuse::Controls::PathShape_type);
    type = (::g::Fuse::Controls::PathShape_type*)uClassType::New("Fuse.Controls.Star", options);
    type->fp_build_ = Star_build;
    type->fp_ctor_ = (void*)Star__New4_fn;
    type->fp_UpdatePath = (void(*)(::g::Fuse::Controls::PathShape*, ::g::Fuse::Drawing::PathGeometryRenderer*))Star__UpdatePath_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Shape__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Star() :1611
void Star__ctor_8_fn(Star* __this)
{
    __this->ctor_8();
}

// public Star New() :1611
void Star__New4_fn(Star** __retval)
{
    *__retval = Star::New4();
}

// public int get_Points() :1619
void Star__get_Points_fn(Star* __this, int* __retval)
{
    *__retval = __this->Points();
}

// public void set_Points(int value) :1620
void Star__set_Points_fn(Star* __this, int* value)
{
    __this->Points(*value);
}

// private float get_Radius() :1709
void Star__get_Radius_fn(Star* __this, float* __retval)
{
    *__retval = __this->Radius();
}

// public float get_Ratio() :1632
void Star__get_Ratio_fn(Star* __this, float* __retval)
{
    *__retval = __this->Ratio();
}

// public void set_Ratio(float value) :1633
void Star__set_Ratio_fn(Star* __this, float* value)
{
    __this->Ratio(*value);
}

// public float get_RotationDegrees() :1660
void Star__get_RotationDegrees_fn(Star* __this, float* __retval)
{
    *__retval = __this->RotationDegrees();
}

// public void set_RotationDegrees(float value) :1661
void Star__set_RotationDegrees_fn(Star* __this, float* value)
{
    __this->RotationDegrees(*value);
}

// internal float get_RotationRadians() :1673
void Star__get_RotationRadians_fn(Star* __this, float* __retval)
{
    *__retval = __this->RotationRadians();
}

// public float get_RoundRatio() :1646
void Star__get_RoundRatio_fn(Star* __this, float* __retval)
{
    *__retval = __this->RoundRatio();
}

// public void set_RoundRatio(float value) :1647
void Star__set_RoundRatio_fn(Star* __this, float* value)
{
    __this->RoundRatio(*value);
}

// private float get_SpokeRadius() :1714
void Star__get_SpokeRadius_fn(Star* __this, float* __retval)
{
    *__retval = __this->SpokeRadius();
}

// protected override sealed void UpdatePath(Fuse.Drawing.PathGeometryRenderer renderer) :1717
void Star__UpdatePath_fn(Star* __this, ::g::Fuse::Drawing::PathGeometryRenderer* renderer)
{
    uStackFrame __("Fuse.Controls.Star", "UpdatePath(Fuse.Drawing.PathGeometryRenderer)");

    if (__this->Points() < 3)
        return;

    if (((((__this->_cachedPoints == __this->Points()) && (__this->_cachedRadius == __this->Radius())) && (__this->_cachedSpokeRadius == __this->SpokeRadius())) && (__this->_cachedDegrees == __this->RotationDegrees())) && (__this->_cachedRoundRatio == __this->RoundRatio()))
        return;

    __this->_cachedPoints = __this->Points();
    __this->_cachedRadius = __this->Radius();
    __this->_cachedSpokeRadius = __this->SpokeRadius();
    __this->_cachedDegrees = __this->RotationDegrees();
    __this->_cachedRoundRatio = __this->RoundRatio();
    __this->InvalidateRenderBounds();
    uPtr(renderer)->Geometry(::g::Fuse::Drawing::PathGeometryExtensions::Star(::g::Fuse::Drawing::PathGeometry::New1()->MoveTo1(__this->Center()), __this->Points(), __this->Radius(), __this->SpokeRadius(), __this->RoundRatio(), __this->RotationRadians()));
}

// public Star() [instance] :1611
void Star::ctor_8()
{
    uStackFrame __("Fuse.Controls.Star", ".ctor()");
    _points = 5;
    _ratio = 0.5f;
    _degrees = 0.0f;
    ctor_7();
    ::g::Fuse::Diagnostics::Deprecated(::STRINGS[124/*"Star has be...*/], this, ::STRINGS[18/*"/Users/medb...*/], 1613, ::STRINGS[19/*".ctor"*/]);
}

// public int get_Points() [instance] :1619
int Star::Points()
{
    return _points;
}

// public void set_Points(int value) [instance] :1620
void Star::Points(int value)
{
    uStackFrame __("Fuse.Controls.Star", "set_Points(int)");

    if (value == _points)
        return;

    _points = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[125/*"Points"*/]));
}

// private float get_Radius() [instance] :1709
float Star::Radius()
{
    return ::g::Uno::Math::Min1(ContentSize().X, ContentSize().Y) * 0.5f;
}

// public float get_Ratio() [instance] :1632
float Star::Ratio()
{
    return _ratio;
}

// public void set_Ratio(float value) [instance] :1633
void Star::Ratio(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_Ratio(float)");

    if (value == _ratio)
        return;

    _ratio = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[126/*"Ratio"*/]));
}

// public float get_RotationDegrees() [instance] :1660
float Star::RotationDegrees()
{
    return _degrees;
}

// public void set_RotationDegrees(float value) [instance] :1661
void Star::RotationDegrees(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_RotationDegrees(float)");

    if (value == _degrees)
        return;

    _degrees = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[127/*"RotationDeg...*/]));
}

// internal float get_RotationRadians() [instance] :1673
float Star::RotationRadians()
{
    return (_degrees / 180.0f) * 3.14159274f;
}

// public float get_RoundRatio() [instance] :1646
float Star::RoundRatio()
{
    return _roundRatio;
}

// public void set_RoundRatio(float value) [instance] :1647
void Star::RoundRatio(float value)
{
    uStackFrame __("Fuse.Controls.Star", "set_RoundRatio(float)");

    if (value == _roundRatio)
        return;

    _roundRatio = value;
    InvalidateVisual();
    OnPropertyChanged(::g::Uno::UX::Selector__op_Implicit(::STRINGS[128/*"RoundRatio"*/]));
}

// private float get_SpokeRadius() [instance] :1714
float Star::SpokeRadius()
{
    return Radius() * Ratio();
}

// public Star New() [static] :1611
Star* Star::New4()
{
    Star* obj1 = (Star*)uNew(Star_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno
// -----------------------------------------------------------------------------------------------------------

// public sealed class StatusBarBackground :170
// {
static void StatusBarBackground_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(95);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)StatusBarBackground__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* StatusBarBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TopFrameBackground_typeof();
    options.FieldCount = 95;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(StatusBarBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.StatusBarBackground", options);
    type->fp_build_ = StatusBarBackground_build;
    type->fp_ctor_ = (void*)StatusBarBackground__New3_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated StatusBarBackground() :170
void StatusBarBackground__ctor_6_fn(StatusBarBackground* __this)
{
    __this->ctor_6();
}

// public generated StatusBarBackground New() :170
void StatusBarBackground__New3_fn(StatusBarBackground** __retval)
{
    *__retval = StatusBarBackground::New3();
}

// public generated StatusBarBackground() [instance] :170
void StatusBarBackground::ctor_6()
{
    ctor_5();
}

// public generated StatusBarBackground New() [static] :170
StatusBarBackground* StatusBarBackground::New3()
{
    StatusBarBackground* obj1 = (StatusBarBackground*)uNew(StatusBarBackground_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/togglecontrols/$.uno
// ------------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch :24
// {
// static Switch() :725
static void Switch__cctor_5_fn(uType* __type)
{
    Switch::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
}

static void Switch_build(uType* type)
{
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(::g::Fuse::Controls::ToggleControl_type, interface15),
        ::g::Fuse::Controls::Native::IToggleViewHost_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface16),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(::g::Fuse::Controls::ToggleControl_type, interface17));
    type->SetFields(105,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::Switch, __g_nametable1), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::Switch::__g_static_nametable1_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__New5_fn, 0, true, type, 0));
}

::g::Fuse::Controls::ToggleControl_type* Switch_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ToggleControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ToggleControl_typeof();
    options.FieldCount = 107;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Switch);
    options.TypeSize = sizeof(::g::Fuse::Controls::ToggleControl_type);
    type = (::g::Fuse::Controls::ToggleControl_type*)uClassType::New("Fuse.Controls.Switch", options);
    type->fp_build_ = Switch_build;
    type->fp_ctor_ = (void*)Switch__New5_fn;
    type->fp_cctor_ = Switch__cctor_5_fn;
    type->interface16.fp_OnValueChanged = (void(*)(uObject*, bool*))::g::Fuse::Controls::ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::ToggleControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::ToggleControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::ToggleControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::ToggleControl__remove_ValueChanged_fn;
    type->interface17.fp_Toggle = (void(*)(uObject*))::g::Fuse::Controls::ToggleControl__Toggle_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public Switch() :729
void Switch__ctor_8_fn(Switch* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :733
void Switch__InitializeUX_fn(Switch* __this)
{
    __this->InitializeUX();
}

// public Switch New() :729
void Switch__New5_fn(Switch** __retval)
{
    *__retval = Switch::New5();
}

uSStrong<uArray*> Switch::__g_static_nametable1_;

// public Switch() [instance] :729
void Switch::ctor_8()
{
    uStackFrame __("Fuse.Controls.Switch", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :733
void Switch::InitializeUX()
{
    uStackFrame __("Fuse.Controls.Switch", "InitializeUX()");
    Switch__Template* GraphicsAppearance = Switch__Template::New2(this, this);
    Switch__Template1* AndroidAppearance = Switch__Template1::New2(this, this);
    Switch__Template2* iOSAppearance = Switch__Template2::New2(this, this);
    __g_nametable1 = ::g::Uno::UX::NameTable::New1(NULL, Switch::__g_static_nametable1());
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    uPtr(__g_nametable1)->This(this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), GraphicsAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// public Switch New() [static] :729
Switch* Switch::New5()
{
    Switch* obj1 = (Switch*)uNew(Switch_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class TextControl.Template :457
// {
// static Template() :466
static void TextControl__Template__cctor__fn(uType* __type)
{
}

static void TextControl__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(::g::Fuse::Controls::TextControl__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(::g::Fuse::Controls::TextControl__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextControl__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TextControl_typeof(), ::g::Fuse::Controls::TextControl_typeof()));
}

::g::Uno::UX::Template_type* TextControl__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TextControl__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TextControl.Template", options);
    type->fp_build_ = TextControl__Template_build;
    type->fp_cctor_ = TextControl__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TextControl__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :461
void TextControl__Template__ctor_1_fn(TextControl__Template* __this, ::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :469
void TextControl__Template__New1_fn(TextControl__Template* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::TextView* __self1 = ::g::Fuse::Controls::Native::Android::TextView::New3();
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :461
void TextControl__Template__New2_fn(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance, TextControl__Template** __retval)
{
    *__retval = TextControl__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [instance] :461
void TextControl__Template::ctor_1(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [static] :461
TextControl__Template* TextControl__Template::New2(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    TextControl__Template* obj1 = (TextControl__Template*)uNew(TextControl__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template :521
// {
// static Template() :555
static void Switch__Template__cctor__fn(uType* __type)
{
    Switch__Template::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 8, ::STRINGS[129/*"swipe"*/], ::STRINGS[130/*"thumb"*/], ::STRINGS[131/*"thumbFill"*/], ::STRINGS[132/*"switch_thum...*/], ::STRINGS[133/*"switch_thum...*/], ::STRINGS[134/*"trackFill"*/], ::STRINGS[135/*"strokeColor"*/], ::STRINGS[10/*"GraphicsApp...*/]);
    Switch__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[136/*"IsActive"*/]);
    Switch__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
    Switch__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[137/*"Size"*/]);
    Switch__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[138/*"Distance"*/]);
    Switch__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[10/*"GraphicsApp...*/]);
    Switch__Template::__selector5_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[129/*"swipe"*/]);
    Switch__Template::__selector6_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[130/*"thumb"*/]);
    Switch__Template::__selector7_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[133/*"switch_thum...*/]);
}

static void Switch__Template_build(uType* type)
{
    ::STRINGS[129] = uString::Const("swipe");
    ::STRINGS[130] = uString::Const("thumb");
    ::STRINGS[131] = uString::Const("thumbFill");
    ::STRINGS[132] = uString::Const("switch_thumb_stroke");
    ::STRINGS[133] = uString::Const("switch_thumb_shadow");
    ::STRINGS[134] = uString::Const("trackFill");
    ::STRINGS[135] = uString::Const("strokeColor");
    ::STRINGS[10] = uString::Const("GraphicsAppearance");
    ::STRINGS[136] = uString::Const("IsActive");
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[137] = uString::Const("Size");
    ::STRINGS[138] = uString::Const("Distance");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[76] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[57] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[62] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Triggers::Actions::TriggerAction_typeof(), NULL);
    ::TYPES[2] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[112] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[113] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[120] = ::g::Uno::Collections::ICollection_typeof()->MakeType(uObject_typeof(), NULL);
    type->SetFields(2,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::Switch__Template, __g_nametable1), 0,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, strokeColor_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, swipe_IsActive_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, switch_thumb_shadow_Distance_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, switch_thumb_shadow_Size_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, switch_thumb_stroke_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, thumbFill_Color_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::Switch__Template, trackFill_Color_inst), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::Switch__Template::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector4_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector5_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector6_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Switch__Template::__selector7_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 21;
    options.ObjectSize = sizeof(Switch__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template", options);
    type->fp_build_ = Switch__Template_build;
    type->fp_cctor_ = Switch__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :525
void Switch__Template__ctor_1_fn(Switch__Template* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :558
void Switch__Template__New1_fn(Switch__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Reactive::This* temp = ::g::Fuse::Reactive::This::New1();
    ::g::Fuse::Gestures::SwipeGesture* swipe1 = ::g::Fuse::Gestures::SwipeGesture::New2();
    __this->swipe_IsActive_inst = ::g::FuseControlsPrimitives_FuseGesturesSwipeGesture_IsActive_Property::New1(swipe1, Switch__Template::__selector0());
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ToggleControl_Value::Singleton());
    __this->__g_nametable1 = ::g::Uno::UX::NameTable::New1(uPtr(__this->__parent1)->__g_nametable1, Switch__Template::__g_static_nametable1());
    ::g::Fuse::Drawing::SolidColor* trackFill1 = ::g::Fuse::Drawing::SolidColor::New2();
    __this->trackFill_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(trackFill1, Switch__Template::__selector1());
    ::g::Fuse::Drawing::SolidColor* thumbFill1 = ::g::Fuse::Drawing::SolidColor::New2();
    __this->thumbFill_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(thumbFill1, Switch__Template::__selector1());
    ::g::Fuse::Drawing::Stroke* switch_thumb_stroke1 = ::g::Fuse::Drawing::Stroke::New2();
    __this->switch_thumb_stroke_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Color_Property::New1(switch_thumb_stroke1, Switch__Template::__selector1());
    ::g::Fuse::Drawing::SolidColor* strokeColor1 = ::g::Fuse::Drawing::SolidColor::New2();
    __this->strokeColor_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingSolidColor_Color_Property::New1(strokeColor1, Switch__Template::__selector1());
    ::g::Fuse::Effects::DropShadow* switch_thumb_shadow1 = ::g::Fuse::Effects::DropShadow::New2();
    __this->switch_thumb_shadow_Size_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Size_Property::New1(switch_thumb_shadow1, Switch__Template::__selector2());
    __this->switch_thumb_shadow_Distance_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Distance_Property::New1(switch_thumb_shadow1, Switch__Template::__selector3());
    ::g::Fuse::Gestures::Tapped* temp2 = ::g::Fuse::Gestures::Tapped::New2();
    ::g::Fuse::Triggers::Actions::Toggle* temp3 = ::g::Fuse::Triggers::Actions::Toggle::New2();
    ::g::Fuse::Reactive::DataBinding* temp4 = ::g::Fuse::Reactive::DataBinding::New1(__this->swipe_IsActive_inst, (uObject*)temp1, __this->__g_nametable1, 3);
    ::g::Fuse::Gestures::SwipingAnimation* temp5 = ::g::Fuse::Gestures::SwipingAnimation::New2(swipe1);
    ::g::Fuse::Animations::Move* temp6 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Animations::Change* temp7 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->trackFill_Color_inst);
    ::g::Fuse::Controls::Circle* thumb1 = ::g::Fuse::Controls::Circle::New3();
    ::g::Fuse::Controls::Rectangle* temp8 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::Stroke* temp9 = ::g::Fuse::Drawing::Stroke::New2();
    ::g::Fuse::Triggers::WhileDisabled* temp10 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp11 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->thumbFill_Color_inst);
    ::g::Fuse::Animations::Change* temp12 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->trackFill_Color_inst);
    ::g::Fuse::Animations::Change* temp13 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->switch_thumb_stroke_Color_inst);
    ::g::Fuse::Animations::Change* temp14 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->strokeColor_Color_inst);
    ::g::Fuse::Animations::Change* temp15 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->switch_thumb_shadow_Size_inst);
    ::g::Fuse::Animations::Change* temp16 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->switch_thumb_shadow_Distance_inst);
    __self1->Width(::g::Uno::UX::Size__New1(50.0f, 1));
    __self1->Height(::g::Uno::UX::Size__New1(31.0f, 1));
    __self1->SnapToPixels(false);
    __self1->Name(Switch__Template::__selector4());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Actions()), ::TYPES[62/*Uno.Collections.ICollection<Fuse.Triggers.Actions.TriggerAction>*/]), temp3);
    temp3->Target((uObject*)__this->__parent1);
    swipe1->Type(1);
    swipe1->Direction(2);
    swipe1->Length(20.0f);
    swipe1->Name(Switch__Template::__selector5());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(swipe1->Bindings()), ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp4);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp7);
    temp6->X(20.0f);
    temp6->Target(thumb1);
    ::g::Fuse::Animations::Change__set_Value_fn(temp7, uCRef(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f)));
    temp7->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    thumb1->Width(::g::Uno::UX::Size__New1(27.0f, 1));
    thumb1->Height(::g::Uno::UX::Size__New1(27.0f, 1));
    thumb1->Alignment(9);
    thumb1->Margin(::g::Uno::Float4__New2(2.0f, 0.0f, 14.0f, 0.0f));
    thumb1->Name(Switch__Template::__selector6());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb1->Fills()), ::TYPES[112/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), thumbFill1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb1->Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), switch_thumb_stroke1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), switch_thumb_shadow1);
    thumbFill1->Color(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 1.0f));
    switch_thumb_stroke1->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    switch_thumb_stroke1->Width(1.0f);
    switch_thumb_shadow1->Size(1.0f);
    switch_thumb_shadow1->Angle(90.0f);
    switch_thumb_shadow1->Distance(0.0f);
    switch_thumb_shadow1->Spread(0.1f);
    switch_thumb_shadow1->Name(Switch__Template::__selector7());
    temp8->CornerRadius(::g::Uno::Float4__New2(27.0f, 27.0f, 27.0f, 27.0f));
    temp8->Width(::g::Uno::UX::Size__New1(51.0f, 1));
    temp8->Height(::g::Uno::UX::Size__New1(31.0f, 1));
    temp8->Alignment(10);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp8->Fills()), ::TYPES[112/*Uno.Collections.ICollection<Fuse.Drawing.Brush>*/]), trackFill1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp8->Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), temp9);
    trackFill1->Color(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f));
    temp9->Brush(strokeColor1);
    strokeColor1->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp11);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp12);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp13);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp14);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp15);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp16);
    ::g::Fuse::Animations::Change__set_Value_fn(temp11, uCRef(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f)));
    temp11->Duration(0.25);
    temp11->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp12, uCRef(::g::Uno::Float4__New2(0.9176471f, 0.9176471f, 0.9176471f, 1.0f)));
    temp12->Duration(0.25);
    temp12->Easing(::g::Fuse::Animations::Easing::QuadraticInOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp13, uCRef(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f)));
    temp13->Duration(0.25);
    temp13->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp14, uCRef(::g::Uno::Float4__New2(0.9176471f, 0.9176471f, 0.9176471f, 1.0f)));
    temp14->Duration(0.25);
    temp14->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp15, uCRef(0.0f));
    temp15->Duration(0.25);
    temp15->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Fuse::Animations::Change__set_Value_fn(temp16, uCRef(0.0f));
    temp16->Duration(0.25);
    temp16->Easing(::g::Fuse::Animations::Easing::QuadraticOut());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), swipe1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), thumb1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), thumbFill1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), switch_thumb_stroke1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), switch_thumb_shadow1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), trackFill1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), strokeColor1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), __self1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), swipe1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp5);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), thumb1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp8);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp10);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :525
void Switch__Template__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template** __retval)
{
    *__retval = Switch__Template::New2(parent, parentInstance);
}

uSStrong<uArray*> Switch__Template::__g_static_nametable1_;
::g::Uno::UX::Selector Switch__Template::__selector0_;
::g::Uno::UX::Selector Switch__Template::__selector1_;
::g::Uno::UX::Selector Switch__Template::__selector2_;
::g::Uno::UX::Selector Switch__Template::__selector3_;
::g::Uno::UX::Selector Switch__Template::__selector4_;
::g::Uno::UX::Selector Switch__Template::__selector5_;
::g::Uno::UX::Selector Switch__Template::__selector6_;
::g::Uno::UX::Selector Switch__Template::__selector7_;

// public Template(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :525
void Switch__Template::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[10/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :525
Switch__Template* Switch__Template::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template* obj1 = (Switch__Template*)uNew(Switch__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template :186
// {
// static Template() :208
static void Slider__Template__cctor__fn(uType* __type)
{
    Slider__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[16/*"Opacity"*/]);
    Slider__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[139/*"Fill"*/]);
    Slider__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[140/*"Brush"*/]);
    Slider__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[138/*"Distance"*/]);
    Slider__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[137/*"Size"*/]);
    Slider__Template::__selector5_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[10/*"GraphicsApp...*/]);
    Slider__Template::__selector6_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[130/*"thumb"*/]);
    Slider__Template::__selector7_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[141/*"thumb_circle"*/]);
    Slider__Template::__selector8_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[142/*"thumb_shadow"*/]);
    Slider__Template::__selector9_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[143/*"halo"*/]);
    Slider__Template::__selector10_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[144/*"scrubber_ri...*/]);
    Slider__Template::__selector11_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[145/*"scrubber_left"*/]);
}

static void Slider__Template_build(uType* type)
{
    ::STRINGS[16] = uString::Const("Opacity");
    ::STRINGS[139] = uString::Const("Fill");
    ::STRINGS[140] = uString::Const("Brush");
    ::STRINGS[138] = uString::Const("Distance");
    ::STRINGS[137] = uString::Const("Size");
    ::STRINGS[10] = uString::Const("GraphicsAppearance");
    ::STRINGS[130] = uString::Const("thumb");
    ::STRINGS[141] = uString::Const("thumb_circle");
    ::STRINGS[142] = uString::Const("thumb_shadow");
    ::STRINGS[143] = uString::Const("halo");
    ::STRINGS[144] = uString::Const("scrubber_right");
    ::STRINGS[145] = uString::Const("scrubber_left");
    ::TYPES[57] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[121] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[113] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, halo_Opacity_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, scrubber_left_Fill_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, thumb_circle_Fill_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, thumb_shadow_Distance_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, thumb_shadow_Size_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(::g::Fuse::Controls::Slider__Template, thumb_stroke_Brush_inst), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector10_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector11_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector4_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector5_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector6_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector7_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector8_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Slider__Template::__selector9_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 22;
    options.ObjectSize = sizeof(Slider__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template", options);
    type->fp_build_ = Slider__Template_build;
    type->fp_cctor_ = Slider__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :190
void Slider__Template__ctor_1_fn(Slider__Template* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :211
void Slider__Template__New1_fn(Slider__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Controls::Circle* halo1 = ::g::Fuse::Controls::Circle::New3();
    __this->halo_Opacity_inst = ::g::FuseControlsPrimitives_FuseElementsElement_Opacity_Property::New1(halo1, Slider__Template::__selector0());
    ::g::Fuse::Controls::Circle* thumb_circle1 = ::g::Fuse::Controls::Circle::New3();
    __this->thumb_circle_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(thumb_circle1, Slider__Template::__selector1());
    ::g::Fuse::Drawing::Stroke* thumb_stroke1 = ::g::Fuse::Drawing::Stroke::New2();
    __this->thumb_stroke_Brush_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Brush_Property::New1(thumb_stroke1, Slider__Template::__selector2());
    ::g::Fuse::Effects::DropShadow* thumb_shadow1 = ::g::Fuse::Effects::DropShadow::New2();
    __this->thumb_shadow_Distance_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Distance_Property::New1(thumb_shadow1, Slider__Template::__selector3());
    __this->thumb_shadow_Size_inst = ::g::FuseControlsPrimitives_FuseEffectsDropShadow_Size_Property::New1(thumb_shadow1, Slider__Template::__selector4());
    ::g::Fuse::Controls::Rectangle* scrubber_left1 = ::g::Fuse::Controls::Rectangle::New3();
    __this->scrubber_left_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(scrubber_left1, Slider__Template::__selector1());
    ::g::Fuse::Gestures::LinearRangeBehavior* temp = ::g::Fuse::Gestures::LinearRangeBehavior::New2();
    ::g::Fuse::Controls::Panel* thumb1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Drawing::StaticSolidColor* temp1 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.5921569f, 0.5921569f, 0.5921569f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp2 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp3 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.772549f, 0.772549f, 0.772549f, 1.0f));
    ::g::Fuse::Controls::Panel* temp4 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Controls::Rectangle* scrubber_right1 = ::g::Fuse::Controls::Rectangle::New3();
    ::g::Fuse::Drawing::StaticSolidColor* temp5 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f));
    ::g::Fuse::Drawing::StaticSolidColor* temp6 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f));
    ::g::Fuse::Triggers::ProgressAnimation* temp7 = ::g::Fuse::Triggers::ProgressAnimation::New2();
    ::g::Fuse::Animations::Move* temp8 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Animations::Move* temp9 = ::g::Fuse::Animations::Move::New2();
    ::g::Fuse::Triggers::WhileFocused* temp10 = ::g::Fuse::Triggers::WhileFocused::New2();
    ::g::Fuse::Animations::Change* temp11 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->halo_Opacity_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp12 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp13 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[121/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->thumb_circle_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp14 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9372549f, 0.9372549f, 0.9372549f, 1.0f));
    ::g::Fuse::Animations::Change* temp15 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[121/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->thumb_stroke_Brush_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp16 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.7882353f, 0.7882353f, 0.7882353f, 1.0f));
    ::g::Fuse::Animations::Change* temp17 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->thumb_shadow_Distance_inst);
    ::g::Fuse::Animations::Change* temp18 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->thumb_shadow_Size_inst);
    ::g::Fuse::Animations::Change* temp19 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[121/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], __this->scrubber_left_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp20 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.8352941f, 0.8352941f, 0.8352941f, 1.0f));
    __self1->HitTestMode(2);
    __self1->Margin(::g::Uno::Float4__New2(12.0f, 0.0f, 12.0f, 0.0f));
    __self1->SnapToPixels(false);
    __self1->Name(Slider__Template::__selector5());
    thumb1->HitTestMode(2);
    thumb1->Width(::g::Uno::UX::Size__New1(38.0f, 1));
    thumb1->Height(::g::Uno::UX::Size__New1(38.0f, 1));
    thumb1->Alignment(1);
    thumb1->Anchor(::g::Uno::UX::Size2__New1(::g::Uno::UX::Size__New1(50.0f, 4), ::g::Uno::UX::Size__New1(50.0f, 4)));
    thumb1->Name(Slider__Template::__selector6());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), thumb_circle1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), halo1);
    thumb_circle1->MaxHeight(::g::Uno::UX::Size__New1(23.0f, 1));
    thumb_circle1->Name(Slider__Template::__selector7());
    thumb_circle1->Fill(temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb_circle1->Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), thumb_stroke1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(thumb_circle1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), thumb_shadow1);
    thumb_stroke1->Width(1.0f);
    thumb_stroke1->Brush(temp1);
    thumb_shadow1->Size(1.0f);
    thumb_shadow1->Angle(90.0f);
    thumb_shadow1->Distance(0.0f);
    thumb_shadow1->Spread(0.1f);
    thumb_shadow1->Color(::g::Uno::Float4__New2(0.6039216f, 0.6039216f, 0.6039216f, 1.0f));
    thumb_shadow1->Name(Slider__Template::__selector8());
    halo1->Height(::g::Uno::UX::Size__New1(38.0f, 1));
    halo1->ClipToBounds(false);
    halo1->Opacity(0.0f);
    halo1->Name(Slider__Template::__selector9());
    halo1->Fill(temp3);
    temp4->ClipToBounds(true);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp4->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), scrubber_right1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp4->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), scrubber_left1);
    scrubber_right1->CornerRadius(::g::Uno::Float4__New2(2.0f, 2.0f, 2.0f, 2.0f));
    scrubber_right1->Height(::g::Uno::UX::Size__New1(2.0f, 1));
    scrubber_right1->Name(Slider__Template::__selector10());
    scrubber_right1->Fill(temp5);
    scrubber_left1->CornerRadius(::g::Uno::Float4__New2(2.0f, 2.0f, 2.0f, 2.0f));
    scrubber_left1->Height(::g::Uno::UX::Size__New1(2.0f, 1));
    scrubber_left1->Name(Slider__Template::__selector11());
    scrubber_left1->Fill(temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp7->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp8);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp7->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp9);
    temp8->X(1.0f);
    temp8->RelativeTo(::g::Fuse::TranslationModes::ParentSize());
    temp8->Target(thumb1);
    temp9->X(1.0f);
    temp9->RelativeTo(::g::Fuse::TranslationModes::ParentSize());
    temp9->Target(scrubber_right1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp10->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp11);
    ::g::Fuse::Animations::Change__set_Value_fn(temp11, uCRef(0.5f));
    temp11->Duration(0.3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp13);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp15);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp17);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp18);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp12->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp19);
    ::g::Fuse::Animations::Change__set_Value_fn(temp13, temp14);
    ::g::Fuse::Animations::Change__set_Value_fn(temp15, temp16);
    ::g::Fuse::Animations::Change__set_Value_fn(temp17, uCRef(0.0f));
    ::g::Fuse::Animations::Change__set_Value_fn(temp18, uCRef(0.0f));
    ::g::Fuse::Animations::Change__set_Value_fn(temp19, temp20);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), thumb1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp4);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp7);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp10);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp12);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :190
void Slider__Template__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template** __retval)
{
    *__retval = Slider__Template::New2(parent, parentInstance);
}

::g::Uno::UX::Selector Slider__Template::__selector0_;
::g::Uno::UX::Selector Slider__Template::__selector1_;
::g::Uno::UX::Selector Slider__Template::__selector10_;
::g::Uno::UX::Selector Slider__Template::__selector11_;
::g::Uno::UX::Selector Slider__Template::__selector2_;
::g::Uno::UX::Selector Slider__Template::__selector3_;
::g::Uno::UX::Selector Slider__Template::__selector4_;
::g::Uno::UX::Selector Slider__Template::__selector5_;
::g::Uno::UX::Selector Slider__Template::__selector6_;
::g::Uno::UX::Selector Slider__Template::__selector7_;
::g::Uno::UX::Selector Slider__Template::__selector8_;
::g::Uno::UX::Selector Slider__Template::__selector9_;

// public Template(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :190
void Slider__Template::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[10/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :190
Slider__Template* Slider__Template::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template* obj1 = (Slider__Template*)uNew(Slider__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.Template :9
// {
// static Template() :18
static void ScrollView__Template__cctor__fn(uType* __type)
{
}

static void ScrollView__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::ScrollView_typeof(), ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Uno::UX::Template_type* ScrollView__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(ScrollView__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.ScrollView.Template", options);
    type->fp_build_ = ScrollView__Template_build;
    type->fp_cctor_ = ScrollView__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))ScrollView__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :13
void ScrollView__Template__ctor_1_fn(ScrollView__Template* __this, ::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :21
void ScrollView__Template__New1_fn(ScrollView__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.ScrollView.Template", "New()");
    ::g::Fuse::Controls::Native::Android::ScrollView* __self1 = ::g::Fuse::Controls::Native::Android::ScrollView::New3((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :13
void ScrollView__Template__New2_fn(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance, ScrollView__Template** __retval)
{
    *__retval = ScrollView__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [instance] :13
void ScrollView__Template::ctor_1(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [static] :13
ScrollView__Template* ScrollView__Template::New2(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ScrollView__Template* obj1 = (ScrollView__Template*)uNew(ScrollView__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/.uno/ux11/$.uno
// ---------------------------------------------------------------------------------------------------------

// public partial sealed class GraphicsView.Template :37
// {
// static Template() :46
static void GraphicsView__Template__cctor__fn(uType* __type)
{
}

static void GraphicsView__Template_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(::g::Fuse::Controls::GraphicsView__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(::g::Fuse::Controls::GraphicsView__Template, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)GraphicsView__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::GraphicsView_typeof(), ::g::Fuse::Controls::GraphicsView_typeof()));
}

::g::Uno::UX::Template_type* GraphicsView__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(GraphicsView__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.GraphicsView.Template", options);
    type->fp_build_ = GraphicsView__Template_build;
    type->fp_cctor_ = GraphicsView__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))GraphicsView__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :41
void GraphicsView__Template__ctor_1_fn(GraphicsView__Template* __this, ::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :49
void GraphicsView__Template__New1_fn(GraphicsView__Template* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::SurfaceView* __self1 = ::g::Fuse::Controls::Native::Android::SurfaceView::New3();
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :41
void GraphicsView__Template__New2_fn(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance, GraphicsView__Template** __retval)
{
    *__retval = GraphicsView__Template::New2(parent, parentInstance);
}

// public Template(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [instance] :41
void GraphicsView__Template::ctor_1(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [static] :41
GraphicsView__Template* GraphicsView__Template::New2(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    GraphicsView__Template* obj1 = (GraphicsView__Template*)uNew(GraphicsView__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template :53
// {
// static Template() :71
static void Button__Template__cctor__fn(uType* __type)
{
    Button__Template::__g_static_nametable1_ = uArray::Init<uString*>(::TYPES[0/*string[]*/], 2, ::STRINGS[146/*"Button_Text"*/], ::STRINGS[10/*"GraphicsApp...*/]);
    Button__Template::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    Button__Template::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[147/*"TextColor"*/]);
    Button__Template::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[16/*"Opacity"*/]);
    Button__Template::__selector3_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[10/*"GraphicsApp...*/]);
    Button__Template::__selector4_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[146/*"Button_Text"*/]);
}

static void Button__Template_build(uType* type)
{
    ::STRINGS[146] = uString::Const("Button_Text");
    ::STRINGS[10] = uString::Const("GraphicsAppearance");
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[147] = uString::Const("TextColor");
    ::STRINGS[16] = uString::Const("Opacity");
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[76] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[57] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float_typeof(), NULL);
    ::TYPES[2] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    ::TYPES[120] = ::g::Uno::Collections::ICollection_typeof()->MakeType(uObject_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    type->SetFields(2,
        ::g::Uno::UX::NameTable_typeof(), offsetof(::g::Fuse::Controls::Button__Template, __g_nametable1), 0,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template, __parentInstance1), uFieldFlagsWeak,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float_typeof(), NULL), offsetof(::g::Fuse::Controls::Button__Template, Button_Text_Opacity_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::Button__Template, Button_Text_TextColor_inst), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::Button__Template, Button_Text_Value_inst), 0,
        ::TYPES[0/*string[]*/], (uintptr_t)&::g::Fuse::Controls::Button__Template::__g_static_nametable1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Button__Template::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Button__Template::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Button__Template::__selector2_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Button__Template::__selector3_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Button__Template::__selector4_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 14;
    options.ObjectSize = sizeof(Button__Template);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template", options);
    type->fp_build_ = Button__Template_build;
    type->fp_cctor_ = Button__Template__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template__New1_fn;
    return type;
}

// public Template(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :57
void Button__Template__ctor_1_fn(Button__Template* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :74
void Button__Template__New1_fn(Button__Template* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Button.Template", "New()");
    ::g::Fuse::Controls::Panel* __self1 = ::g::Fuse::Controls::Panel::New3();
    ::g::Fuse::Reactive::This* temp = ::g::Fuse::Reactive::This::New1();
    ::g::Fuse::Controls::Text* Button_Text1 = ::g::Fuse::Controls::Text::New3();
    __this->Button_Text_Value_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_Value_Property::New1(Button_Text1, Button__Template::__selector0());
    ::g::Fuse::Reactive::Property* temp1 = ::g::Fuse::Reactive::Property::New1(temp, ::g::FuseControlsPrimitives_accessor_Fuse_Controls_ButtonBase_Text::Singleton());
    __this->__g_nametable1 = ::g::Uno::UX::NameTable::New1(uPtr(__this->__parent1)->__g_nametable1, Button__Template::__g_static_nametable1());
    __this->Button_Text_TextColor_inst = ::g::FuseControlsPrimitives_FuseControlsTextControl_TextColor_Property::New1(Button_Text1, Button__Template::__selector1());
    __this->Button_Text_Opacity_inst = ::g::FuseControlsPrimitives_FuseElementsElement_Opacity_Property::New1(Button_Text1, Button__Template::__selector2());
    ::g::Fuse::Reactive::DataBinding* temp2 = ::g::Fuse::Reactive::DataBinding::New1(__this->Button_Text_Value_inst, (uObject*)temp1, __this->__g_nametable1, 3);
    ::g::Fuse::Gestures::WhilePressed* temp3 = ::g::Fuse::Gestures::WhilePressed::New2();
    ::g::Fuse::Animations::Change* temp4 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], __this->Button_Text_TextColor_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp5 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp6 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[57/*Fuse.Animations.Change<float>*/], __this->Button_Text_Opacity_inst);
    __self1->Name(Button__Template::__selector3());
    Button_Text1->FontSize(16.0f);
    Button_Text1->TextAlignment(1);
    Button_Text1->TextColor(::g::Uno::Float4__New2(0.3686275f, 0.6627451f, 0.9843137f, 1.0f));
    Button_Text1->Alignment(10);
    Button_Text1->Name(Button__Template::__selector4());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Button_Text1->Bindings()), ::TYPES[2/*Uno.Collections.ICollection<Fuse.Binding>*/]), temp2);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp3->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp4);
    ::g::Fuse::Animations::Change__set_Value_fn(temp4, uCRef(::g::Uno::Float4__New2(0.1411765f, 0.1411765f, 0.8f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp5->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp6);
    ::g::Fuse::Animations::Change__set_Value_fn(temp6, uCRef(0.5f));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), Button_Text1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(__this->__g_nametable1)->Objects()), ::TYPES[120/*Uno.Collections.ICollection<object>*/]), __self1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), Button_Text1);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__self1->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp5);
    return *__retval = __self1, void();
}

// public Template New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :57
void Button__Template__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template** __retval)
{
    *__retval = Button__Template::New2(parent, parentInstance);
}

uSStrong<uArray*> Button__Template::__g_static_nametable1_;
::g::Uno::UX::Selector Button__Template::__selector0_;
::g::Uno::UX::Selector Button__Template::__selector1_;
::g::Uno::UX::Selector Button__Template::__selector2_;
::g::Uno::UX::Selector Button__Template::__selector3_;
::g::Uno::UX::Selector Button__Template::__selector4_;

// public Template(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :57
void Button__Template::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[10/*"GraphicsApp...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :57
Button__Template* Button__Template::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template* obj1 = (Button__Template*)uNew(Button__Template_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class TextControl.Template1 :476
// {
// static Template1() :485
static void TextControl__Template1__cctor__fn(uType* __type)
{
}

static void TextControl__Template1_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(::g::Fuse::Controls::TextControl__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::TextControl_typeof(), offsetof(::g::Fuse::Controls::TextControl__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextControl__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::TextControl_typeof(), ::g::Fuse::Controls::TextControl_typeof()));
}

::g::Uno::UX::Template_type* TextControl__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(TextControl__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.TextControl.Template1", options);
    type->fp_build_ = TextControl__Template1_build;
    type->fp_cctor_ = TextControl__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))TextControl__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :480
void TextControl__Template1__ctor_1_fn(TextControl__Template1* __this, ::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :488
void TextControl__Template1__New1_fn(TextControl__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::TextView* __self1 = ::g::Fuse::Controls::Native::iOS::TextView::New1();
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) :480
void TextControl__Template1__New2_fn(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance, TextControl__Template1** __retval)
{
    *__retval = TextControl__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [instance] :480
void TextControl__Template1::ctor_1(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.TextControl parent, Fuse.Controls.TextControl parentInstance) [static] :480
TextControl__Template1* TextControl__Template1::New2(::g::Fuse::Controls::TextControl* parent, ::g::Fuse::Controls::TextControl* parentInstance)
{
    TextControl__Template1* obj1 = (TextControl__Template1*)uNew(TextControl__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template1 :685
// {
// static Template1() :694
static void Switch__Template1__cctor__fn(uType* __type)
{
}

static void Switch__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Switch__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template1", options);
    type->fp_build_ = Switch__Template1_build;
    type->fp_cctor_ = Switch__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :689
void Switch__Template1__ctor_1_fn(Switch__Template1* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :697
void Switch__Template1__New1_fn(Switch__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template1", "New()");
    ::g::Fuse::Controls::Native::Android::Switch* __self1 = ::g::Fuse::Controls::Native::Android::Switch::New3((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :689
void Switch__Template1__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template1** __retval)
{
    *__retval = Switch__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :689
void Switch__Template1::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :689
Switch__Template1* Switch__Template1::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template1* obj1 = (Switch__Template1*)uNew(Switch__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.ScrollView/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class ScrollView.Template1 :28
// {
// static Template1() :37
static void ScrollView__Template1__cctor__fn(uType* __type)
{
}

static void ScrollView__Template1_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::ScrollView_typeof(), offsetof(::g::Fuse::Controls::ScrollView__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)ScrollView__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::ScrollView_typeof(), ::g::Fuse::Controls::ScrollView_typeof()));
}

::g::Uno::UX::Template_type* ScrollView__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(ScrollView__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.ScrollView.Template1", options);
    type->fp_build_ = ScrollView__Template1_build;
    type->fp_cctor_ = ScrollView__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))ScrollView__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :32
void ScrollView__Template1__ctor_1_fn(ScrollView__Template1* __this, ::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :40
void ScrollView__Template1__New1_fn(ScrollView__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.ScrollView.Template1", "New()");
    ::g::Fuse::Controls::Native::iOS::ScrollView* __self1 = ::g::Fuse::Controls::Native::iOS::ScrollView::New1((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) :32
void ScrollView__Template1__New2_fn(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance, ScrollView__Template1** __retval)
{
    *__retval = ScrollView__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [instance] :32
void ScrollView__Template1::ctor_1(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.ScrollView parent, Fuse.Controls.ScrollView parentInstance) [static] :32
ScrollView__Template1* ScrollView__Template1::New2(::g::Fuse::Controls::ScrollView* parent, ::g::Fuse::Controls::ScrollView* parentInstance)
{
    ScrollView__Template1* obj1 = (ScrollView__Template1*)uNew(ScrollView__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template1 :114
// {
// static Template1() :123
static void Button__Template1__cctor__fn(uType* __type)
{
}

static void Button__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Button__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template1", options);
    type->fp_build_ = Button__Template1_build;
    type->fp_cctor_ = Button__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :118
void Button__Template1__ctor_1_fn(Button__Template1* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :126
void Button__Template1__New1_fn(Button__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::Android::Button* __self1 = ::g::Fuse::Controls::Native::Android::Button::New3();
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :118
void Button__Template1__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template1** __retval)
{
    *__retval = Button__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :118
void Button__Template1::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :118
Button__Template1* Button__Template1::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template1* obj1 = (Button__Template1*)uNew(Button__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template1 :332
// {
// static Template1() :341
static void Slider__Template1__cctor__fn(uType* __type)
{
}

static void Slider__Template1_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Slider__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template1", options);
    type->fp_build_ = Slider__Template1_build;
    type->fp_cctor_ = Slider__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :336
void Slider__Template1__ctor_1_fn(Slider__Template1* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :344
void Slider__Template1__New1_fn(Slider__Template1* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template1", "New()");
    ::g::Fuse::Controls::Native::Android::Slider* __self1 = ::g::Fuse::Controls::Native::Android::Slider::New3((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :336
void Slider__Template1__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template1** __retval)
{
    *__retval = Slider__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :336
void Slider__Template1::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[0/*"AndroidAppe...*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :336
Slider__Template1* Slider__Template1::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template1* obj1 = (Slider__Template1*)uNew(Slider__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/.uno/ux11/$.uno
// ---------------------------------------------------------------------------------------------------------

// public partial sealed class GraphicsView.Template1 :56
// {
// static Template1() :65
static void GraphicsView__Template1__cctor__fn(uType* __type)
{
}

static void GraphicsView__Template1_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(::g::Fuse::Controls::GraphicsView__Template1, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::GraphicsView_typeof(), offsetof(::g::Fuse::Controls::GraphicsView__Template1, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)GraphicsView__Template1__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::GraphicsView_typeof(), ::g::Fuse::Controls::GraphicsView_typeof()));
}

::g::Uno::UX::Template_type* GraphicsView__Template1_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(GraphicsView__Template1);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.GraphicsView.Template1", options);
    type->fp_build_ = GraphicsView__Template1_build;
    type->fp_cctor_ = GraphicsView__Template1__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))GraphicsView__Template1__New1_fn;
    return type;
}

// public Template1(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :60
void GraphicsView__Template1__ctor_1_fn(GraphicsView__Template1* __this, ::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :68
void GraphicsView__Template1__New1_fn(GraphicsView__Template1* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::GraphicsView* __self1 = ::g::Fuse::Controls::Native::iOS::GraphicsView::New1(__this->__parent1);
    return *__retval = __self1, void();
}

// public Template1 New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) :60
void GraphicsView__Template1__New2_fn(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance, GraphicsView__Template1** __retval)
{
    *__retval = GraphicsView__Template1::New2(parent, parentInstance);
}

// public Template1(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [instance] :60
void GraphicsView__Template1::ctor_1(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template1 New(Fuse.Controls.GraphicsView parent, Fuse.Controls.GraphicsView parentInstance) [static] :60
GraphicsView__Template1* GraphicsView__Template1::New2(::g::Fuse::Controls::GraphicsView* parent, ::g::Fuse::Controls::GraphicsView* parentInstance)
{
    GraphicsView__Template1* obj1 = (GraphicsView__Template1*)uNew(GraphicsView__Template1_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Slider.Template2 :351
// {
// static Template2() :360
static void Slider__Template2__cctor__fn(uType* __type)
{
}

static void Slider__Template2_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Slider_typeof(), offsetof(::g::Fuse::Controls::Slider__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Slider__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Slider_typeof(), ::g::Fuse::Controls::Slider_typeof()));
}

::g::Uno::UX::Template_type* Slider__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Slider__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Slider.Template2", options);
    type->fp_build_ = Slider__Template2_build;
    type->fp_cctor_ = Slider__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Slider__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :355
void Slider__Template2__ctor_1_fn(Slider__Template2* __this, ::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :363
void Slider__Template2__New1_fn(Slider__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Slider.Template2", "New()");
    ::g::Fuse::Controls::Native::iOS::Slider* __self1 = ::g::Fuse::Controls::Native::iOS::Slider::New1((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) :355
void Slider__Template2__New2_fn(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance, Slider__Template2** __retval)
{
    *__retval = Slider__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [instance] :355
void Slider__Template2::ctor_1(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Slider parent, Fuse.Controls.Slider parentInstance) [static] :355
Slider__Template2* Slider__Template2::New2(::g::Fuse::Controls::Slider* parent, ::g::Fuse::Controls::Slider* parentInstance)
{
    Slider__Template2* obj1 = (Slider__Template2*)uNew(Slider__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Switch.Template2 :704
// {
// static Template2() :713
static void Switch__Template2__cctor__fn(uType* __type)
{
}

static void Switch__Template2_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Switch_typeof(), offsetof(::g::Fuse::Controls::Switch__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Switch__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Switch_typeof(), ::g::Fuse::Controls::Switch_typeof()));
}

::g::Uno::UX::Template_type* Switch__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Switch__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Switch.Template2", options);
    type->fp_build_ = Switch__Template2_build;
    type->fp_cctor_ = Switch__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Switch__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :708
void Switch__Template2__ctor_1_fn(Switch__Template2* __this, ::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :716
void Switch__Template2__New1_fn(Switch__Template2* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.Switch.Template2", "New()");
    ::g::Fuse::Controls::Native::iOS::Switch* __self1 = ::g::Fuse::Controls::Native::iOS::Switch::New1((uObject*)__this->__parent1);
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) :708
void Switch__Template2__New2_fn(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance, Switch__Template2** __retval)
{
    *__retval = Switch__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [instance] :708
void Switch__Template2::ctor_1(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Switch parent, Fuse.Controls.Switch parentInstance) [static] :708
Switch__Template2* Switch__Template2::New2(::g::Fuse::Controls::Switch* parent, ::g::Fuse::Controls::Switch* parentInstance)
{
    Switch__Template2* obj1 = (Switch__Template2*)uNew(Switch__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/.uno/ux11/$.uno
// -------------------------------------------------------------------------------------------------------------

// public partial sealed class Button.Template2 :133
// {
// static Template2() :142
static void Button__Template2__cctor__fn(uType* __type)
{
}

static void Button__Template2_build(uType* type)
{
    ::STRINGS[36] = uString::Const("iOSAppearance");
    type->SetFields(2,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template2, __parent1), uFieldFlagsWeak,
        ::g::Fuse::Controls::Button_typeof(), offsetof(::g::Fuse::Controls::Button__Template2, __parentInstance1), uFieldFlagsWeak);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)Button__Template2__New2_fn, 0, true, type, 2, ::g::Fuse::Controls::Button_typeof(), ::g::Fuse::Controls::Button_typeof()));
}

::g::Uno::UX::Template_type* Button__Template2_typeof()
{
    static uSStrong< ::g::Uno::UX::Template_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::UX::Template_typeof();
    options.FieldCount = 4;
    options.ObjectSize = sizeof(Button__Template2);
    options.TypeSize = sizeof(::g::Uno::UX::Template_type);
    type = (::g::Uno::UX::Template_type*)uClassType::New("Fuse.Controls.Button.Template2", options);
    type->fp_build_ = Button__Template2_build;
    type->fp_cctor_ = Button__Template2__cctor__fn;
    type->fp_New1 = (void(*)(::g::Uno::UX::Template*, uObject**))Button__Template2__New1_fn;
    return type;
}

// public Template2(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :137
void Button__Template2__ctor_1_fn(Button__Template2* __this, ::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    __this->ctor_1(parent, parentInstance);
}

// public override sealed object New() :145
void Button__Template2__New1_fn(Button__Template2* __this, uObject** __retval)
{
    ::g::Fuse::Controls::Native::iOS::Button* __self1 = ::g::Fuse::Controls::Native::iOS::Button::New1();
    return *__retval = __self1, void();
}

// public Template2 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) :137
void Button__Template2__New2_fn(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance, Button__Template2** __retval)
{
    *__retval = Button__Template2::New2(parent, parentInstance);
}

// public Template2(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [instance] :137
void Button__Template2::ctor_1(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    ctor_(::STRINGS[36/*"iOSAppearance"*/], false);
    __parent1 = parent;
    __parentInstance1 = parentInstance;
}

// public Template2 New(Fuse.Controls.Button parent, Fuse.Controls.Button parentInstance) [static] :137
Button__Template2* Button__Template2::New2(::g::Fuse::Controls::Button* parent, ::g::Fuse::Controls::Button* parentInstance)
{
    Button__Template2* obj1 = (Button__Template2*)uNew(Button__Template2_typeof());
    obj1->ctor_1(parent, parentInstance);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public class Text :1744
// {
static void Text_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface15));
    type->SetFields(104);
    type->Reflection.SetFunctions(3,
        new uFunction("get_LoadAsync", NULL, (void*)Text__get_LoadAsync_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_LoadAsync", NULL, (void*)Text__set_LoadAsync_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Text__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextControl_type* Text_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextControl_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(Text);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextControl_type);
    type = (::g::Fuse::Controls::TextControl_type*)uClassType::New("Fuse.Controls.Text", options);
    type->fp_build_ = Text_build;
    type->fp_ctor_ = (void*)Text__New3_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Text() :1744
void Text__ctor_7_fn(Text* __this)
{
    __this->ctor_7();
}

// public bool get_LoadAsync() :1778
void Text__get_LoadAsync_fn(Text* __this, bool* __retval)
{
    *__retval = __this->LoadAsync();
}

// public void set_LoadAsync(bool value) :1779
void Text__set_LoadAsync_fn(Text* __this, bool* value)
{
    __this->LoadAsync(*value);
}

// public generated Text New() :1744
void Text__New3_fn(Text** __retval)
{
    *__retval = Text::New3();
}

// public generated Text() [instance] :1744
void Text::ctor_7()
{
    ctor_6();
}

// public bool get_LoadAsync() [instance] :1778
bool Text::LoadAsync()
{
    return InternalLoadAsync();
}

// public void set_LoadAsync(bool value) [instance] :1779
void Text::LoadAsync(bool value)
{
    uStackFrame __("Fuse.Controls.Text", "set_LoadAsync(bool)");
    InternalLoadAsync(value);
}

// public generated Text New() [static] :1744
Text* Text::New3()
{
    Text* obj1 = (Text*)uNew(Text_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextAlignment :821
uEnumType* TextAlignment_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextAlignment", ::g::Uno::Int_typeof(), 3);
    type->SetLiterals(
        "Left", 0LL,
        "Center", 1LL,
        "Right", 2LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public sealed class TextBlock :1791
// {
static void TextBlock_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextControl_type, interface15));
    type->SetFields(104);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextBlock__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextControl_type* TextBlock_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Text_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(TextBlock);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextControl_type);
    type = (::g::Fuse::Controls::TextControl_type*)uClassType::New("Fuse.Controls.TextBlock", options);
    type->fp_build_ = TextBlock_build;
    type->fp_ctor_ = (void*)TextBlock__New4_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated TextBlock() :1791
void TextBlock__ctor_8_fn(TextBlock* __this)
{
    __this->ctor_8();
}

// public generated TextBlock New() :1791
void TextBlock__New4_fn(TextBlock** __retval)
{
    *__retval = TextBlock::New4();
}

// public generated TextBlock() [instance] :1791
void TextBlock::ctor_8()
{
    ctor_7();
}

// public generated TextBlock New() [static] :1791
TextBlock* TextBlock::New4()
{
    TextBlock* obj1 = (TextBlock*)uNew(TextBlock_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public partial sealed class TextBox :1807
// {
// static TextBox() :401
static void TextBox__cctor_3_fn(uType* __type)
{
    TextBox::__selector0_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
    TextBox::__selector1_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[139/*"Fill"*/]);
    TextBox::__selector2_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[148/*"text_box"*/]);
}

static void TextBox_build(uType* type)
{
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[139] = uString::Const("Fill");
    ::STRINGS[148] = uString::Const("text_box");
    ::TYPES[76] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL);
    ::TYPES[121] = ::g::Fuse::Animations::Change_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL);
    ::TYPES[113] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Drawing::Stroke_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[25] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Animations::Animator_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(::g::Fuse::Controls::TextInput_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInput_type, interface15),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(::g::Fuse::Controls::TextInput_type, interface16));
    type->SetFields(98,
        ::g::Fuse::Drawing::Stroke_typeof(), offsetof(::g::Fuse::Controls::TextBox, stroke), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Uno::Float4_typeof(), NULL), offsetof(::g::Fuse::Controls::TextBox, stroke_Color_inst), 0,
        ::g::Fuse::Controls::Rectangle_typeof(), offsetof(::g::Fuse::Controls::TextBox, text_box), 0,
        ::g::Uno::UX::Property1_typeof()->MakeType(::g::Fuse::Drawing::Brush_typeof(), NULL), offsetof(::g::Fuse::Controls::TextBox, text_box_Fill_inst), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextBox::__selector0_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextBox::__selector1_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextBox::__selector2_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextBox__New4_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextInput_type* TextBox_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextInput_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInput_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(TextBox);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextInput_type);
    type = (::g::Fuse::Controls::TextInput_type*)uClassType::New("Fuse.Controls.TextBox", options);
    type->fp_build_ = TextBox_build;
    type->fp_ctor_ = (void*)TextBox__New4_fn;
    type->fp_cctor_ = TextBox__cctor_3_fn;
    type->interface16.fp_get_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextInput__get_IsPassword_fn;
    type->interface16.fp_set_IsPassword = (void(*)(uObject*, bool*))::g::Fuse::Controls::TextInput__set_IsPassword_fn;
    type->interface16.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInput__add_ActionTriggered_fn;
    type->interface16.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInput__remove_ActionTriggered_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextBox() :405
void TextBox__ctor_8_fn(TextBox* __this)
{
    __this->ctor_8();
}

// private void InitializeUX() :409
void TextBox__InitializeUX_fn(TextBox* __this)
{
    __this->InitializeUX();
}

// public TextBox New() :405
void TextBox__New4_fn(TextBox** __retval)
{
    *__retval = TextBox::New4();
}

::g::Uno::UX::Selector TextBox::__selector0_;
::g::Uno::UX::Selector TextBox::__selector1_;
::g::Uno::UX::Selector TextBox::__selector2_;

// public TextBox() [instance] :405
void TextBox::ctor_8()
{
    uStackFrame __("Fuse.Controls.TextBox", ".ctor()");
    ctor_7();
    InitializeUX();
}

// private void InitializeUX() [instance] :409
void TextBox::InitializeUX()
{
    uStackFrame __("Fuse.Controls.TextBox", "InitializeUX()");
    stroke = ::g::Fuse::Drawing::Stroke::New2();
    stroke_Color_inst = ::g::FuseControlsPrimitives_FuseDrawingStroke_Color_Property::New1(stroke, TextBox::__selector0());
    text_box = ::g::Fuse::Controls::Rectangle::New3();
    text_box_Fill_inst = ::g::FuseControlsPrimitives_FuseControlsShape_Fill_Property::New1(text_box, TextBox::__selector1());
    ::g::Fuse::Triggers::WhileFocusWithin* temp = ::g::Fuse::Triggers::WhileFocusWithin::New2();
    ::g::Fuse::Animations::Change* temp1 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], stroke_Color_inst);
    ::g::Fuse::Triggers::WhileDisabled* temp2 = ::g::Fuse::Triggers::WhileDisabled::New2();
    ::g::Fuse::Animations::Change* temp3 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[121/*Fuse.Animations.Change<Fuse.Drawing.Brush>*/], text_box_Fill_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp4 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(0.9647059f, 0.9647059f, 0.9647059f, 1.0f));
    ::g::Fuse::Animations::Change* temp5 = (::g::Fuse::Animations::Change*)::g::Fuse::Animations::Change::New2(::TYPES[76/*Fuse.Animations.Change<float4>*/], stroke_Color_inst);
    ::g::Fuse::Drawing::StaticSolidColor* temp6 = ::g::Fuse::Drawing::StaticSolidColor::New2(::g::Uno::Float4__New2(1.0f, 1.0f, 1.0f, 0.0f));
    Padding(::g::Uno::Float4__New2(6.0f, 6.0f, 6.0f, 6.0f));
    uPtr(text_box)->CornerRadius(::g::Uno::Float4__New2(4.0f, 4.0f, 4.0f, 4.0f));
    uPtr(text_box)->Layer(1);
    uPtr(text_box)->Name(TextBox::__selector2());
    uPtr(text_box)->Fill(temp6);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Strokes()), ::TYPES[113/*Uno.Collections.ICollection<Fuse.Drawing.Stroke>*/]), stroke);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(uPtr(text_box)->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), temp2);
    uPtr(stroke)->Color(::g::Uno::Float4__New2(0.8078431f, 0.8078431f, 0.8078431f, 1.0f));
    uPtr(stroke)->Width(1.0f);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp1);
    ::g::Fuse::Animations::Change__set_Value_fn(temp1, uCRef(::g::Uno::Float4__New2(0.6588235f, 0.6588235f, 0.6588235f, 1.0f)));
    temp1->Duration(0.3);
    temp1->Easing(::g::Fuse::Animations::Easing::BackOut());
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp3);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(temp2->Animators()), ::TYPES[25/*Uno.Collections.ICollection<Fuse.Animations.Animator>*/]), temp5);
    ::g::Fuse::Animations::Change__set_Value_fn(temp3, temp4);
    ::g::Fuse::Animations::Change__set_Value_fn(temp5, uCRef(::g::Uno::Float4__New2(0.8941177f, 0.8941177f, 0.8941177f, 1.0f)));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), text_box);
}

// public TextBox New() [static] :405
TextBox* TextBox::New4()
{
    TextBox* obj1 = (TextBox*)uNew(TextBox_typeof());
    obj1->ctor_8();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public interfacemodifiers class TextControl :1821
// {
// static TextControl() :494
static void TextControl__cctor_3_fn(uType* __type)
{
    TextControl::ValuePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
    TextControl::MaxLengthPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[149/*"MaxLength"*/]);
    TextControl::TextWrappingPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[150/*"TextWrapping"*/]);
    TextControl::LineSpacingPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[151/*"LineSpacing"*/]);
    TextControl::FontSizePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[152/*"FontSize"*/]);
    TextControl::FontPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[153/*"Font"*/]);
    TextControl::TextAlignmentPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[154/*"TextAlignment"*/]);
    TextControl::ColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[84/*"Color"*/]);
    TextControl::TextColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[147/*"TextColor"*/]);
    TextControl::TextTruncationPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[155/*"TextTruncat...*/]);
    TextControl::LoadAsyncPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[156/*"LoadAsync"*/]);
}

static void TextControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::STRINGS[149] = uString::Const("MaxLength");
    ::STRINGS[150] = uString::Const("TextWrapping");
    ::STRINGS[151] = uString::Const("LineSpacing");
    ::STRINGS[152] = uString::Const("FontSize");
    ::STRINGS[153] = uString::Const("Font");
    ::STRINGS[154] = uString::Const("TextAlignment");
    ::STRINGS[84] = uString::Const("Color");
    ::STRINGS[147] = uString::Const("TextColor");
    ::STRINGS[155] = uString::Const("TextTruncation");
    ::STRINGS[156] = uString::Const("LoadAsync");
    ::STRINGS[23] = uString::Const("");
    ::TYPES[122] = ::g::Fuse::Controls::ITextRenderer_typeof();
    ::TYPES[123] = ::g::Fuse::Controls::Native::ITextView_typeof();
    ::TYPES[4] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Uno::UX::Template_typeof(), NULL);
    ::TYPES[124] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<float>*/, ::g::Uno::Float_typeof(), NULL);
    ::TYPES[125] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<float>*/, ::g::Uno::Float_typeof(), NULL);
    ::TYPES[126] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextAlignment>*/, ::g::Fuse::Controls::TextAlignment_typeof(), NULL);
    ::TYPES[127] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextAlignment>*/, ::g::Fuse::Controls::TextAlignment_typeof(), NULL);
    ::TYPES[128] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[129] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[130] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextWrapping>*/, ::g::Fuse::Controls::TextWrapping_typeof(), NULL);
    ::TYPES[131] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextWrapping>*/, ::g::Fuse::Controls::TextWrapping_typeof(), NULL);
    ::TYPES[132] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextControl_type, interface15));
    type->SetFields(96,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::TextControl, _color), 0,
        ::g::Fuse::Font_typeof(), offsetof(::g::Fuse::Controls::TextControl, _font), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::TextControl, _fontSize), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::TextControl, _loadAsync), 0,
        ::g::Uno::Int_typeof(), offsetof(::g::Fuse::Controls::TextControl, _maxLength), 0,
        ::TYPES[122/*Fuse.Controls.ITextRenderer*/], offsetof(::g::Fuse::Controls::TextControl, _textRenderer), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::TextControl, _value), 0,
        ::TYPES[132/*Uno.UX.ValueChangedHandler<string>*/], offsetof(::g::Fuse::Controls::TextControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::ColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::FontPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::FontSizePropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::LineSpacingPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::LoadAsyncPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::MaxLengthPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::TextAlignmentPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::TextColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::TextTruncationPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::TextWrappingPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextControl::ValuePropertyName_, uFieldFlagsStatic,
        ::g::Uno::Func1_typeof()->MakeType(type, ::TYPES[122/*Fuse.Controls.ITextRenderer*/], NULL), (uintptr_t)&::g::Fuse::Controls::TextControl::_TextRendererFactory_, uFieldFlagsStatic);
    type->Reflection.SetFields(11,
        new uField("ColorPropertyName", 104),
        new uField("FontPropertyName", 105),
        new uField("FontSizePropertyName", 106),
        new uField("LineSpacingPropertyName", 107),
        new uField("LoadAsyncPropertyName", 108),
        new uField("MaxLengthPropertyName", 109),
        new uField("TextAlignmentPropertyName", 110),
        new uField("TextColorPropertyName", 111),
        new uField("TextTruncationPropertyName", 112),
        new uField("TextWrappingPropertyName", 113),
        new uField("ValuePropertyName", 114));
    type->Reflection.SetFunctions(24,
        new uFunction("get_Color", NULL, (void*)TextControl__get_Color_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Color", NULL, (void*)TextControl__set_Color_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Font", NULL, (void*)TextControl__get_Font_fn, 0, false, ::g::Fuse::Font_typeof(), 0),
        new uFunction("set_Font", NULL, (void*)TextControl__set_Font_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Font_typeof()),
        new uFunction("get_FontSize", NULL, (void*)TextControl__get_FontSize_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_FontSize", NULL, (void*)TextControl__set_FontSize_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_LineSpacing", NULL, (void*)TextControl__get_LineSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LineSpacing", NULL, (void*)TextControl__set_LineSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_MaxLength", NULL, (void*)TextControl__get_MaxLength_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_MaxLength", NULL, (void*)TextControl__set_MaxLength_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("SetColor", NULL, (void*)TextControl__SetColor_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Float4_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("SetValue", NULL, (void*)TextControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_TextAlignment", NULL, (void*)TextControl__get_TextAlignment_fn, 0, false, ::g::Fuse::Controls::TextAlignment_typeof(), 0),
        new uFunction("set_TextAlignment", NULL, (void*)TextControl__set_TextAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextAlignment_typeof()),
        new uFunction("get_TextColor", NULL, (void*)TextControl__get_TextColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_TextColor", NULL, (void*)TextControl__set_TextColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_TextTruncation", NULL, NULL, offsetof(TextControl_type, fp_get_TextTruncation), false, ::g::Fuse::Controls::TextTruncation_typeof(), 0),
        new uFunction("set_TextTruncation", NULL, NULL, offsetof(TextControl_type, fp_set_TextTruncation), false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextTruncation_typeof()),
        new uFunction("get_TextWrapping", NULL, (void*)TextControl__get_TextWrapping_fn, 0, false, ::g::Fuse::Controls::TextWrapping_typeof(), 0),
        new uFunction("set_TextWrapping", NULL, (void*)TextControl__set_TextWrapping_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextWrapping_typeof()),
        new uFunction("get_Value", NULL, (void*)TextControl__get_Value_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)TextControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)TextControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[132/*Uno.UX.ValueChangedHandler<string>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)TextControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[132/*Uno.UX.ValueChangedHandler<string>*/]));
}

TextControl_type* TextControl_typeof()
{
    static uSStrong<TextControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 116;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(TextControl);
    options.TypeSize = sizeof(TextControl_type);
    type = (TextControl_type*)uClassType::New("Fuse.Controls.TextControl", options);
    type->fp_build_ = TextControl_build;
    type->fp_cctor_ = TextControl__cctor_3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))TextControl__ArrangePaddingBox_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextControl__CalcRenderBounds_fn;
    type->fp_DrawVisual = (void(*)(::g::Fuse::Controls::Control*, ::g::Fuse::DrawContext*))TextControl__DrawVisual_fn;
    type->fp_FastTrackDrawWithOpacity = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::DrawContext*, bool*))TextControl__FastTrackDrawWithOpacity_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))TextControl__GetContentSize_fn;
    type->fp_get_HitTestLocalVisualBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextControl__get_HitTestLocalVisualBounds_fn;
    type->fp_InvalidateRenderer = TextControl__InvalidateRenderer_fn;
    type->fp_OnHitTestLocalVisual = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::HitTestContext*))TextControl__OnHitTestLocalVisual_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TextControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TextControl__OnUnrooted_fn;
    type->fp_OnValueChanged = TextControl__OnValueChanged_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))TextControl__PushPropertiesToNativeView_fn;
    type->fp_get_RenderValue = TextControl__get_RenderValue_fn;
    type->fp_SoftDispose = (void(*)(::g::Fuse::Node*))TextControl__SoftDispose_fn;
    type->fp_get_TextTruncation = TextControl__get_TextTruncation_fn;
    type->fp_set_TextTruncation = TextControl__set_TextTruncation_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))TextControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))TextControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))TextControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))TextControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextControl() :498
void TextControl__ctor_6_fn(TextControl* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :2064
void TextControl__ArrangePaddingBox_fn(TextControl* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.TextControl", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::LayoutControl__ArrangePaddingBox_fn(__this, uCRef(lp_));

    if (__this->_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::Arrange(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]), ::g::Uno::Float2__New1(0.0f), lp_.Size());
}

// protected override Fuse.VisualBounds CalcRenderBounds() :2108
void TextControl__CalcRenderBounds_fn(TextControl* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret3;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__CalcRenderBounds_fn(__this, &ret3), ret3);

    if (__this->_textRenderer != NULL)
        b = uPtr(b)->AddRect1(::g::Fuse::Controls::ITextRenderer::GetRenderBounds(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/])));

    return *__retval = b, void();
}

// public float4 get_Color() :2310
void TextControl__get_Color_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Color();
}

// public void set_Color(float4 value) :2311
void TextControl__set_Color_fn(TextControl* __this, ::g::Uno::Float4* value)
{
    __this->Color(*value);
}

// protected override sealed void DrawVisual(Fuse.DrawContext dc) :2081
void TextControl__DrawVisual_fn(TextControl* __this, ::g::Fuse::DrawContext* dc)
{
    uStackFrame __("Fuse.Controls.TextControl", "DrawVisual(Fuse.DrawContext)");
    uString* str = __this->RenderValue();

    if ((__this->_textRenderer != NULL) && !::g::Uno::String::IsNullOrEmpty(str))
        ::g::Fuse::Controls::ITextRenderer::Draw(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]), dc, __this);
}

// private bool EnforceMaxLength(string& v) :2209
void TextControl__EnforceMaxLength_fn(TextControl* __this, uString** v, bool* __retval)
{
    *__retval = __this->EnforceMaxLength(v);
}

// protected override sealed bool FastTrackDrawWithOpacity(Fuse.DrawContext dc) :2076
void TextControl__FastTrackDrawWithOpacity_fn(TextControl* __this, ::g::Fuse::DrawContext* dc, bool* __retval)
{
    return *__retval = false, void();
}

// public Fuse.Font get_Font() :2269
void TextControl__get_Font_fn(TextControl* __this, ::g::Fuse::Font** __retval)
{
    *__retval = __this->Font();
}

// public void set_Font(Fuse.Font value) :2270
void TextControl__set_Font_fn(TextControl* __this, ::g::Fuse::Font* value)
{
    __this->Font(value);
}

// public float get_FontSize() :2252
void TextControl__get_FontSize_fn(TextControl* __this, float* __retval)
{
    *__retval = __this->FontSize();
}

// public void set_FontSize(float value) :2253
void TextControl__set_FontSize_fn(TextControl* __this, float* value)
{
    __this->FontSize(*value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :2053
void TextControl__GetContentSize_fn(TextControl* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 ret4;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 b = (::g::Fuse::Controls::LayoutControl__GetContentSize_fn(__this, uCRef(lp_), &ret4), ret4);

    if (__this->_textRenderer != NULL)
    {
        ::g::Uno::Float2 t = ::g::Fuse::Controls::ITextRenderer::GetContentSize(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]), lp_);
        b = ::g::Uno::Math::Max3(t, b);
    }

    return *__retval = b, void();
}

// protected Fuse.Controls.Native.ITextView GetITextView() :1835
void TextControl__GetITextView_fn(TextControl* __this, uObject** __retval)
{
    *__retval = __this->GetITextView();
}

// protected override sealed Fuse.VisualBounds get_HitTestLocalVisualBounds() :2100
void TextControl__get_HitTestLocalVisualBounds_fn(TextControl* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "get_HitTestLocalVisualBounds()");
    ::g::Fuse::VisualBounds* ret5;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::Control__get_HitTestLocalVisualBounds_fn(__this, &ret5), ret5);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// private void InitializeUX() :502
void TextControl__InitializeUX_fn(TextControl* __this)
{
    __this->InitializeUX();
}

// protected bool get_InternalLoadAsync() :2341
void TextControl__get_InternalLoadAsync_fn(TextControl* __this, bool* __retval)
{
    *__retval = __this->InternalLoadAsync();
}

// protected void set_InternalLoadAsync(bool value) :2342
void TextControl__set_InternalLoadAsync_fn(TextControl* __this, bool* value)
{
    __this->InternalLoadAsync(*value);
}

// protected virtual void InvalidateRenderer() :2039
void TextControl__InvalidateRenderer_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "InvalidateRenderer()");
    __this->InvalidateTextRenderer();
}

// private void InvalidateTextRenderer() :2044
void TextControl__InvalidateTextRenderer_fn(TextControl* __this)
{
    __this->InvalidateTextRenderer();
}

// public float get_LineSpacing() :2238
void TextControl__get_LineSpacing_fn(TextControl* __this, float* __retval)
{
    *__retval = __this->LineSpacing();
}

// public void set_LineSpacing(float value) :2239
void TextControl__set_LineSpacing_fn(TextControl* __this, float* value)
{
    __this->LineSpacing(*value);
}

// public int get_MaxLength() :2196
void TextControl__get_MaxLength_fn(TextControl* __this, int* __retval)
{
    *__retval = __this->MaxLength();
}

// public void set_MaxLength(int value) :2197
void TextControl__set_MaxLength_fn(TextControl* __this, int* value)
{
    __this->MaxLength(*value);
}

// protected void OnColorChanged(Uno.UX.IPropertyListener origin) :1929
void TextControl__OnColorChanged_fn(TextControl* __this, uObject* origin)
{
    __this->OnColorChanged(origin);
}

// protected void OnFontChanged() :1909
void TextControl__OnFontChanged_fn(TextControl* __this)
{
    __this->OnFontChanged();
}

// protected void OnFontSizeChanged() :1899
void TextControl__OnFontSizeChanged_fn(TextControl* __this)
{
    __this->OnFontSizeChanged();
}

// protected override sealed void OnHitTestLocalVisual(Fuse.HitTestContext htc) :2091
void TextControl__OnHitTestLocalVisual_fn(TextControl* __this, ::g::Fuse::HitTestContext* htc)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnHitTestLocalVisual(Fuse.HitTestContext)");

    if (__this->IsPointInside(uPtr(htc)->LocalPoint()))
        uPtr(htc)->Hit(__this);

    ::g::Fuse::Controls::Control__OnHitTestLocalVisual_fn(__this, htc);
}

// protected void OnLineSpacingChanged() :1889
void TextControl__OnLineSpacingChanged_fn(TextControl* __this)
{
    __this->OnLineSpacingChanged();
}

// protected void OnLoadAsyncChanged() :1949
void TextControl__OnLoadAsyncChanged_fn(TextControl* __this)
{
    __this->OnLoadAsyncChanged();
}

// protected void OnMaxLengthChanged() :1869
void TextControl__OnMaxLengthChanged_fn(TextControl* __this)
{
    __this->OnMaxLengthChanged();
}

// protected override void OnRooted() :2004
void TextControl__OnRooted_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);

    if (__this->VisualContext() == 1)
    {
        __this->_textRenderer = (uObject*)uPtr(TextControl::TextRendererFactory())->Invoke(1, __this);
        __this->AddDrawCost(2.0);
    }
}

// protected void OnTextAlignmentChanged() :1919
void TextControl__OnTextAlignmentChanged_fn(TextControl* __this)
{
    __this->OnTextAlignmentChanged();
}

// protected void OnTextTruncationChanged() :1939
void TextControl__OnTextTruncationChanged_fn(TextControl* __this)
{
    __this->OnTextTruncationChanged();
}

// protected void OnTextWrappingChanged() :1879
void TextControl__OnTextWrappingChanged_fn(TextControl* __this)
{
    __this->OnTextWrappingChanged();
}

// protected override void OnUnrooted() :2025
void TextControl__OnUnrooted_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnUnrooted()");

    if (__this->VisualContext() == 1)
    {
        __this->RemoveDrawCost(2.0);

        if (__this->_textRenderer != NULL)
            ::g::Fuse::Controls::ITextRenderer::SoftDispose(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]));

        __this->_textRenderer = NULL;
    }

    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// protected virtual void OnValueChanged(Uno.UX.IPropertyListener origin) :1855
void TextControl__OnValueChanged_fn(TextControl* __this, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnValueChanged(Uno.UX.IPropertyListener)");
    __this->OnPropertyChanged1(TextControl::ValuePropertyName(), origin);
    __this->InvalidateLayout(2);
    __this->InvalidateVisual();
    __this->InvalidateRenderer();

    if (::g::Uno::Delegate::op_Inequality(__this->ValueChanged1, NULL))
    {
        ::g::Fuse::Scripting::StringChangedArgs* args = ::g::Fuse::Scripting::StringChangedArgs::New3(__this->Value());
        uPtr(__this->ValueChanged1)->Invoke(2, __this, args);
    }
}

// protected override void PushPropertiesToNativeView() :1840
void TextControl__PushPropertiesToNativeView_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "PushPropertiesToNativeView()");
    ::g::Fuse::Controls::Control__PushPropertiesToNativeView_fn(__this);
    uObject* tv = uAs<uObject*>(__this->NativeView(), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]);
    ::g::Fuse::Controls::Native::ITextView::Value(uInterface(uPtr(tv), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->Value());
    ::g::Fuse::Controls::Native::ITextView::MaxLength(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->MaxLength());
    ::g::Fuse::Controls::Native::ITextView::TextWrapping(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->TextWrapping());
    ::g::Fuse::Controls::Native::ITextView::LineSpacing(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->LineSpacing());
    ::g::Fuse::Controls::Native::ITextView::FontSize(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->FontSize());
    ::g::Fuse::Controls::Native::ITextView::Font(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->Font());
    ::g::Fuse::Controls::Native::ITextView::TextAlignment(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->TextAlignment());
    ::g::Fuse::Controls::Native::ITextView::TextColor(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->Color());
    ::g::Fuse::Controls::Native::ITextView::TextTruncation(uInterface(tv, ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), __this->TextTruncation());
}

// internal float4 get_RenderColor() :1999
void TextControl__get_RenderColor_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->RenderColor();
}

// internal virtual string get_RenderValue() :1994
void TextControl__get_RenderValue_fn(TextControl* __this, uString** __retval)
{
    uString* ind1 = __this->Value();
    return *__retval = (ind1 != NULL) ? ind1 : ::STRINGS[23/*""*/], void();
}

// public void SetColor(float4 color, Uno.UX.IPropertyListener origin) :2316
void TextControl__SetColor_fn(TextControl* __this, ::g::Uno::Float4* color, uObject* origin)
{
    __this->SetColor(*color, origin);
}

// public void SetValue(string value, Uno.UX.IPropertyListener origin) :2159
void TextControl__SetValue_fn(TextControl* __this, uString* value, uObject* origin)
{
    __this->SetValue(value, origin);
}

// protected void SetValueInternal(string newValue) :2180
void TextControl__SetValueInternal_fn(TextControl* __this, uString* newValue)
{
    __this->SetValueInternal(newValue);
}

// protected override sealed void SoftDispose() :2116
void TextControl__SoftDispose_fn(TextControl* __this)
{
    uStackFrame __("Fuse.Controls.TextControl", "SoftDispose()");
    ::g::Fuse::Node__SoftDispose_fn(__this);

    if (__this->_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::SoftDispose(uInterface(uPtr(__this->_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]));
}

// public Fuse.Controls.TextAlignment get_TextAlignment() :2282
void TextControl__get_TextAlignment_fn(TextControl* __this, int* __retval)
{
    *__retval = __this->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) :2283
void TextControl__set_TextAlignment_fn(TextControl* __this, int* value)
{
    __this->TextAlignment(*value);
}

// public float4 get_TextColor() :2300
void TextControl__get_TextColor_fn(TextControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->TextColor();
}

// public void set_TextColor(float4 value) :2301
void TextControl__set_TextColor_fn(TextControl* __this, ::g::Uno::Float4* value)
{
    __this->TextColor(*value);
}

// internal static generated extern Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> get_TextRendererFactory() :1990
void TextControl__get_TextRendererFactory_fn(uDelegate** __retval)
{
    *__retval = TextControl::TextRendererFactory();
}

// internal static generated extern void set_TextRendererFactory(Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> value) :1990
void TextControl__set_TextRendererFactory_fn(uDelegate* value)
{
    TextControl::TextRendererFactory(value);
}

// public virtual Fuse.Controls.TextTruncation get_TextTruncation() :2327
void TextControl__get_TextTruncation_fn(TextControl* __this, int* __retval)
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextTruncation()");
    int ret8;
    return *__retval = (::g::Fuse::Visual__Get1_fn(__this, ::TYPES[128/*Fuse.Visual.Get<Fuse.Controls.TextTruncation>*/], uCRef<int>(2048), uCRef<int>(0), &ret8), ret8), void();
}

// public virtual void set_TextTruncation(Fuse.Controls.TextTruncation value) :2328
void TextControl__set_TextTruncation_fn(TextControl* __this, int* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    int value_ = *value;

    if (__this->TextTruncation() != value_)
    {
        ::g::Fuse::Visual__Set1_fn(__this, ::TYPES[129/*Fuse.Visual.Set<Fuse.Controls.TextTruncation>*/], uCRef<int>(2048), uCRef<int>(value_), uCRef<int>(0));
        __this->OnTextTruncationChanged();
    }
}

// public Fuse.Controls.TextWrapping get_TextWrapping() :2223
void TextControl__get_TextWrapping_fn(TextControl* __this, int* __retval)
{
    *__retval = __this->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) :2224
void TextControl__set_TextWrapping_fn(TextControl* __this, int* value)
{
    __this->TextWrapping(*value);
}

// public string get_Value() :2155
void TextControl__get_Value_fn(TextControl* __this, uString** __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(string value) :2156
void TextControl__set_Value_fn(TextControl* __this, uString* value)
{
    __this->Value(value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :2189
void TextControl__add_ValueChanged_fn(TextControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :2189
void TextControl__remove_ValueChanged_fn(TextControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector TextControl::ColorPropertyName_;
::g::Uno::UX::Selector TextControl::FontPropertyName_;
::g::Uno::UX::Selector TextControl::FontSizePropertyName_;
::g::Uno::UX::Selector TextControl::LineSpacingPropertyName_;
::g::Uno::UX::Selector TextControl::LoadAsyncPropertyName_;
::g::Uno::UX::Selector TextControl::MaxLengthPropertyName_;
::g::Uno::UX::Selector TextControl::TextAlignmentPropertyName_;
::g::Uno::UX::Selector TextControl::TextColorPropertyName_;
::g::Uno::UX::Selector TextControl::TextTruncationPropertyName_;
::g::Uno::UX::Selector TextControl::TextWrappingPropertyName_;
::g::Uno::UX::Selector TextControl::ValuePropertyName_;
uSStrong<uDelegate*> TextControl::_TextRendererFactory_;

// public TextControl() [instance] :498
void TextControl::ctor_6()
{
    uStackFrame __("Fuse.Controls.TextControl", ".ctor()");
    _value = ::STRINGS[23/*""*/];
    _fontSize = ::g::Fuse::Font::PlatformDefaultSize();
    _color = ::g::Fuse::Font::PlatformDefaultTextColor();
    ctor_5();
    InitializeUX();
}

// public float4 get_Color() [instance] :2310
::g::Uno::Float4 TextControl::Color()
{
    return _color;
}

// public void set_Color(float4 value) [instance] :2311
void TextControl::Color(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Color(float4)");
    SetColor(value, (uObject*)this);
}

// private bool EnforceMaxLength(string& v) [instance] :2209
bool TextControl::EnforceMaxLength(uString** v)
{
    uStackFrame __("Fuse.Controls.TextControl", "EnforceMaxLength(string&)");

    if ((MaxLength() > 0) && (uPtr(*v)->Length() > MaxLength()))
    {
        *v = ::g::Uno::String::Substring1(uPtr(*v), 0, MaxLength());
        return true;
    }

    return false;
}

// public Fuse.Font get_Font() [instance] :2269
::g::Fuse::Font* TextControl::Font()
{
    ::g::Fuse::Font* ind2 = _font;
    return (ind2 != NULL) ? ind2 : (::g::Fuse::Font*)::g::Fuse::Font::PlatformDefault();
}

// public void set_Font(Fuse.Font value) [instance] :2270
void TextControl::Font(::g::Fuse::Font* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Font(Fuse.Font)");

    if (_font != value)
    {
        _font = value;
        OnFontChanged();
    }
}

// public float get_FontSize() [instance] :2252
float TextControl::FontSize()
{
    return _fontSize;
}

// public void set_FontSize(float value) [instance] :2253
void TextControl::FontSize(float value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_FontSize(float)");

    if (_fontSize != value)
    {
        _fontSize = value;
        OnFontSizeChanged();
        InvalidateVisual();
    }
}

// protected Fuse.Controls.Native.ITextView GetITextView() [instance] :1835
uObject* TextControl::GetITextView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]);
}

// private void InitializeUX() [instance] :502
void TextControl::InitializeUX()
{
    uStackFrame __("Fuse.Controls.TextControl", "InitializeUX()");
    TextControl__Template* AndroidAppearance = TextControl__Template::New2(this, this);
    TextControl__Template1* iOSAppearance = TextControl__Template1::New2(this, this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), AndroidAppearance);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Templates()), ::TYPES[4/*Uno.Collections.ICollection<Uno.UX.Template>*/]), iOSAppearance);
}

// protected bool get_InternalLoadAsync() [instance] :2341
bool TextControl::InternalLoadAsync()
{
    return _loadAsync;
}

// protected void set_InternalLoadAsync(bool value) [instance] :2342
void TextControl::InternalLoadAsync(bool value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_InternalLoadAsync(bool)");

    if (_loadAsync != value)
    {
        _loadAsync = value;
        OnLoadAsyncChanged();
    }
}

// private void InvalidateTextRenderer() [instance] :2044
void TextControl::InvalidateTextRenderer()
{
    uStackFrame __("Fuse.Controls.TextControl", "InvalidateTextRenderer()");

    if (_textRenderer != NULL)
        ::g::Fuse::Controls::ITextRenderer::Invalidate(uInterface(uPtr(_textRenderer), ::TYPES[122/*Fuse.Controls.ITextRenderer*/]));

    InvalidateRenderBounds();
}

// public float get_LineSpacing() [instance] :2238
float TextControl::LineSpacing()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_LineSpacing()");
    float ret6;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[124/*Fuse.Visual.Get<float>*/], uCRef<int>(512), uCRef(1.0f), &ret6), ret6);
}

// public void set_LineSpacing(float value) [instance] :2239
void TextControl::LineSpacing(float value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_LineSpacing(float)");

    if (LineSpacing() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[125/*Fuse.Visual.Set<float>*/], uCRef<int>(512), uCRef(value), uCRef(1.0f));
        OnLineSpacingChanged();
    }
}

// public int get_MaxLength() [instance] :2196
int TextControl::MaxLength()
{
    return _maxLength;
}

// public void set_MaxLength(int value) [instance] :2197
void TextControl::MaxLength(int value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_MaxLength(int)");

    if (_maxLength != value)
    {
        _maxLength = value;
        OnMaxLengthChanged();
        uString* v = Value();

        if (EnforceMaxLength(&v))
            Value(v);
    }
}

// protected void OnColorChanged(Uno.UX.IPropertyListener origin) [instance] :1929
void TextControl::OnColorChanged(uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "OnColorChanged(Uno.UX.IPropertyListener)");
    OnPropertyChanged1(TextControl::ColorPropertyName(), origin);
    OnPropertyChanged1(TextControl::TextColorPropertyName(), origin);
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextColor(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), Color());

    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnFontChanged() [instance] :1909
void TextControl::OnFontChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnFontChanged()");
    OnPropertyChanged(TextControl::FontPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::Font(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), Font());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnFontSizeChanged() [instance] :1899
void TextControl::OnFontSizeChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnFontSizeChanged()");
    OnPropertyChanged(TextControl::FontSizePropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::FontSize(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), FontSize());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnLineSpacingChanged() [instance] :1889
void TextControl::OnLineSpacingChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnLineSpacingChanged()");
    OnPropertyChanged(TextControl::LineSpacingPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::LineSpacing(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), LineSpacing());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnLoadAsyncChanged() [instance] :1949
void TextControl::OnLoadAsyncChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnLoadAsyncChanged()");

    if (VisualContext() == 1)
        ;

    OnPropertyChanged(TextControl::LoadAsyncPropertyName());
    InvalidateRenderer();
}

// protected void OnMaxLengthChanged() [instance] :1869
void TextControl::OnMaxLengthChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnMaxLengthChanged()");
    OnPropertyChanged(TextControl::MaxLengthPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::MaxLength(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), MaxLength());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextAlignmentChanged() [instance] :1919
void TextControl::OnTextAlignmentChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextAlignmentChanged()");
    OnPropertyChanged(TextControl::TextAlignmentPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextAlignment(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), TextAlignment());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextTruncationChanged() [instance] :1939
void TextControl::OnTextTruncationChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextTruncationChanged()");
    OnPropertyChanged(TextControl::TextTruncationPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextTruncation(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), TextTruncation());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// protected void OnTextWrappingChanged() [instance] :1879
void TextControl::OnTextWrappingChanged()
{
    uStackFrame __("Fuse.Controls.TextControl", "OnTextWrappingChanged()");
    OnPropertyChanged(TextControl::TextWrappingPropertyName());
    uObject* edit = GetITextView();

    if (edit != NULL)
        ::g::Fuse::Controls::Native::ITextView::TextWrapping(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), TextWrapping());

    InvalidateLayout(2);
    InvalidateVisual();
    InvalidateRenderer();
}

// internal float4 get_RenderColor() [instance] :1999
::g::Uno::Float4 TextControl::RenderColor()
{
    return Color();
}

// public void SetColor(float4 color, Uno.UX.IPropertyListener origin) [instance] :2316
void TextControl::SetColor(::g::Uno::Float4 color, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetColor(float4,Uno.UX.IPropertyListener)");

    if (::g::Uno::Float4__op_Inequality(_color, color))
    {
        _color = color;
        OnColorChanged(origin);
    }
}

// public void SetValue(string value, Uno.UX.IPropertyListener origin) [instance] :2159
void TextControl::SetValue(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetValue(string,Uno.UX.IPropertyListener)");
    uString* newValue = (value != NULL) ? value : ::STRINGS[23/*""*/];
    bool forced = EnforceMaxLength(&newValue);

    if (forced || ::g::Uno::String::op_Inequality(_value, newValue))
    {
        _value = newValue;
        uObject* edit = GetITextView();

        if (edit != NULL)
            ::g::Fuse::Controls::Native::ITextView::Value(uInterface(uPtr(edit), ::TYPES[123/*Fuse.Controls.Native.ITextView*/]), _value);

        OnValueChanged(origin);
        InvalidateTextRenderer();
    }
}

// protected void SetValueInternal(string newValue) [instance] :2180
void TextControl::SetValueInternal(uString* newValue)
{
    uStackFrame __("Fuse.Controls.TextControl", "SetValueInternal(string)");

    if (::g::Uno::String::op_Inequality(_value, newValue))
    {
        _value = newValue;
        OnValueChanged((uObject*)this);
    }
}

// public Fuse.Controls.TextAlignment get_TextAlignment() [instance] :2282
int TextControl::TextAlignment()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextAlignment()");
    int ret7;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[126/*Fuse.Visual.Get<Fuse.Controls.TextAlignment>*/], uCRef<int>(1024), uCRef<int>(0), &ret7), ret7);
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) [instance] :2283
void TextControl::TextAlignment(int value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextAlignment(Fuse.Controls.TextAlignment)");

    if (TextAlignment() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[127/*Fuse.Visual.Set<Fuse.Controls.TextAlignment>*/], uCRef<int>(1024), uCRef<int>(value), uCRef<int>(0));
        OnTextAlignmentChanged();
    }
}

// public float4 get_TextColor() [instance] :2300
::g::Uno::Float4 TextControl::TextColor()
{
    return Color();
}

// public void set_TextColor(float4 value) [instance] :2301
void TextControl::TextColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextColor(float4)");
    Color(value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() [instance] :2223
int TextControl::TextWrapping()
{
    uStackFrame __("Fuse.Controls.TextControl", "get_TextWrapping()");
    int ret9;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[130/*Fuse.Visual.Get<Fuse.Controls.TextWrapping>*/], uCRef<int>(2), uCRef<int>(0), &ret9), ret9);
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) [instance] :2224
void TextControl::TextWrapping(int value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_TextWrapping(Fuse.Controls.TextWrapping)");

    if (TextWrapping() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[131/*Fuse.Visual.Set<Fuse.Controls.TextWrapping>*/], uCRef<int>(2), uCRef<int>(value), uCRef<int>(0));
        OnTextWrappingChanged();
    }
}

// public string get_Value() [instance] :2155
uString* TextControl::Value()
{
    return _value;
}

// public void set_Value(string value) [instance] :2156
void TextControl::Value(uString* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "set_Value(string)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :2189
void TextControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[132/*Uno.UX.ValueChangedHandler<string>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :2189
void TextControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[132/*Uno.UX.ValueChangedHandler<string>*/]);
}

// internal static generated extern Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> get_TextRendererFactory() [static] :1990
uDelegate* TextControl::TextRendererFactory()
{
    TextControl_typeof()->Init();
    return TextControl::_TextRendererFactory();
}

// internal static generated extern void set_TextRendererFactory(Uno.Func<Fuse.Controls.TextControl, Fuse.Controls.ITextRenderer> value) [static] :1990
void TextControl::TextRendererFactory(uDelegate* value)
{
    TextControl_typeof()->Init();
    TextControl::_TextRendererFactory() = value;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// internal abstract class TextEdit :2380
// {
// static TextEdit() :2380
static void TextEdit__cctor_4_fn(uType* __type)
{
    TextEdit::IsPasswordPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[157/*"IsPassword"*/]);
    TextEdit::IsReadOnlyPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[158/*"IsReadOnly"*/]);
    TextEdit::InputHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[159/*"InputHint"*/]);
    TextEdit::CaretColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[160/*"CaretColor"*/]);
    TextEdit::SelectionColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[161/*"SelectionCo...*/]);
    TextEdit::ActionStylePropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[162/*"ActionStyle"*/]);
    TextEdit::AutoCorrectHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[163/*"AutoCorrect...*/]);
    TextEdit::AutoCapitalizationHintPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[164/*"AutoCapital...*/]);
    TextEdit::PlaceholderTextPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[165/*"Placeholder...*/]);
    TextEdit::PlaceholderColorPropertyName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[166/*"Placeholder...*/]);
}

static void TextEdit_build(uType* type)
{
    ::STRINGS[157] = uString::Const("IsPassword");
    ::STRINGS[158] = uString::Const("IsReadOnly");
    ::STRINGS[159] = uString::Const("InputHint");
    ::STRINGS[160] = uString::Const("CaretColor");
    ::STRINGS[161] = uString::Const("SelectionColor");
    ::STRINGS[162] = uString::Const("ActionStyle");
    ::STRINGS[163] = uString::Const("AutoCorrectHint");
    ::STRINGS[164] = uString::Const("AutoCapitalizationHint");
    ::STRINGS[165] = uString::Const("PlaceholderText");
    ::STRINGS[166] = uString::Const("PlaceholderColor");
    ::STRINGS[23] = uString::Const("");
    ::TYPES[133] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextInputActionStyle>*/, ::g::Fuse::Controls::TextInputActionStyle_typeof(), NULL);
    ::TYPES[134] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextInputActionStyle>*/, ::g::Fuse::Controls::TextInputActionStyle_typeof(), NULL);
    ::TYPES[135] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.AutoCapitalizationHint>*/, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), NULL);
    ::TYPES[136] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.AutoCapitalizationHint>*/, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), NULL);
    ::TYPES[137] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.AutoCorrectHint>*/, ::g::Fuse::Controls::AutoCorrectHint_typeof(), NULL);
    ::TYPES[138] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.AutoCorrectHint>*/, ::g::Fuse::Controls::AutoCorrectHint_typeof(), NULL);
    ::TYPES[80] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[79] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<float4>*/, ::g::Uno::Float4_typeof(), NULL);
    ::TYPES[139] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextInputHint>*/, ::g::Fuse::Controls::TextInputHint_typeof(), NULL);
    ::TYPES[140] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextInputHint>*/, ::g::Fuse::Controls::TextInputHint_typeof(), NULL);
    ::TYPES[141] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<string>*/, ::g::Uno::String_typeof(), NULL);
    ::TYPES[142] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<string>*/, ::g::Uno::String_typeof(), NULL);
    ::TYPES[128] = ::g::Fuse::Visual_typeof()->MakeMethod(5/*Get<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[129] = ::g::Fuse::Visual_typeof()->MakeMethod(11/*Set<Fuse.Controls.TextTruncation>*/, ::g::Fuse::Controls::TextTruncation_typeof(), NULL);
    ::TYPES[143] = ::g::Fuse::Controls::TextInputActionHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextEdit_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextEdit_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextEdit_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextEdit_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextEdit_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextEdit_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextEdit_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextEdit_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextEdit_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextEdit_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextEdit_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextEdit_type, interface15),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(TextEdit_type, interface16));
    type->SetFields(104,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::TextEdit, _isMultiline), 0,
        ::TYPES[143/*Fuse.Controls.TextInputActionHandler*/], offsetof(::g::Fuse::Controls::TextEdit, ActionTriggered1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::ActionStylePropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::AutoCapitalizationHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::AutoCorrectHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::CaretColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::InputHintPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::IsPasswordPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::IsReadOnlyPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::PlaceholderColorPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::PlaceholderTextPropertyName_, uFieldFlagsStatic,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::TextEdit::SelectionColorPropertyName_, uFieldFlagsStatic);
}

TextEdit_type* TextEdit_typeof()
{
    static uSStrong<TextEdit_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextControl_typeof();
    options.FieldCount = 116;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(TextEdit);
    options.TypeSize = sizeof(TextEdit_type);
    type = (TextEdit_type*)uClassType::New("Fuse.Controls.TextEdit", options);
    type->fp_build_ = TextEdit_build;
    type->fp_cctor_ = TextEdit__cctor_4_fn;
    type->fp_CalcRenderBounds = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::VisualBounds**))TextEdit__CalcRenderBounds_fn;
    type->fp_OnActionStyleChanged = TextEdit__OnActionStyleChanged_fn;
    type->fp_OnAutoCapitalizationHintChanged = TextEdit__OnAutoCapitalizationHintChanged_fn;
    type->fp_OnAutoCorrectHintChanged = TextEdit__OnAutoCorrectHintChanged_fn;
    type->fp_OnCaretColorChanged = TextEdit__OnCaretColorChanged_fn;
    type->fp_OnInputHintChanged = TextEdit__OnInputHintChanged_fn;
    type->fp_OnIsPasswordChanged = TextEdit__OnIsPasswordChanged_fn;
    type->fp_OnIsReadOnlyChanged = TextEdit__OnIsReadOnlyChanged_fn;
    type->fp_OnPlaceholderColorChanged = TextEdit__OnPlaceholderColorChanged_fn;
    type->fp_OnPlaceholderTextChanged = TextEdit__OnPlaceholderTextChanged_fn;
    type->fp_OnSelectionColorChanged = TextEdit__OnSelectionColorChanged_fn;
    type->fp_get_TextTruncation = (void(*)(::g::Fuse::Controls::TextControl*, int*))TextEdit__get_TextTruncation_fn;
    type->fp_set_TextTruncation = (void(*)(::g::Fuse::Controls::TextControl*, int*))TextEdit__set_TextTruncation_fn;
    type->interface16.fp_get_IsPassword = (void(*)(uObject*, bool*))TextEdit__get_IsPassword_fn;
    type->interface16.fp_set_IsPassword = (void(*)(uObject*, bool*))TextEdit__set_IsPassword_fn;
    type->interface16.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))TextEdit__add_ActionTriggered_fn;
    type->interface16.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))TextEdit__remove_ActionTriggered_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected TextEdit(bool multiline) :2385
void TextEdit__ctor_7_fn(TextEdit* __this, bool* multiline)
{
    __this->ctor_7(*multiline);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() :2499
void TextEdit__get_ActionStyle_fn(TextEdit* __this, int* __retval)
{
    *__retval = __this->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) :2500
void TextEdit__set_ActionStyle_fn(TextEdit* __this, int* value)
{
    __this->ActionStyle(*value);
}

// public generated void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :2601
void TextEdit__add_ActionTriggered_fn(TextEdit* __this, uDelegate* value)
{
    __this->add_ActionTriggered(value);
}

// public generated void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :2601
void TextEdit__remove_ActionTriggered_fn(TextEdit* __this, uDelegate* value)
{
    __this->remove_ActionTriggered(value);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() :2535
void TextEdit__get_AutoCapitalizationHint_fn(TextEdit* __this, int* __retval)
{
    *__retval = __this->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) :2536
void TextEdit__set_AutoCapitalizationHint_fn(TextEdit* __this, int* value)
{
    __this->AutoCapitalizationHint(*value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() :2517
void TextEdit__get_AutoCorrectHint_fn(TextEdit* __this, int* __retval)
{
    *__retval = __this->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) :2518
void TextEdit__set_AutoCorrectHint_fn(TextEdit* __this, int* value)
{
    __this->AutoCorrectHint(*value);
}

// protected override sealed Fuse.VisualBounds CalcRenderBounds() :2619
void TextEdit__CalcRenderBounds_fn(TextEdit* __this, ::g::Fuse::VisualBounds** __retval)
{
    uStackFrame __("Fuse.Controls.TextEdit", "CalcRenderBounds()");
    ::g::Fuse::VisualBounds* ret1;
    ::g::Fuse::VisualBounds* b = (::g::Fuse::Controls::TextControl__CalcRenderBounds_fn(__this, &ret1), ret1);
    b = uPtr(b)->AddRect(::g::Uno::Float2__New1(0.0f), __this->ActualSize());
    return *__retval = b, void();
}

// public float4 get_CaretColor() :2461
void TextEdit__get_CaretColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CaretColor();
}

// public void set_CaretColor(float4 value) :2462
void TextEdit__set_CaretColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->CaretColor(*value);
}

// public Fuse.Controls.TextInputHint get_InputHint() :2443
void TextEdit__get_InputHint_fn(TextEdit* __this, int* __retval)
{
    *__retval = __this->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) :2444
void TextEdit__set_InputHint_fn(TextEdit* __this, int* value)
{
    __this->InputHint(*value);
}

// public bool get_IsPassword() :2405
void TextEdit__get_IsPassword_fn(TextEdit* __this, bool* __retval)
{
    *__retval = __this->IsPassword();
}

// public void set_IsPassword(bool value) :2406
void TextEdit__set_IsPassword_fn(TextEdit* __this, bool* value)
{
    __this->IsPassword(*value);
}

// public bool get_IsReadOnly() :2425
void TextEdit__get_IsReadOnly_fn(TextEdit* __this, bool* __retval)
{
    *__retval = __this->IsReadOnly();
}

// public void set_IsReadOnly(bool value) :2426
void TextEdit__set_IsReadOnly_fn(TextEdit* __this, bool* value)
{
    __this->IsReadOnly(*value);
}

// internal bool OnAction(Fuse.Controls.TextInputActionType type) :2603
void TextEdit__OnAction_fn(TextEdit* __this, int* type, bool* __retval)
{
    *__retval = __this->OnAction(*type);
}

// protected virtual void OnActionStyleChanged() :2509
void TextEdit__OnActionStyleChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnActionStyleChanged()");
    __this->OnPropertyChanged(TextEdit::ActionStylePropertyName());
}

// protected virtual void OnAutoCapitalizationHintChanged() :2545
void TextEdit__OnAutoCapitalizationHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAutoCapitalizationHintChanged()");
    __this->OnPropertyChanged(TextEdit::AutoCapitalizationHintPropertyName());
}

// protected virtual void OnAutoCorrectHintChanged() :2527
void TextEdit__OnAutoCorrectHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAutoCorrectHintChanged()");
    __this->OnPropertyChanged(TextEdit::AutoCorrectHintPropertyName());
}

// protected virtual void OnCaretColorChanged() :2471
void TextEdit__OnCaretColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnCaretColorChanged()");
    __this->OnPropertyChanged(TextEdit::CaretColorPropertyName());
    __this->InvalidateVisual();
}

// protected virtual void OnInputHintChanged() :2453
void TextEdit__OnInputHintChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnInputHintChanged()");
    __this->OnPropertyChanged(TextEdit::InputHintPropertyName());
}

// protected virtual void OnIsPasswordChanged() :2415
void TextEdit__OnIsPasswordChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnIsPasswordChanged()");
    __this->OnPropertyChanged(TextEdit::IsPasswordPropertyName());
    __this->InvalidateLayout(2);
    __this->InvalidateRenderBounds();
}

// protected virtual void OnIsReadOnlyChanged() :2435
void TextEdit__OnIsReadOnlyChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnIsReadOnlyChanged()");
    __this->OnPropertyChanged(TextEdit::IsReadOnlyPropertyName());
}

// protected virtual void OnPlaceholderColorChanged() :2582
void TextEdit__OnPlaceholderColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnPlaceholderColorChanged()");
    __this->OnPropertyChanged(TextEdit::PlaceholderColorPropertyName());
    __this->InvalidateVisual();
}

// protected virtual void OnPlaceholderTextChanged() :2563
void TextEdit__OnPlaceholderTextChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnPlaceholderTextChanged()");
    __this->OnPropertyChanged(TextEdit::PlaceholderTextPropertyName());
    __this->InvalidateLayout(2);
    __this->InvalidateRenderBounds();
}

// protected virtual void OnSelectionColorChanged() :2490
void TextEdit__OnSelectionColorChanged_fn(TextEdit* __this)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnSelectionColorChanged()");
    __this->OnPropertyChanged(TextEdit::SelectionColorPropertyName());
    __this->InvalidateVisual();
}

// public float4 get_PlaceholderColor() :2572
void TextEdit__get_PlaceholderColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) :2573
void TextEdit__set_PlaceholderColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->PlaceholderColor(*value);
}

// public string get_PlaceholderText() :2553
void TextEdit__get_PlaceholderText_fn(TextEdit* __this, uString** __retval)
{
    *__retval = __this->PlaceholderText();
}

// public void set_PlaceholderText(string value) :2554
void TextEdit__set_PlaceholderText_fn(TextEdit* __this, uString* value)
{
    __this->PlaceholderText(value);
}

// public float4 get_SelectionColor() :2480
void TextEdit__get_SelectionColor_fn(TextEdit* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->SelectionColor();
}

// public void set_SelectionColor(float4 value) :2481
void TextEdit__set_SelectionColor_fn(TextEdit* __this, ::g::Uno::Float4* value)
{
    __this->SelectionColor(*value);
}

// public override sealed Fuse.Controls.TextTruncation get_TextTruncation() :2590
void TextEdit__get_TextTruncation_fn(TextEdit* __this, int* __retval)
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_TextTruncation()");
    int ret10;
    return *__retval = (::g::Fuse::Visual__Get1_fn(__this, ::TYPES[128/*Fuse.Visual.Get<Fuse.Controls.TextTruncation>*/], uCRef<int>(2048), uCRef<int>(1), &ret10), ret10), void();
}

// public override sealed void set_TextTruncation(Fuse.Controls.TextTruncation value) :2591
void TextEdit__set_TextTruncation_fn(TextEdit* __this, int* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    int value_ = *value;

    if (__this->TextTruncation() != value_)
    {
        ::g::Fuse::Visual__Set1_fn(__this, ::TYPES[129/*Fuse.Visual.Set<Fuse.Controls.TextTruncation>*/], uCRef<int>(2048), uCRef<int>(value_), uCRef<int>(1));
        __this->OnTextTruncationChanged();
    }
}

::g::Uno::UX::Selector TextEdit::ActionStylePropertyName_;
::g::Uno::UX::Selector TextEdit::AutoCapitalizationHintPropertyName_;
::g::Uno::UX::Selector TextEdit::AutoCorrectHintPropertyName_;
::g::Uno::UX::Selector TextEdit::CaretColorPropertyName_;
::g::Uno::UX::Selector TextEdit::InputHintPropertyName_;
::g::Uno::UX::Selector TextEdit::IsPasswordPropertyName_;
::g::Uno::UX::Selector TextEdit::IsReadOnlyPropertyName_;
::g::Uno::UX::Selector TextEdit::PlaceholderColorPropertyName_;
::g::Uno::UX::Selector TextEdit::PlaceholderTextPropertyName_;
::g::Uno::UX::Selector TextEdit::SelectionColorPropertyName_;

// protected TextEdit(bool multiline) [instance] :2385
void TextEdit::ctor_7(bool multiline)
{
    uStackFrame __("Fuse.Controls.TextEdit", ".ctor(bool)");
    ctor_6();
    _isMultiline = multiline;
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    ClipToBounds(true);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() [instance] :2499
int TextEdit::ActionStyle()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_ActionStyle()");
    int ret2;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[133/*Fuse.Visual.Get<Fuse.Controls.TextInputActionStyle>*/], uCRef<int>(64), uCRef<int>(2), &ret2), ret2);
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) [instance] :2500
void TextEdit::ActionStyle(int value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_ActionStyle(Fuse.Controls.TextInputActionStyle)");

    if (ActionStyle() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[134/*Fuse.Visual.Set<Fuse.Controls.TextInputActionStyle>*/], uCRef<int>(64), uCRef<int>(value), uCRef<int>(2));
        OnActionStyleChanged();
    }
}

// public generated void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :2601
void TextEdit::add_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "add_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    ActionTriggered1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ActionTriggered1, value), ::TYPES[143/*Fuse.Controls.TextInputActionHandler*/]);
}

// public generated void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :2601
void TextEdit::remove_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "remove_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    ActionTriggered1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ActionTriggered1, value), ::TYPES[143/*Fuse.Controls.TextInputActionHandler*/]);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() [instance] :2535
int TextEdit::AutoCapitalizationHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_AutoCapitalizationHint()");
    int ret3;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[135/*Fuse.Visual.Get<Fuse.Controls.AutoCapitalizationHint>*/], uCRef<int>(32768), uCRef<int>(0), &ret3), ret3);
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) [instance] :2536
void TextEdit::AutoCapitalizationHint(int value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint)");

    if (AutoCapitalizationHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[136/*Fuse.Visual.Set<Fuse.Controls.AutoCapitalizationHint>*/], uCRef<int>(32768), uCRef<int>(value), uCRef<int>(0));
        OnAutoCapitalizationHintChanged();
    }
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() [instance] :2517
int TextEdit::AutoCorrectHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_AutoCorrectHint()");
    int ret4;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[137/*Fuse.Visual.Get<Fuse.Controls.AutoCorrectHint>*/], uCRef<int>(16384), uCRef<int>(0), &ret4), ret4);
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) [instance] :2518
void TextEdit::AutoCorrectHint(int value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint)");

    if (AutoCorrectHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[138/*Fuse.Visual.Set<Fuse.Controls.AutoCorrectHint>*/], uCRef<int>(16384), uCRef<int>(value), uCRef<int>(0));
        OnAutoCorrectHintChanged();
    }
}

// public float4 get_CaretColor() [instance] :2461
::g::Uno::Float4 TextEdit::CaretColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_CaretColor()");
    ::g::Uno::Float4 ret5;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[80/*Fuse.Visual.Get<float4>*/], uCRef<int>(128), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)), &ret5), ret5);
}

// public void set_CaretColor(float4 value) [instance] :2462
void TextEdit::CaretColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_CaretColor(float4)");

    if (::g::Uno::Float4__op_Inequality(CaretColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[79/*Fuse.Visual.Set<float4>*/], uCRef<int>(128), uCRef(value), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
        OnCaretColorChanged();
    }
}

// public Fuse.Controls.TextInputHint get_InputHint() [instance] :2443
int TextEdit::InputHint()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_InputHint()");
    int ret6;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[139/*Fuse.Visual.Get<Fuse.Controls.TextInputHint>*/], uCRef<int>(8), uCRef<int>(0), &ret6), ret6);
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) [instance] :2444
void TextEdit::InputHint(int value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_InputHint(Fuse.Controls.TextInputHint)");

    if (InputHint() != value)
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[140/*Fuse.Visual.Set<Fuse.Controls.TextInputHint>*/], uCRef<int>(8), uCRef<int>(value), uCRef<int>(0));
        OnInputHintChanged();
    }
}

// public bool get_IsPassword() [instance] :2405
bool TextEdit::IsPassword()
{
    return HasBit1(4096);
}

// public void set_IsPassword(bool value) [instance] :2406
void TextEdit::IsPassword(bool value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_IsPassword(bool)");

    if (IsPassword() != value)
    {
        SetBit3(4096, value);
        OnIsPasswordChanged();
    }
}

// public bool get_IsReadOnly() [instance] :2425
bool TextEdit::IsReadOnly()
{
    return HasBit1(8192);
}

// public void set_IsReadOnly(bool value) [instance] :2426
void TextEdit::IsReadOnly(bool value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_IsReadOnly(bool)");

    if (IsReadOnly() != value)
    {
        SetBit3(8192, value);
        OnIsReadOnlyChanged();
    }
}

// internal bool OnAction(Fuse.Controls.TextInputActionType type) [instance] :2603
bool TextEdit::OnAction(int type)
{
    uStackFrame __("Fuse.Controls.TextEdit", "OnAction(Fuse.Controls.TextInputActionType)");

    if (::g::Uno::Delegate::op_Inequality(ActionTriggered1, NULL))
    {
        ::g::Fuse::Controls::TextInputActionArgs* args = ::g::Fuse::Controls::TextInputActionArgs::New3(this, type);
        uPtr(ActionTriggered1)->Invoke(2, this, args);
        return true;
    }

    if (ActionStyle() == 2)
        ::g::Fuse::Input::Focus::Move(1);

    return true;
}

// public float4 get_PlaceholderColor() [instance] :2572
::g::Uno::Float4 TextEdit::PlaceholderColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_PlaceholderColor()");
    ::g::Uno::Float4 ret7;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[80/*Fuse.Visual.Get<float4>*/], uCRef<int>(32), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)), &ret7), ret7);
}

// public void set_PlaceholderColor(float4 value) [instance] :2573
void TextEdit::PlaceholderColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_PlaceholderColor(float4)");

    if (::g::Uno::Float4__op_Inequality(PlaceholderColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[79/*Fuse.Visual.Set<float4>*/], uCRef<int>(32), uCRef(value), uCRef(::g::Uno::Float4__New2(0.0f, 0.0f, 0.0f, 1.0f)));
        OnPlaceholderColorChanged();
    }
}

// public string get_PlaceholderText() [instance] :2553
uString* TextEdit::PlaceholderText()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_PlaceholderText()");
    uString* ret8;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[141/*Fuse.Visual.Get<string>*/], uCRef<int>(16), ::STRINGS[23/*""*/], &ret8), ret8);
}

// public void set_PlaceholderText(string value) [instance] :2554
void TextEdit::PlaceholderText(uString* value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_PlaceholderText(string)");

    if (::g::Uno::String::op_Inequality(PlaceholderText(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[142/*Fuse.Visual.Set<string>*/], uCRef<int>(16), (value != NULL) ? value : (uString*)::g::Uno::String::Empty(), ::STRINGS[23/*""*/]);
        OnPlaceholderTextChanged();
    }
}

// public float4 get_SelectionColor() [instance] :2480
::g::Uno::Float4 TextEdit::SelectionColor()
{
    uStackFrame __("Fuse.Controls.TextEdit", "get_SelectionColor()");
    ::g::Uno::Float4 ret9;
    return (::g::Fuse::Visual__Get1_fn(this, ::TYPES[80/*Fuse.Visual.Get<float4>*/], uCRef<int>(256), uCRef(::g::Uno::Float4__New2(0.6f, 0.8f, 1.0f, 0.5f)), &ret9), ret9);
}

// public void set_SelectionColor(float4 value) [instance] :2481
void TextEdit::SelectionColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextEdit", "set_SelectionColor(float4)");

    if (::g::Uno::Float4__op_Inequality(SelectionColor(), value))
    {
        ::g::Fuse::Visual__Set1_fn(this, ::TYPES[79/*Fuse.Visual.Set<float4>*/], uCRef<int>(256), uCRef(value), uCRef(::g::Uno::Float4__New2(0.6f, 0.8f, 1.0f, 0.5f)));
        OnSelectionColorChanged();
    }
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// internal sealed extern class TextEditRenderer :1500
// {
static void TextEditRenderer_build(uType* type)
{
    ::TYPES[119] = ::g::Fuse::Controls::Native::IViewHandleRenderer_typeof();
    ::TYPES[46] = ::g::Uno::IDisposable_typeof();
    type->SetInterfaces(
        ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/], offsetof(TextEditRenderer_type, interface0),
        ::TYPES[46/*Uno.IDisposable*/], offsetof(TextEditRenderer_type, interface1));
    type->SetFields(0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::TextEditRenderer, _container), 0,
        ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/], offsetof(::g::Fuse::Controls::TextEditRenderer, _nativeViewRenderer), 0,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::TextEditRenderer, _target), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::TextEditRenderer, _valid), 0);
}

TextEditRenderer_type* TextEditRenderer_typeof()
{
    static uSStrong<TextEditRenderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 4;
    options.InterfaceCount = 2;
    options.ObjectSize = sizeof(TextEditRenderer);
    options.TypeSize = sizeof(TextEditRenderer_type);
    type = (TextEditRenderer_type*)uClassType::New("Fuse.Controls.TextEditRenderer", options);
    type->fp_build_ = TextEditRenderer_build;
    type->fp_ctor_ = (void*)TextEditRenderer__New1_fn;
    type->interface0.fp_Draw = (void(*)(uObject*, ::g::Fuse::Controls::Native::ViewHandle*, ::g::Uno::Float4x4*, ::g::Uno::Float2*, ::g::Uno::Float2*, float*))TextEditRenderer__FuseControlsNativeIViewHandleRendererDraw_fn;
    type->interface0.fp_Invalidate = (void(*)(uObject*))TextEditRenderer__FuseControlsNativeIViewHandleRendererInvalidate_fn;
    type->interface1.fp_Dispose = (void(*)(uObject*))TextEditRenderer__UnoIDisposableDispose_fn;
    return type;
}

// public TextEditRenderer() :1508
void TextEditRenderer__ctor__fn(TextEditRenderer* __this)
{
    __this->ctor_();
}

// private static void CopyState(Java.Object container, Java.Object sourceHandle, Java.Object targetHandle) :1541
void TextEditRenderer__CopyState_fn(::g::Java::Object* container, ::g::Java::Object* sourceHandle, ::g::Java::Object* targetHandle)
{
    TextEditRenderer::CopyState(container, sourceHandle, targetHandle);
}

// private static Java.Object CreateContainer() :1614
void TextEditRenderer__CreateContainer_fn(::g::Java::Object** __retval)
{
    *__retval = TextEditRenderer::CreateContainer();
}

// private static Java.Object CreateTextEdit() :1606
void TextEditRenderer__CreateTextEdit_fn(::g::Java::Object** __retval)
{
    *__retval = TextEditRenderer::CreateTextEdit();
}

// private void Fuse.Controls.Native.IViewHandleRenderer.Draw(Fuse.Controls.Native.ViewHandle viewHandle, float4x4 localToClipTransform, float2 position, float2 size, float density) :1516
void TextEditRenderer__FuseControlsNativeIViewHandleRendererDraw_fn(TextEditRenderer* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle, ::g::Uno::Float4x4* localToClipTransform, ::g::Uno::Float2* position, ::g::Uno::Float2* size, float* density)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", "Fuse.Controls.Native.IViewHandleRenderer.Draw(Fuse.Controls.Native.ViewHandle,float4x4,float2,float2,float)");
    ::g::Uno::Float4x4 localToClipTransform_ = *localToClipTransform;
    ::g::Uno::Float2 position_ = *position;
    ::g::Uno::Float2 size_ = *size;
    float density_ = *density;

    if (!__this->_valid)
    {
        TextEditRenderer::CopyState(uPtr(__this->_container)->NativeHandle, uPtr(viewHandle)->NativeHandle, uPtr(__this->_target)->NativeHandle);
        __this->_valid = true;
    }

    ::g::Fuse::Controls::Native::IViewHandleRenderer::Draw(uInterface(uPtr(__this->_nativeViewRenderer), ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/]), __this->_container, localToClipTransform_, position_, size_, density_);
}

// private void Fuse.Controls.Native.IViewHandleRenderer.Invalidate() :1526
void TextEditRenderer__FuseControlsNativeIViewHandleRendererInvalidate_fn(TextEditRenderer* __this)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", "Fuse.Controls.Native.IViewHandleRenderer.Invalidate()");
    ::g::Fuse::Controls::Native::IViewHandleRenderer::Invalidate(uInterface(uPtr(__this->_nativeViewRenderer), ::TYPES[119/*Fuse.Controls.Native.IViewHandleRenderer*/]));
    __this->_valid = false;
}

// public TextEditRenderer New() :1508
void TextEditRenderer__New1_fn(TextEditRenderer** __retval)
{
    *__retval = TextEditRenderer::New1();
}

// private void Uno.IDisposable.Dispose() :1532
void TextEditRenderer__UnoIDisposableDispose_fn(TextEditRenderer* __this)
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", "Uno.IDisposable.Dispose()");
    ::g::Uno::IDisposable::Dispose(uInterface(uPtr(__this->_nativeViewRenderer), ::TYPES[46/*Uno.IDisposable*/]));
    __this->_nativeViewRenderer = NULL;
    __this->_target = NULL;
    __this->_container = NULL;
}

// public TextEditRenderer() [instance] :1508
void TextEditRenderer::ctor_()
{
    uStackFrame __("Fuse.Controls.TextEditRenderer", ".ctor()");
    _target = ::g::Fuse::Controls::Native::ViewHandle::New1(TextEditRenderer::CreateTextEdit());
    _container = ::g::Fuse::Controls::Native::ViewHandle::New1(TextEditRenderer::CreateContainer());
    _nativeViewRenderer = (uObject*)::g::Fuse::Controls::Native::NativeViewRenderer::New1();
}

// private static void CopyState(Java.Object container, Java.Object sourceHandle, Java.Object targetHandle) [static] :1541
void TextEditRenderer::CopyState(::g::Java::Object* container, ::g::Java::Object* sourceHandle, ::g::Java::Object* targetHandle)
{
    {
        INIT_JNI;
        jclass __cls = JniHelper::GetNativeExternClass();
        WITH_STATIC_JAVA_METHOD(__mtd, __cls, "CopyState269", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V");
        ::g::Java::Object* _ucontainer=container;
        jobject _container = (_ucontainer==NULL ? NULL : U_JNIVAR->NewLocalRef(::g::Android::Base::Wrappers::IJWrapper::_GetJavaObject(uInterface((uObject*)_ucontainer, ::g::Android::Base::Wrappers::IJWrapper_typeof()))));
        ::g::Java::Object* _usourceHandle=sourceHandle;
        jobject _sourceHandle = (_usourceHandle==NULL ? NULL : U_JNIVAR->NewLocalRef(::g::Android::Base::Wrappers::IJWrapper::_GetJavaObject(uInterface((uObject*)_usourceHandle, ::g::Android::Base::Wrappers::IJWrapper_typeof()))));
        ::g::Java::Object* _utargetHandle=targetHandle;
        jobject _targetHandle = (_utargetHandle==NULL ? NULL : U_JNIVAR->NewLocalRef(::g::Android::Base::Wrappers::IJWrapper::_GetJavaObject(uInterface((uObject*)_utargetHandle, ::g::Android::Base::Wrappers::IJWrapper_typeof()))));
        U_JNIVAR->CallStaticVoidMethod(__cls,__mtd,_container,_sourceHandle,_targetHandle);
        
        if (_container!=NULL) { U_JNIVAR->DeleteLocalRef(_container); }
        if (_sourceHandle!=NULL) { U_JNIVAR->DeleteLocalRef(_sourceHandle); }
        if (_targetHandle!=NULL) { U_JNIVAR->DeleteLocalRef(_targetHandle); }
        ::g::Android::Base::JNI::CheckException();
        
    }
    
}

// private static Java.Object CreateContainer() [static] :1614
::g::Java::Object* TextEditRenderer::CreateContainer()
{
    {
        INIT_JNI;
        jclass __cls = JniHelper::GetNativeExternClass();
        WITH_STATIC_JAVA_METHOD(__mtd, __cls, "CreateContainer270", "()Ljava/lang/Object;");
        jobject __jresult = U_JNIVAR->CallStaticObjectMethod(__cls,__mtd);
        ::g::Java::Object* __result = (::g::Java::Object*)::g::Android::Base::Wrappers::JavaObjectHelper::JObjectToJWrapper(__jresult, false);
        ::g::Android::Base::JNI::CheckException();
        return __result;
    }
    
}

// private static Java.Object CreateTextEdit() [static] :1606
::g::Java::Object* TextEditRenderer::CreateTextEdit()
{
    {
        INIT_JNI;
        jclass __cls = JniHelper::GetNativeExternClass();
        WITH_STATIC_JAVA_METHOD(__mtd, __cls, "CreateTextEdit271", "()Ljava/lang/Object;");
        jobject __jresult = U_JNIVAR->CallStaticObjectMethod(__cls,__mtd);
        ::g::Java::Object* __result = (::g::Java::Object*)::g::Android::Base::Wrappers::JavaObjectHelper::JObjectToJWrapper(__jresult, false);
        ::g::Android::Base::JNI::CheckException();
        return __result;
    }
    
}

// public TextEditRenderer New() [static] :1508
TextEditRenderer* TextEditRenderer::New1()
{
    TextEditRenderer* obj1 = (TextEditRenderer*)uNew(TextEditRenderer_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public class TextInput :2719
// {
static void TextInput_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextInput_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextInput_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextInput_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInput_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextInput_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInput_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextInput_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextInput_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextInput_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextInput_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextInput_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextInput_type, interface15),
        ::g::Fuse::Controls::ITextEditControl_typeof(), offsetof(TextInput_type, interface16));
    type->SetFields(98);
    type->Reflection.SetFunctions(13,
        new uFunction("get_ActionStyle", NULL, (void*)TextInput__get_ActionStyle_fn, 0, false, ::g::Fuse::Controls::TextInputActionStyle_typeof(), 0),
        new uFunction("set_ActionStyle", NULL, (void*)TextInput__set_ActionStyle_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionStyle_typeof()),
        new uFunction("add_ActionTriggered", NULL, (void*)TextInput__add_ActionTriggered_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("remove_ActionTriggered", NULL, (void*)TextInput__remove_ActionTriggered_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputActionHandler_typeof()),
        new uFunction("get_EditorAlignment", NULL, (void*)TextInput__get_EditorAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_EditorAlignment", NULL, (void*)TextInput__set_EditorAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_IsPassword", NULL, (void*)TextInput__get_IsPassword_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsPassword", NULL, (void*)TextInput__set_IsPassword_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)TextInput__New3_fn, 0, true, type, 0),
        new uFunction("get_PlaceholderColor", NULL, (void*)TextInput__get_PlaceholderColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_PlaceholderColor", NULL, (void*)TextInput__set_PlaceholderColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_PlaceholderText", NULL, (void*)TextInput__get_PlaceholderText_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_PlaceholderText", NULL, (void*)TextInput__set_PlaceholderText_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

TextInput_type* TextInput_typeof()
{
    static uSStrong<TextInput_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInputControl_typeof();
    options.FieldCount = 98;
    options.InterfaceCount = 17;
    options.ObjectSize = sizeof(TextInput);
    options.TypeSize = sizeof(TextInput_type);
    type = (TextInput_type*)uClassType::New("Fuse.Controls.TextInput", options);
    type->fp_build_ = TextInput_build;
    type->fp_ctor_ = (void*)TextInput__New3_fn;
    type->interface16.fp_get_IsPassword = (void(*)(uObject*, bool*))TextInput__get_IsPassword_fn;
    type->interface16.fp_set_IsPassword = (void(*)(uObject*, bool*))TextInput__set_IsPassword_fn;
    type->interface16.fp_add_ActionTriggered = (void(*)(uObject*, uDelegate*))TextInput__add_ActionTriggered_fn;
    type->interface16.fp_remove_ActionTriggered = (void(*)(uObject*, uDelegate*))TextInput__remove_ActionTriggered_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextInput() :2721
void TextInput__ctor_7_fn(TextInput* __this)
{
    __this->ctor_7();
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() :2761
void TextInput__get_ActionStyle_fn(TextInput* __this, int* __retval)
{
    *__retval = __this->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) :2761
void TextInput__set_ActionStyle_fn(TextInput* __this, int* value)
{
    __this->ActionStyle(*value);
}

// public void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :2752
void TextInput__add_ActionTriggered_fn(TextInput* __this, uDelegate* value)
{
    __this->add_ActionTriggered(value);
}

// public void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) :2753
void TextInput__remove_ActionTriggered_fn(TextInput* __this, uDelegate* value)
{
    __this->remove_ActionTriggered(value);
}

// private static Fuse.Controls.TextEdit Create() :2726
void TextInput__Create_fn(::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = TextInput::Create();
}

// public Fuse.Elements.Alignment get_EditorAlignment() :2737
void TextInput__get_EditorAlignment_fn(TextInput* __this, int* __retval)
{
    *__retval = __this->EditorAlignment();
}

// public void set_EditorAlignment(Fuse.Elements.Alignment value) :2737
void TextInput__set_EditorAlignment_fn(TextInput* __this, int* value)
{
    __this->EditorAlignment(*value);
}

// public bool get_IsPassword() :2734
void TextInput__get_IsPassword_fn(TextInput* __this, bool* __retval)
{
    *__retval = __this->IsPassword();
}

// public void set_IsPassword(bool value) :2734
void TextInput__set_IsPassword_fn(TextInput* __this, bool* value)
{
    __this->IsPassword(*value);
}

// public TextInput New() :2721
void TextInput__New3_fn(TextInput** __retval)
{
    *__retval = TextInput::New3();
}

// public float4 get_PlaceholderColor() :2745
void TextInput__get_PlaceholderColor_fn(TextInput* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) :2745
void TextInput__set_PlaceholderColor_fn(TextInput* __this, ::g::Uno::Float4* value)
{
    __this->PlaceholderColor(*value);
}

// public string get_PlaceholderText() :2741
void TextInput__get_PlaceholderText_fn(TextInput* __this, uString** __retval)
{
    *__retval = __this->PlaceholderText();
}

// public void set_PlaceholderText(string value) :2741
void TextInput__set_PlaceholderText_fn(TextInput* __this, uString* value)
{
    __this->PlaceholderText(value);
}

// public TextInput() [instance] :2721
void TextInput::ctor_7()
{
    uStackFrame __("Fuse.Controls.TextInput", ".ctor()");
    ctor_6(TextInput::Create());
    uPtr(Editor())->Alignment(8);
}

// public Fuse.Controls.TextInputActionStyle get_ActionStyle() [instance] :2761
int TextInput::ActionStyle()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_ActionStyle()");
    return uPtr(Editor())->ActionStyle();
}

// public void set_ActionStyle(Fuse.Controls.TextInputActionStyle value) [instance] :2761
void TextInput::ActionStyle(int value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_ActionStyle(Fuse.Controls.TextInputActionStyle)");
    uPtr(Editor())->ActionStyle(value);
}

// public void add_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :2752
void TextInput::add_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "add_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    uPtr(Editor())->add_ActionTriggered(value);
}

// public void remove_ActionTriggered(Fuse.Controls.TextInputActionHandler value) [instance] :2753
void TextInput::remove_ActionTriggered(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "remove_ActionTriggered(Fuse.Controls.TextInputActionHandler)");
    uPtr(Editor())->remove_ActionTriggered(value);
}

// public Fuse.Elements.Alignment get_EditorAlignment() [instance] :2737
int TextInput::EditorAlignment()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_EditorAlignment()");
    return uPtr(Editor())->Alignment();
}

// public void set_EditorAlignment(Fuse.Elements.Alignment value) [instance] :2737
void TextInput::EditorAlignment(int value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_EditorAlignment(Fuse.Elements.Alignment)");
    uPtr(Editor())->Alignment(value);
}

// public bool get_IsPassword() [instance] :2734
bool TextInput::IsPassword()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_IsPassword()");
    return uPtr(Editor())->IsPassword();
}

// public void set_IsPassword(bool value) [instance] :2734
void TextInput::IsPassword(bool value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_IsPassword(bool)");
    uPtr(Editor())->IsPassword(value);
}

// public float4 get_PlaceholderColor() [instance] :2745
::g::Uno::Float4 TextInput::PlaceholderColor()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_PlaceholderColor()");
    return uPtr(Editor())->PlaceholderColor();
}

// public void set_PlaceholderColor(float4 value) [instance] :2745
void TextInput::PlaceholderColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_PlaceholderColor(float4)");
    uPtr(Editor())->PlaceholderColor(value);
}

// public string get_PlaceholderText() [instance] :2741
uString* TextInput::PlaceholderText()
{
    uStackFrame __("Fuse.Controls.TextInput", "get_PlaceholderText()");
    return uPtr(Editor())->PlaceholderText();
}

// public void set_PlaceholderText(string value) [instance] :2741
void TextInput::PlaceholderText(uString* value)
{
    uStackFrame __("Fuse.Controls.TextInput", "set_PlaceholderText(string)");
    uPtr(Editor())->PlaceholderText(value);
}

// private static Fuse.Controls.TextEdit Create() [static] :2726
::g::Fuse::Controls::TextEdit* TextInput::Create()
{
    uStackFrame __("Fuse.Controls.TextInput", "Create()");
    return ::g::Fuse::Controls::MobileTextEdit::New3(false);
}

// public TextInput New() [static] :2721
TextInput* TextInput::New3()
{
    TextInput* obj1 = (TextInput*)uNew(TextInput_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public sealed class TextInputActionArgs :2808
// {
static void TextInputActionArgs_build(uType* type)
{
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(::g::Fuse::VisualEventArgs_type, interface0));
    type->SetFields(2,
        ::g::Fuse::Controls::TextInputActionType_typeof(), offsetof(::g::Fuse::Controls::TextInputActionArgs, _Type), 0);
    type->Reflection.SetFunctions(2,
        new uFunction(".ctor", NULL, (void*)TextInputActionArgs__New3_fn, 0, true, type, 2, ::g::Fuse::Visual_typeof(), ::g::Fuse::Controls::TextInputActionType_typeof()),
        new uFunction("get_Type", NULL, (void*)TextInputActionArgs__get_Type_fn, 0, false, ::g::Fuse::Controls::TextInputActionType_typeof(), 0));
}

::g::Fuse::VisualEventArgs_type* TextInputActionArgs_typeof()
{
    static uSStrong< ::g::Fuse::VisualEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::VisualEventArgs_typeof();
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(TextInputActionArgs);
    options.TypeSize = sizeof(::g::Fuse::VisualEventArgs_type);
    type = (::g::Fuse::VisualEventArgs_type*)uClassType::New("Fuse.Controls.TextInputActionArgs", options);
    type->fp_build_ = TextInputActionArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))::g::Fuse::VisualEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public TextInputActionArgs(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) :2812
void TextInputActionArgs__ctor_2_fn(TextInputActionArgs* __this, ::g::Fuse::Visual* visual, int* type)
{
    __this->ctor_2(visual, *type);
}

// public TextInputActionArgs New(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) :2812
void TextInputActionArgs__New3_fn(::g::Fuse::Visual* visual, int* type, TextInputActionArgs** __retval)
{
    *__retval = TextInputActionArgs::New3(visual, *type);
}

// public generated Fuse.Controls.TextInputActionType get_Type() :2810
void TextInputActionArgs__get_Type_fn(TextInputActionArgs* __this, int* __retval)
{
    *__retval = __this->Type();
}

// private generated void set_Type(Fuse.Controls.TextInputActionType value) :2810
void TextInputActionArgs__set_Type_fn(TextInputActionArgs* __this, int* value)
{
    __this->Type(*value);
}

// public TextInputActionArgs(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) [instance] :2812
void TextInputActionArgs::ctor_2(::g::Fuse::Visual* visual, int type)
{
    uStackFrame __("Fuse.Controls.TextInputActionArgs", ".ctor(Fuse.Visual,Fuse.Controls.TextInputActionType)");
    ctor_1(visual);
    Type(type);
}

// public generated Fuse.Controls.TextInputActionType get_Type() [instance] :2810
int TextInputActionArgs::Type()
{
    return _Type;
}

// private generated void set_Type(Fuse.Controls.TextInputActionType value) [instance] :2810
void TextInputActionArgs::Type(int value)
{
    _Type = value;
}

// public TextInputActionArgs New(Fuse.Visual visual, Fuse.Controls.TextInputActionType type) [static] :2812
TextInputActionArgs* TextInputActionArgs::New3(::g::Fuse::Visual* visual, int type)
{
    TextInputActionArgs* obj1 = (TextInputActionArgs*)uNew(TextInputActionArgs_typeof());
    obj1->ctor_2(visual, type);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public delegate void TextInputActionHandler(object sender, Fuse.Controls.TextInputActionArgs args) :2819
uDelegateType* TextInputActionHandler_typeof()
{
    static uSStrong<uDelegateType*> type;
    if (type != NULL) return type;

    type = uDelegateType::New("Fuse.Controls.TextInputActionHandler", 2, 0);
    type->SetSignature(uVoid_typeof(),
        uObject_typeof(),
        ::g::Fuse::Controls::TextInputActionArgs_typeof());
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextInputActionStyle :833
uEnumType* TextInputActionStyle_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputActionStyle", ::g::Uno::Int_typeof(), 6);
    type->SetLiterals(
        "Default", 0LL,
        "Done", 1LL,
        "Next", 2LL,
        "Go", 3LL,
        "Search", 4LL,
        "Send", 5LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextInputActionType :828
uEnumType* TextInputActionType_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputActionType", ::g::Uno::Int_typeof(), 1);
    type->SetLiterals(
        "Primary", 0LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public abstract class TextInputControl :2824
// {
static void TextInputControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[144] = ::g::Fuse::Input::FocusDelegator_typeof();
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[19] = ::g::Fuse::Gestures::TappedHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(TextInputControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(TextInputControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(TextInputControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(TextInputControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInputControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(TextInputControl_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(TextInputControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(TextInputControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(TextInputControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(TextInputControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(TextInputControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(TextInputControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(TextInputControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(TextInputControl_type, interface15));
    type->SetFields(96,
        ::g::Fuse::Controls::TextEdit_typeof(), offsetof(::g::Fuse::Controls::TextInputControl, _editor), 0,
        ::g::Fuse::Gestures::Tapped_typeof(), offsetof(::g::Fuse::Controls::TextInputControl, _tapped), 0);
    type->Reflection.SetFunctions(33,
        new uFunction("get_AutoCapitalizationHint", NULL, (void*)TextInputControl__get_AutoCapitalizationHint_fn, 0, false, ::g::Fuse::Controls::AutoCapitalizationHint_typeof(), 0),
        new uFunction("set_AutoCapitalizationHint", NULL, (void*)TextInputControl__set_AutoCapitalizationHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::AutoCapitalizationHint_typeof()),
        new uFunction("get_AutoCorrectHint", NULL, (void*)TextInputControl__get_AutoCorrectHint_fn, 0, false, ::g::Fuse::Controls::AutoCorrectHint_typeof(), 0),
        new uFunction("set_AutoCorrectHint", NULL, (void*)TextInputControl__set_AutoCorrectHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::AutoCorrectHint_typeof()),
        new uFunction("get_CaretColor", NULL, (void*)TextInputControl__get_CaretColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_CaretColor", NULL, (void*)TextInputControl__set_CaretColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_Font", NULL, (void*)TextInputControl__get_Font_fn, 0, false, ::g::Fuse::Font_typeof(), 0),
        new uFunction("set_Font", NULL, (void*)TextInputControl__set_Font_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Font_typeof()),
        new uFunction("get_FontSize", NULL, (void*)TextInputControl__get_FontSize_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_FontSize", NULL, (void*)TextInputControl__set_FontSize_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_InputHint", NULL, (void*)TextInputControl__get_InputHint_fn, 0, false, ::g::Fuse::Controls::TextInputHint_typeof(), 0),
        new uFunction("set_InputHint", NULL, (void*)TextInputControl__set_InputHint_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextInputHint_typeof()),
        new uFunction("get_IsReadOnly", NULL, (void*)TextInputControl__get_IsReadOnly_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsReadOnly", NULL, (void*)TextInputControl__set_IsReadOnly_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_LineSpacing", NULL, (void*)TextInputControl__get_LineSpacing_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_LineSpacing", NULL, (void*)TextInputControl__set_LineSpacing_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_MaxLength", NULL, (void*)TextInputControl__get_MaxLength_fn, 0, false, ::g::Uno::Int_typeof(), 0),
        new uFunction("set_MaxLength", NULL, (void*)TextInputControl__set_MaxLength_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Int_typeof()),
        new uFunction("get_SelectionColor", NULL, (void*)TextInputControl__get_SelectionColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_SelectionColor", NULL, (void*)TextInputControl__set_SelectionColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("SetValue", NULL, (void*)TextInputControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::String_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_TextAlignment", NULL, (void*)TextInputControl__get_TextAlignment_fn, 0, false, ::g::Fuse::Controls::TextAlignment_typeof(), 0),
        new uFunction("set_TextAlignment", NULL, (void*)TextInputControl__set_TextAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextAlignment_typeof()),
        new uFunction("get_TextColor", NULL, (void*)TextInputControl__get_TextColor_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_TextColor", NULL, (void*)TextInputControl__set_TextColor_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("get_TextTruncation", NULL, (void*)TextInputControl__get_TextTruncation_fn, 0, false, ::g::Fuse::Controls::TextTruncation_typeof(), 0),
        new uFunction("set_TextTruncation", NULL, (void*)TextInputControl__set_TextTruncation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextTruncation_typeof()),
        new uFunction("get_TextWrapping", NULL, (void*)TextInputControl__get_TextWrapping_fn, 0, false, ::g::Fuse::Controls::TextWrapping_typeof(), 0),
        new uFunction("set_TextWrapping", NULL, (void*)TextInputControl__set_TextWrapping_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::TextWrapping_typeof()),
        new uFunction("get_Value", NULL, (void*)TextInputControl__get_Value_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)TextInputControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)TextInputControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)),
        new uFunction("remove_ValueChanged", NULL, (void*)TextInputControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::String_typeof(), NULL)));
}

TextInputControl_type* TextInputControl_typeof()
{
    static uSStrong<TextInputControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::LayoutControl_typeof();
    options.FieldCount = 98;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(TextInputControl);
    options.TypeSize = sizeof(TextInputControl_type);
    type = (TextInputControl_type*)uClassType::New("Fuse.Controls.TextInputControl", options);
    type->fp_build_ = TextInputControl_build;
    type->fp_OnPropertyChanged2 = (void(*)(::g::Fuse::Visual*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))TextInputControl__OnPropertyChanged2_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TextInputControl__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TextInputControl__OnUnrooted_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))TextInputControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))TextInputControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))TextInputControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))TextInputControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// protected internal TextInputControl(Fuse.Controls.TextEdit editor) :2829
void TextInputControl__ctor_6_fn(TextInputControl* __this, ::g::Fuse::Controls::TextEdit* editor)
{
    __this->ctor_6(editor);
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() :2948
void TextInputControl__get_AutoCapitalizationHint_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) :2948
void TextInputControl__set_AutoCapitalizationHint_fn(TextInputControl* __this, int* value)
{
    __this->AutoCapitalizationHint(*value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() :2944
void TextInputControl__get_AutoCorrectHint_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) :2944
void TextInputControl__set_AutoCorrectHint_fn(TextInputControl* __this, int* value)
{
    __this->AutoCorrectHint(*value);
}

// public float4 get_CaretColor() :2936
void TextInputControl__get_CaretColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->CaretColor();
}

// public void set_CaretColor(float4 value) :2936
void TextInputControl__set_CaretColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->CaretColor(*value);
}

// protected internal Fuse.Controls.TextEdit get_Editor() :2827
void TextInputControl__get_Editor_fn(TextInputControl* __this, ::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = __this->Editor();
}

// private Fuse.Visual FocusDelegator() :2844
void TextInputControl__FocusDelegator_fn(TextInputControl* __this, ::g::Fuse::Visual** __retval)
{
    *__retval = __this->FocusDelegator();
}

// public Fuse.Font get_Font() :2916
void TextInputControl__get_Font_fn(TextInputControl* __this, ::g::Fuse::Font** __retval)
{
    *__retval = __this->Font();
}

// public void set_Font(Fuse.Font value) :2916
void TextInputControl__set_Font_fn(TextInputControl* __this, ::g::Fuse::Font* value)
{
    __this->Font(value);
}

// public float get_FontSize() :2912
void TextInputControl__get_FontSize_fn(TextInputControl* __this, float* __retval)
{
    *__retval = __this->FontSize();
}

// public void set_FontSize(float value) :2912
void TextInputControl__set_FontSize_fn(TextInputControl* __this, float* value)
{
    __this->FontSize(*value);
}

// public Fuse.Controls.TextInputHint get_InputHint() :2932
void TextInputControl__get_InputHint_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) :2932
void TextInputControl__set_InputHint_fn(TextInputControl* __this, int* value)
{
    __this->InputHint(*value);
}

// public bool get_IsReadOnly() :2926
void TextInputControl__get_IsReadOnly_fn(TextInputControl* __this, bool* __retval)
{
    *__retval = __this->IsReadOnly();
}

// public void set_IsReadOnly(bool value) :2926
void TextInputControl__set_IsReadOnly_fn(TextInputControl* __this, bool* value)
{
    __this->IsReadOnly(*value);
}

// public float get_LineSpacing() :2908
void TextInputControl__get_LineSpacing_fn(TextInputControl* __this, float* __retval)
{
    *__retval = __this->LineSpacing();
}

// public void set_LineSpacing(float value) :2908
void TextInputControl__set_LineSpacing_fn(TextInputControl* __this, float* value)
{
    __this->LineSpacing(*value);
}

// public int get_MaxLength() :2900
void TextInputControl__get_MaxLength_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->MaxLength();
}

// public void set_MaxLength(int value) :2900
void TextInputControl__set_MaxLength_fn(TextInputControl* __this, int* value)
{
    __this->MaxLength(*value);
}

// public override sealed void OnPropertyChanged(Uno.UX.PropertyObject obj, Uno.UX.Selector prop) :2867
void TextInputControl__OnPropertyChanged2_fn(TextInputControl* __this, ::g::Uno::UX::PropertyObject* obj, ::g::Uno::UX::Selector* prop)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnPropertyChanged(Uno.UX.PropertyObject,Uno.UX.Selector)");
    ::g::Uno::UX::Selector prop_ = *prop;
    ::g::Fuse::Controls::Control__OnPropertyChanged2_fn(__this, obj, uCRef(prop_));

    if (obj == __this->_editor)
        __this->OnPropertyChanged1(prop_, (uObject*)__this);
}

// protected override sealed void OnRooted() :2851
void TextInputControl__OnRooted_fn(TextInputControl* __this)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnRooted()");
    ::g::Fuse::Controls::LayoutControl__OnRooted_fn(__this);
    uPtr(__this->_editor)->AddPropertyListener((uObject*)__this);
    uPtr(__this->_tapped)->add_Handler(uDelegate::New(::TYPES[19/*Fuse.Gestures.TappedHandler*/], (void*)TextInputControl__OnTapped_fn, __this));
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_tapped);
}

// private void OnTapped(object sender, Uno.EventArgs args) :2839
void TextInputControl__OnTapped_fn(TextInputControl* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnTapped(sender, args);
}

// protected override sealed void OnUnrooted() :2859
void TextInputControl__OnUnrooted_fn(TextInputControl* __this)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnUnrooted()");
    bool ret1;
    uPtr(__this->_tapped)->remove_Handler(uDelegate::New(::TYPES[19/*Fuse.Gestures.TappedHandler*/], (void*)TextInputControl__OnTapped_fn, __this));
    ::g::Uno::Collections::ICollection::Remove_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), __this->_tapped, &ret1);
    uPtr(__this->_editor)->RemovePropertyListener((uObject*)__this);
    ::g::Fuse::Controls::LayoutControl__OnUnrooted_fn(__this);
}

// public float4 get_SelectionColor() :2940
void TextInputControl__get_SelectionColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->SelectionColor();
}

// public void set_SelectionColor(float4 value) :2940
void TextInputControl__set_SelectionColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->SelectionColor(*value);
}

// public void SetValue(string v, Uno.UX.IPropertyListener origin) :2882
void TextInputControl__SetValue_fn(TextInputControl* __this, uString* v, uObject* origin)
{
    __this->SetValue(v, origin);
}

// public Fuse.Controls.TextAlignment get_TextAlignment() :2918
void TextInputControl__get_TextAlignment_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) :2918
void TextInputControl__set_TextAlignment_fn(TextInputControl* __this, int* value)
{
    __this->TextAlignment(*value);
}

// public float4 get_TextColor() :2920
void TextInputControl__get_TextColor_fn(TextInputControl* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->TextColor();
}

// public void set_TextColor(float4 value) :2920
void TextInputControl__set_TextColor_fn(TextInputControl* __this, ::g::Uno::Float4* value)
{
    __this->TextColor(*value);
}

// public Fuse.Controls.TextTruncation get_TextTruncation() :2922
void TextInputControl__get_TextTruncation_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->TextTruncation();
}

// public void set_TextTruncation(Fuse.Controls.TextTruncation value) :2922
void TextInputControl__set_TextTruncation_fn(TextInputControl* __this, int* value)
{
    __this->TextTruncation(*value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() :2904
void TextInputControl__get_TextWrapping_fn(TextInputControl* __this, int* __retval)
{
    *__retval = __this->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) :2904
void TextInputControl__set_TextWrapping_fn(TextInputControl* __this, int* value)
{
    __this->TextWrapping(*value);
}

// public string get_Value() :2878
void TextInputControl__get_Value_fn(TextInputControl* __this, uString** __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(string value) :2879
void TextInputControl__set_Value_fn(TextInputControl* __this, uString* value)
{
    __this->Value(value);
}

// public void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :2894
void TextInputControl__add_ValueChanged_fn(TextInputControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) :2895
void TextInputControl__remove_ValueChanged_fn(TextInputControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

// protected internal TextInputControl(Fuse.Controls.TextEdit editor) [instance] :2829
void TextInputControl::ctor_6(::g::Fuse::Controls::TextEdit* editor)
{
    uStackFrame __("Fuse.Controls.TextInputControl", ".ctor(Fuse.Controls.TextEdit)");
    _tapped = ::g::Fuse::Gestures::Tapped::New2();
    ctor_5();
    ::g::Fuse::Input::Focus::SetIsFocusable(this, true);
    ::g::Fuse::Input::Focus::SetDelegator(this, uDelegate::New(::TYPES[144/*Fuse.Input.FocusDelegator*/], (void*)TextInputControl__FocusDelegator_fn, this));
    HitTestMode(6);
    _editor = editor;
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), _editor);
    Layout(::g::Fuse::Layouts::DockLayout::New2());
}

// public Fuse.Controls.AutoCapitalizationHint get_AutoCapitalizationHint() [instance] :2948
int TextInputControl::AutoCapitalizationHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_AutoCapitalizationHint()");
    return uPtr(_editor)->AutoCapitalizationHint();
}

// public void set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint value) [instance] :2948
void TextInputControl::AutoCapitalizationHint(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_AutoCapitalizationHint(Fuse.Controls.AutoCapitalizationHint)");
    uPtr(_editor)->AutoCapitalizationHint(value);
}

// public Fuse.Controls.AutoCorrectHint get_AutoCorrectHint() [instance] :2944
int TextInputControl::AutoCorrectHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_AutoCorrectHint()");
    return uPtr(_editor)->AutoCorrectHint();
}

// public void set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint value) [instance] :2944
void TextInputControl::AutoCorrectHint(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_AutoCorrectHint(Fuse.Controls.AutoCorrectHint)");
    uPtr(_editor)->AutoCorrectHint(value);
}

// public float4 get_CaretColor() [instance] :2936
::g::Uno::Float4 TextInputControl::CaretColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_CaretColor()");
    return uPtr(_editor)->CaretColor();
}

// public void set_CaretColor(float4 value) [instance] :2936
void TextInputControl::CaretColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_CaretColor(float4)");
    uPtr(_editor)->CaretColor(value);
}

// protected internal Fuse.Controls.TextEdit get_Editor() [instance] :2827
::g::Fuse::Controls::TextEdit* TextInputControl::Editor()
{
    return _editor;
}

// private Fuse.Visual FocusDelegator() [instance] :2844
::g::Fuse::Visual* TextInputControl::FocusDelegator()
{
    return _editor;
}

// public Fuse.Font get_Font() [instance] :2916
::g::Fuse::Font* TextInputControl::Font()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_Font()");
    return uPtr(_editor)->Font();
}

// public void set_Font(Fuse.Font value) [instance] :2916
void TextInputControl::Font(::g::Fuse::Font* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_Font(Fuse.Font)");
    uPtr(_editor)->Font(value);
}

// public float get_FontSize() [instance] :2912
float TextInputControl::FontSize()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_FontSize()");
    return uPtr(_editor)->FontSize();
}

// public void set_FontSize(float value) [instance] :2912
void TextInputControl::FontSize(float value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_FontSize(float)");
    uPtr(_editor)->FontSize(value);
}

// public Fuse.Controls.TextInputHint get_InputHint() [instance] :2932
int TextInputControl::InputHint()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_InputHint()");
    return uPtr(_editor)->InputHint();
}

// public void set_InputHint(Fuse.Controls.TextInputHint value) [instance] :2932
void TextInputControl::InputHint(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_InputHint(Fuse.Controls.TextInputHint)");
    uPtr(_editor)->InputHint(value);
}

// public bool get_IsReadOnly() [instance] :2926
bool TextInputControl::IsReadOnly()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_IsReadOnly()");
    return uPtr(_editor)->IsReadOnly();
}

// public void set_IsReadOnly(bool value) [instance] :2926
void TextInputControl::IsReadOnly(bool value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_IsReadOnly(bool)");
    uPtr(_editor)->IsReadOnly(value);
}

// public float get_LineSpacing() [instance] :2908
float TextInputControl::LineSpacing()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_LineSpacing()");
    return uPtr(_editor)->LineSpacing();
}

// public void set_LineSpacing(float value) [instance] :2908
void TextInputControl::LineSpacing(float value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_LineSpacing(float)");
    uPtr(_editor)->LineSpacing(value);
}

// public int get_MaxLength() [instance] :2900
int TextInputControl::MaxLength()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_MaxLength()");
    return uPtr(_editor)->MaxLength();
}

// public void set_MaxLength(int value) [instance] :2900
void TextInputControl::MaxLength(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_MaxLength(int)");
    uPtr(_editor)->MaxLength(value);
}

// private void OnTapped(object sender, Uno.EventArgs args) [instance] :2839
void TextInputControl::OnTapped(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "OnTapped(object,Uno.EventArgs)");
    ::g::Fuse::Input::Focus::GiveTo(this);
}

// public float4 get_SelectionColor() [instance] :2940
::g::Uno::Float4 TextInputControl::SelectionColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_SelectionColor()");
    return uPtr(_editor)->SelectionColor();
}

// public void set_SelectionColor(float4 value) [instance] :2940
void TextInputControl::SelectionColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_SelectionColor(float4)");
    uPtr(_editor)->SelectionColor(value);
}

// public void SetValue(string v, Uno.UX.IPropertyListener origin) [instance] :2882
void TextInputControl::SetValue(uString* v, uObject* origin)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "SetValue(string,Uno.UX.IPropertyListener)");
    uPtr(_editor)->SetValue(v, origin);

    if (origin == this)
        OnPropertyChanged1(::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]), (uObject*)this);
}

// public Fuse.Controls.TextAlignment get_TextAlignment() [instance] :2918
int TextInputControl::TextAlignment()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextAlignment()");
    return uPtr(_editor)->TextAlignment();
}

// public void set_TextAlignment(Fuse.Controls.TextAlignment value) [instance] :2918
void TextInputControl::TextAlignment(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextAlignment(Fuse.Controls.TextAlignment)");
    uPtr(_editor)->TextAlignment(value);
}

// public float4 get_TextColor() [instance] :2920
::g::Uno::Float4 TextInputControl::TextColor()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextColor()");
    return uPtr(_editor)->TextColor();
}

// public void set_TextColor(float4 value) [instance] :2920
void TextInputControl::TextColor(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextColor(float4)");
    uPtr(_editor)->TextColor(value);
}

// public Fuse.Controls.TextTruncation get_TextTruncation() [instance] :2922
int TextInputControl::TextTruncation()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextTruncation()");
    return uPtr(_editor)->TextTruncation();
}

// public void set_TextTruncation(Fuse.Controls.TextTruncation value) [instance] :2922
void TextInputControl::TextTruncation(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextTruncation(Fuse.Controls.TextTruncation)");
    uPtr(_editor)->TextTruncation(value);
}

// public Fuse.Controls.TextWrapping get_TextWrapping() [instance] :2904
int TextInputControl::TextWrapping()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_TextWrapping()");
    return uPtr(_editor)->TextWrapping();
}

// public void set_TextWrapping(Fuse.Controls.TextWrapping value) [instance] :2904
void TextInputControl::TextWrapping(int value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_TextWrapping(Fuse.Controls.TextWrapping)");
    uPtr(_editor)->TextWrapping(value);
}

// public string get_Value() [instance] :2878
uString* TextInputControl::Value()
{
    uStackFrame __("Fuse.Controls.TextInputControl", "get_Value()");
    return uPtr(_editor)->Value();
}

// public void set_Value(string value) [instance] :2879
void TextInputControl::Value(uString* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "set_Value(string)");
    SetValue(value, (uObject*)this);
}

// public void add_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :2894
void TextInputControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    uPtr(_editor)->add_ValueChanged(value);
}

// public void remove_ValueChanged(Uno.UX.ValueChangedHandler<string> value) [instance] :2895
void TextInputControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.TextInputControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<string>)");
    uPtr(_editor)->remove_ValueChanged(value);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextInputHint :843
uEnumType* TextInputHint_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextInputHint", ::g::Uno::Int_typeof(), 7);
    type->SetLiterals(
        "Default", 0LL,
        "Email", 1LL,
        "URL", 2LL,
        "Phone", 3LL,
        "Integer", 4LL,
        "Decimal", 5LL,
        "Number", 4LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextTruncation :869
uEnumType* TextTruncation_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextTruncation", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "Standard", 0LL,
        "None", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/textcontrols/$.uno
// ----------------------------------------------------------------------------------------------------------------

// public sealed class TextView :2781
// {
static void TextView_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::TextInputControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::String_typeof(), NULL), offsetof(::g::Fuse::Controls::TextInputControl_type, interface15));
    type->SetFields(98);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TextView__New3_fn, 0, true, type, 0));
}

::g::Fuse::Controls::TextInputControl_type* TextView_typeof()
{
    static uSStrong< ::g::Fuse::Controls::TextInputControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::TextInputControl_typeof();
    options.FieldCount = 98;
    options.InterfaceCount = 16;
    options.ObjectSize = sizeof(TextView);
    options.TypeSize = sizeof(::g::Fuse::Controls::TextInputControl_type);
    type = (::g::Fuse::Controls::TextInputControl_type*)uClassType::New("Fuse.Controls.TextView", options);
    type->fp_build_ = TextView_build;
    type->fp_ctor_ = (void*)TextView__New3_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))::g::Fuse::Controls::TextInputControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))::g::Fuse::Controls::TextInputControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))::g::Fuse::Controls::TextInputControl__remove_ValueChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::TextInputControl__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TextView() :2783
void TextView__ctor_7_fn(TextView* __this)
{
    __this->ctor_7();
}

// private static Fuse.Controls.TextEdit Create() :2787
void TextView__Create_fn(::g::Fuse::Controls::TextEdit** __retval)
{
    *__retval = TextView::Create();
}

// public TextView New() :2783
void TextView__New3_fn(TextView** __retval)
{
    *__retval = TextView::New3();
}

// public TextView() [instance] :2783
void TextView::ctor_7()
{
    uStackFrame __("Fuse.Controls.TextView", ".ctor()");
    ctor_6(TextView::Create());
}

// private static Fuse.Controls.TextEdit Create() [static] :2787
::g::Fuse::Controls::TextEdit* TextView::Create()
{
    uStackFrame __("Fuse.Controls.TextView", "Create()");
    return ::g::Fuse::Controls::MobileTextEdit::New3(true);
}

// public TextView New() [static] :2783
TextView* TextView::New3()
{
    TextView* obj1 = (TextView*)uNew(TextView_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Native/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public enum TextWrapping :815
uEnumType* TextWrapping_typeof()
{
    static uSStrong<uEnumType*> type;
    if (type != NULL) return type;

    type = uEnumType::New("Fuse.Controls.TextWrapping", ::g::Uno::Int_typeof(), 2);
    type->SetLiterals(
        "NoWrap", 0LL,
        "Wrap", 1LL);
    return type;
}

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/togglecontrols/$.uno
// ------------------------------------------------------------------------------------------------------------------

// public class ToggleControl :66
// {
// static ToggleControl() :66
static void ToggleControl__cctor_4_fn(uType* __type)
{
    ToggleControl::_valueName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[1/*"Value"*/]);
}

static void ToggleControl_build(uType* type)
{
    ::STRINGS[1] = uString::Const("Value");
    ::TYPES[145] = ::g::Fuse::Controls::Native::IToggleView_typeof();
    ::TYPES[146] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(ToggleControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(ToggleControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(ToggleControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(ToggleControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(ToggleControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(ToggleControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(ToggleControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(ToggleControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(ToggleControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(ToggleControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(ToggleControl_type, interface14),
        ::g::Fuse::Triggers::IValue_typeof()->MakeType(::g::Uno::Bool_typeof(), NULL), offsetof(ToggleControl_type, interface15),
        ::g::Fuse::Controls::Native::IToggleViewHost_typeof(), offsetof(ToggleControl_type, interface16),
        ::g::Fuse::Triggers::Actions::IToggleable_typeof(), offsetof(ToggleControl_type, interface17));
    type->SetFields(103,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::ToggleControl, _value), 0,
        ::TYPES[146/*Uno.UX.ValueChangedHandler<bool>*/], offsetof(::g::Fuse::Controls::ToggleControl, ValueChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::ToggleControl::_valueName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(7,
        new uFunction(".ctor", NULL, (void*)ToggleControl__New4_fn, 0, true, type, 0),
        new uFunction("SetValue", NULL, (void*)ToggleControl__SetValue_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Bool_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("Toggle", NULL, (void*)ToggleControl__Toggle_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_Value", NULL, (void*)ToggleControl__get_Value_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_Value", NULL, (void*)ToggleControl__set_Value_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("add_ValueChanged", NULL, (void*)ToggleControl__add_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[146/*Uno.UX.ValueChangedHandler<bool>*/]),
        new uFunction("remove_ValueChanged", NULL, (void*)ToggleControl__remove_ValueChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[146/*Uno.UX.ValueChangedHandler<bool>*/]));
}

ToggleControl_type* ToggleControl_typeof()
{
    static uSStrong<ToggleControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 106;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(ToggleControl);
    options.TypeSize = sizeof(ToggleControl_type);
    type = (ToggleControl_type*)uClassType::New("Fuse.Controls.ToggleControl", options);
    type->fp_build_ = ToggleControl_build;
    type->fp_ctor_ = (void*)ToggleControl__New4_fn;
    type->fp_cctor_ = ToggleControl__cctor_4_fn;
    type->fp_PushPropertiesToNativeView = (void(*)(::g::Fuse::Controls::Control*))ToggleControl__PushPropertiesToNativeView_fn;
    type->interface16.fp_OnValueChanged = (void(*)(uObject*, bool*))ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn;
    type->interface15.fp_get_Value = (void(*)(uObject*, uTRef))ToggleControl__get_Value_fn;
    type->interface15.fp_set_Value = (void(*)(uObject*, void*))ToggleControl__set_Value_fn;
    type->interface15.fp_add_ValueChanged = (void(*)(uObject*, uDelegate*))ToggleControl__add_ValueChanged_fn;
    type->interface15.fp_remove_ValueChanged = (void(*)(uObject*, uDelegate*))ToggleControl__remove_ValueChanged_fn;
    type->interface17.fp_Toggle = (void(*)(uObject*))ToggleControl__Toggle_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated ToggleControl() :66
void ToggleControl__ctor_7_fn(ToggleControl* __this)
{
    __this->ctor_7();
}

// private void Fuse.Controls.Native.IToggleViewHost.OnValueChanged(bool newValue) :124
void ToggleControl__FuseControlsNativeIToggleViewHostOnValueChanged_fn(ToggleControl* __this, bool* newValue)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "Fuse.Controls.Native.IToggleViewHost.OnValueChanged(bool)");
    bool newValue_ = *newValue;
    __this->SetValue(newValue_, NULL);
}

// public generated ToggleControl New() :66
void ToggleControl__New4_fn(ToggleControl** __retval)
{
    *__retval = ToggleControl::New4();
}

// protected void OnValueChanged(bool value, Uno.UX.IPropertyListener origin) :118
void ToggleControl__OnValueChanged_fn(ToggleControl* __this, bool* value, uObject* origin)
{
    __this->OnValueChanged(*value, origin);
}

// protected override sealed void PushPropertiesToNativeView() :109
void ToggleControl__PushPropertiesToNativeView_fn(ToggleControl* __this)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "PushPropertiesToNativeView()");
    uObject* tv = __this->ToggleView();

    if (tv != NULL)
        ::g::Fuse::Controls::Native::IToggleView::Value(uInterface(uPtr(tv), ::TYPES[145/*Fuse.Controls.Native.IToggleView*/]), __this->Value());
}

// public void SetValue(bool value, Uno.UX.IPropertyListener origin) :85
void ToggleControl__SetValue_fn(ToggleControl* __this, bool* value, uObject* origin)
{
    __this->SetValue(*value, origin);
}

// public void Toggle() :104
void ToggleControl__Toggle_fn(ToggleControl* __this)
{
    __this->Toggle();
}

// private Fuse.Controls.Native.IToggleView get_ToggleView() :72
void ToggleControl__get_ToggleView_fn(ToggleControl* __this, uObject** __retval)
{
    *__retval = __this->ToggleView();
}

// public bool get_Value() :82
void ToggleControl__get_Value_fn(ToggleControl* __this, bool* __retval)
{
    *__retval = __this->Value();
}

// public void set_Value(bool value) :83
void ToggleControl__set_Value_fn(ToggleControl* __this, bool* value)
{
    __this->Value(*value);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) :129
void ToggleControl__add_ValueChanged_fn(ToggleControl* __this, uDelegate* value)
{
    __this->add_ValueChanged(value);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) :129
void ToggleControl__remove_ValueChanged_fn(ToggleControl* __this, uDelegate* value)
{
    __this->remove_ValueChanged(value);
}

::g::Uno::UX::Selector ToggleControl::_valueName_;

// public generated ToggleControl() [instance] :66
void ToggleControl::ctor_7()
{
    ctor_6();
}

// protected void OnValueChanged(bool value, Uno.UX.IPropertyListener origin) [instance] :118
void ToggleControl::OnValueChanged(bool value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "OnValueChanged(bool,Uno.UX.IPropertyListener)");
    bool value_ = value;

    if (::g::Uno::Delegate::op_Inequality(ValueChanged1, NULL))
        uPtr(ValueChanged1)->Invoke(2, this, (::g::Fuse::Scripting::BoolChangedArgs*)::g::Fuse::Scripting::BoolChangedArgs::New3(value_));
}

// public void SetValue(bool value, Uno.UX.IPropertyListener origin) [instance] :85
void ToggleControl::SetValue(bool value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "SetValue(bool,Uno.UX.IPropertyListener)");

    if (_value != value)
    {
        _value = value;
        OnValueChanged(value, origin);
        OnPropertyChanged1(ToggleControl::_valueName(), origin);

        if (origin != NULL)
        {
            uObject* tv = ToggleView();

            if (tv != NULL)
                ::g::Fuse::Controls::Native::IToggleView::Value(uInterface(uPtr(tv), ::TYPES[145/*Fuse.Controls.Native.IToggleView*/]), value);
        }
    }
}

// public void Toggle() [instance] :104
void ToggleControl::Toggle()
{
    uStackFrame __("Fuse.Controls.ToggleControl", "Toggle()");
    Value(!Value());
}

// private Fuse.Controls.Native.IToggleView get_ToggleView() [instance] :72
uObject* ToggleControl::ToggleView()
{
    return uAs<uObject*>(NativeView(), ::TYPES[145/*Fuse.Controls.Native.IToggleView*/]);
}

// public bool get_Value() [instance] :82
bool ToggleControl::Value()
{
    return _value;
}

// public void set_Value(bool value) [instance] :83
void ToggleControl::Value(bool value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "set_Value(bool)");
    SetValue(value, (uObject*)this);
}

// public generated void add_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) [instance] :129
void ToggleControl::add_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "add_ValueChanged(Uno.UX.ValueChangedHandler<bool>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ValueChanged1, value), ::TYPES[146/*Uno.UX.ValueChangedHandler<bool>*/]);
}

// public generated void remove_ValueChanged(Uno.UX.ValueChangedHandler<bool> value) [instance] :129
void ToggleControl::remove_ValueChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.ToggleControl", "remove_ValueChanged(Uno.UX.ValueChangedHandler<bool>)");
    ValueChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ValueChanged1, value), ::TYPES[146/*Uno.UX.ValueChangedHandler<bool>*/]);
}

// public generated ToggleControl New() [static] :66
ToggleControl* ToggleControl::New4()
{
    ToggleControl* obj1 = (ToggleControl*)uNew(ToggleControl_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/backgrounds/$.uno
// -----------------------------------------------------------------------------------------------------------

// public class TopFrameBackground :172
// {
static void TopFrameBackground_build(uType* type)
{
    ::TYPES[3] = ::g::Uno::EventHandler1_typeof()->MakeType(::g::Fuse::Platform::SystemUIWillResizeEventArgs_typeof(), NULL);
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(95);
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)TopFrameBackground__New2_fn, 0, true, type, 0));
}

::g::Fuse::Controls::Control_type* TopFrameBackground_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Control_typeof();
    options.FieldCount = 95;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(TopFrameBackground);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.TopFrameBackground", options);
    type->fp_build_ = TopFrameBackground_build;
    type->fp_ctor_ = (void*)TopFrameBackground__New2_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))TopFrameBackground__GetContentSize_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))TopFrameBackground__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))TopFrameBackground__OnUnrooted_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated TopFrameBackground() :172
void TopFrameBackground__ctor_5_fn(TopFrameBackground* __this)
{
    __this->ctor_5();
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :194
void TopFrameBackground__GetContentSize_fn(TopFrameBackground* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "GetContentSize(Fuse.LayoutParams)");
    ::g::Uno::Float2 x = ::g::Uno::Float2__op_Division1(::g::Fuse::Platform::SystemUI::TopFrame().Size(), uPtr(::g::Fuse::AppBase::Current2())->PixelsPerPoint());
    return *__retval = x, void();
    return *__retval = ::g::Uno::Float2__New2(0.0f, 0.0f), void();
}

// public generated TopFrameBackground New() :172
void TopFrameBackground__New2_fn(TopFrameBackground** __retval)
{
    *__retval = TopFrameBackground::New2();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) :189
void TopFrameBackground__OnFrameResized_fn(TopFrameBackground* __this, uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    __this->OnFrameResized(sender, args);
}

// protected override sealed void OnRooted() :174
void TopFrameBackground__OnRooted_fn(TopFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnRooted()");
    ::g::Fuse::Controls::Control__OnRooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::add_TopFrameWillResize(uDelegate::New(::TYPES[3/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)TopFrameBackground__OnFrameResized_fn, __this));
}

// protected override sealed void OnUnrooted() :181
void TopFrameBackground__OnUnrooted_fn(TopFrameBackground* __this)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnUnrooted()");
    ::g::Fuse::Controls::Control__OnUnrooted_fn(__this);
    ::g::Fuse::Platform::SystemUI::remove_TopFrameWillResize(uDelegate::New(::TYPES[3/*Uno.EventHandler<Fuse.Platform.SystemUIWillResizeEventArgs>*/], (void*)TopFrameBackground__OnFrameResized_fn, __this));
}

// public generated TopFrameBackground() [instance] :172
void TopFrameBackground::ctor_5()
{
    ctor_4();
}

// private extern void OnFrameResized(object sender, Fuse.Platform.SystemUIWillResizeEventArgs args) [instance] :189
void TopFrameBackground::OnFrameResized(uObject* sender, ::g::Fuse::Platform::SystemUIWillResizeEventArgs* args)
{
    uStackFrame __("Fuse.Controls.TopFrameBackground", "OnFrameResized(object,Fuse.Platform.SystemUIWillResizeEventArgs)");
    InvalidateLayout(2);
}

// public generated TopFrameBackground New() [static] :172
TopFrameBackground* TopFrameBackground::New2()
{
    TopFrameBackground* obj1 = (TopFrameBackground*)uNew(TopFrameBackground_typeof());
    obj1->ctor_5();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal sealed extern class TreeRenderer :2423
// {
static void TreeRenderer_build(uType* type)
{
    ::STRINGS[0] = uString::Const("AndroidAppearance");
    ::TYPES[147] = ::g::Uno::Collections::Dictionary_typeof()->MakeType(::g::Fuse::Elements::Element_typeof(), ::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL);
    ::TYPES[148] = TreeRenderer__ViewGroup_typeof();
    ::TYPES[38] = ::g::Fuse::ICommonViewport_typeof();
    ::TYPES[13] = ::g::Fuse::Controls::Control_typeof();
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    ::TYPES[45] = ::g::Fuse::Controls::Native::ViewHandle_typeof();
    ::TYPES[149] = ::g::Fuse::Controls::Native::IView_typeof();
    type->SetInterfaces(
        ::g::Fuse::Elements::ITreeRenderer_typeof(), offsetof(TreeRenderer_type, interface0));
    type->SetFields(0,
        ::g::Uno::Action1_typeof()->MakeType(::TYPES[45/*Fuse.Controls.Native.ViewHandle*/], NULL), offsetof(::g::Fuse::Controls::TreeRenderer, _clearRoot), 0,
        ::TYPES[147/*Uno.Collections.Dictionary<Fuse.Elements.Element, Fuse.Controls.Native.ViewHandle>*/], offsetof(::g::Fuse::Controls::TreeRenderer, _elements), 0,
        ::g::Uno::Action1_typeof()->MakeType(::TYPES[45/*Fuse.Controls.Native.ViewHandle*/], NULL), offsetof(::g::Fuse::Controls::TreeRenderer, _setRoot), 0);
}

TreeRenderer_type* TreeRenderer_typeof()
{
    static uSStrong<TreeRenderer_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 3;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(TreeRenderer);
    options.TypeSize = sizeof(TreeRenderer_type);
    type = (TreeRenderer_type*)uClassType::New("Fuse.Controls.TreeRenderer", options);
    type->fp_build_ = TreeRenderer_build;
    type->interface0.fp_RootingStarted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererRootingStarted_fn;
    type->interface0.fp_Rooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererRooted_fn;
    type->interface0.fp_Unrooted = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererUnrooted_fn;
    type->interface0.fp_BackgroundChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::Drawing::Brush*))TreeRenderer__FuseElementsITreeRendererBackgroundChanged_fn;
    type->interface0.fp_TransformChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererTransformChanged_fn;
    type->interface0.fp_Placed = (void(*)(uObject*, ::g::Fuse::Elements::Element*))TreeRenderer__FuseElementsITreeRendererPlaced_fn;
    type->interface0.fp_IsVisibleChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererIsVisibleChanged_fn;
    type->interface0.fp_IsEnabledChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererIsEnabledChanged_fn;
    type->interface0.fp_OpacityChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, float*))TreeRenderer__FuseElementsITreeRendererOpacityChanged_fn;
    type->interface0.fp_ClipToBoundsChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererClipToBoundsChanged_fn;
    type->interface0.fp_HitTestModeChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, bool*))TreeRenderer__FuseElementsITreeRendererHitTestModeChanged_fn;
    type->interface0.fp_ZOrderChanged = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Uno::Collections::List*))TreeRenderer__FuseElementsITreeRendererZOrderChanged_fn;
    type->interface0.fp_Measure = (void(*)(uObject*, ::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*, bool*))TreeRenderer__FuseElementsITreeRendererMeasure_fn;
    return type;
}

// public TreeRenderer(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) :2450
void TreeRenderer__ctor__fn(TreeRenderer* __this, uDelegate* setRoot, uDelegate* clearRoot)
{
    __this->ctor_(setRoot, clearRoot);
}

// private void Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element e, Fuse.Drawing.Brush background) :2524
void TreeRenderer__FuseElementsITreeRendererBackgroundChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Drawing::Brush* background)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.BackgroundChanged(Fuse.Elements.Element,Fuse.Drawing.Brush)");
    ::g::Fuse::Controls::Native::ViewHandle* ret3;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret3), ret3))->SetBackgroundColor(::g::Fuse::Controls::Extensions::GetColor(background));
}

// private void Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element e, bool clipToBounds) :2566
void TreeRenderer__FuseElementsITreeRendererClipToBoundsChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* clipToBounds)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.ClipToBoundsChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret4;
    bool clipToBounds_ = *clipToBounds;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret4), ret4);

    if (uPtr(viewHandle)->IsViewGroup())
        uPtr(viewHandle)->SetClipToBounds(clipToBounds_);
}

// private void Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element e, bool enabled) :2573
void TreeRenderer__FuseElementsITreeRendererHitTestModeChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* enabled)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.HitTestModeChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret5;
    bool enabled_ = *enabled;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret5), ret5);

    if (uPtr(viewHandle)->IsViewGroup())
        uPtr(viewHandle)->SetHitTestEnabled(enabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element e, bool isEnabled) :2556
void TreeRenderer__FuseElementsITreeRendererIsEnabledChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isEnabled)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.IsEnabledChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret6;
    bool isEnabled_ = *isEnabled;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret6), ret6))->SetEnabled(isEnabled_);
}

// private void Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element e, bool isVisible) :2551
void TreeRenderer__FuseElementsITreeRendererIsVisibleChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, bool* isVisible)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.IsVisibleChanged(Fuse.Elements.Element,bool)");
    ::g::Fuse::Controls::Native::ViewHandle* ret7;
    bool isVisible_ = *isVisible;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret7), ret7))->SetIsVisible(isVisible_);
}

// private bool Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element e, Fuse.LayoutParams lp, float2& size) :2591
void TreeRenderer__FuseElementsITreeRendererMeasure_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* size, bool* __retval)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Measure(Fuse.Elements.Element,Fuse.LayoutParams,float2&)");
    ::g::Fuse::Controls::Native::ViewHandle* ret8;
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret8), ret8);
    bool canMeasure = uPtr(viewHandle)->IsLeafView || uIs(viewHandle, ::TYPES[148/*Fuse.Controls.TreeRenderer.ViewGroup*/]);
    *size = canMeasure ? viewHandle->Measure(lp_, ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(e)->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]))) : ::g::Uno::Float2__New1(0.0f);
    return *__retval = canMeasure, void();
}

// private void Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element e, float opacity) :2561
void TreeRenderer__FuseElementsITreeRendererOpacityChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, float* opacity)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.OpacityChanged(Fuse.Elements.Element,float)");
    ::g::Fuse::Controls::Native::ViewHandle* ret9;
    float opacity_ = *opacity;
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret9), ret9))->SetOpacity(opacity_);
}

// private void Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element e) :2543
void TreeRenderer__FuseElementsITreeRendererPlaced_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Placed(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret10;
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(uPtr(e)->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]));
    ::g::Uno::Int2 actualPosition = ::g::Uno::Int2__op_Explicit(::g::Uno::Float2__op_Multiply1(e->ActualPosition(), density));
    ::g::Uno::Int2 actualSize = ::g::Uno::Int2__op_Explicit(::g::Uno::Float2__op_Multiply1(e->ActualSize(), density));
    uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret10), ret10))->UpdateViewRect1(actualPosition.X, actualPosition.Y, actualSize.X, actualSize.Y);
}

// private void Fuse.Elements.ITreeRenderer.Rooted(Fuse.Elements.Element e) :2498
void TreeRenderer__FuseElementsITreeRendererRooted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
}

// private void Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element e) :2458
void TreeRenderer__FuseElementsITreeRendererRootingStarted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.RootingStarted(Fuse.Elements.Element)");
    bool ret11;
    ::g::Fuse::Controls::Native::ViewHandle* v = __this->InstantiateView(e);

    if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]))->ViewHandle(v);

    if (uIs((::g::Fuse::Visual*)uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]) && (::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]), &ret11), ret11))
        uPtr(__this->GetParentViewGroup(e))->InsertChild1(v, 0);
    else
        uPtr(__this->_setRoot)->InvokeVoid(v);

    ::g::Fuse::Controls::Native::Android::InputDispatch::AddListener(v, e);
    ::g::Uno::Collections::Dictionary__Add_fn(uPtr(__this->_elements), e, v);
}

// private void Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element e) :2529
void TreeRenderer__FuseElementsITreeRendererTransformChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.TransformChanged(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret12;
    ::g::Fuse::Controls::Native::ViewHandle* viewHandle = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret12), ret12);
    ::g::Uno::Float4x4 transform = uPtr(e)->LocalTransform();
    ::g::Uno::Float2 size = e->ActualSize();
    float density = ::g::Fuse::ICommonViewport::PixelsPerPoint(uInterface(uPtr(e->Viewport()), ::TYPES[38/*Fuse.ICommonViewport*/]));
    ::g::Fuse::Visual* p = e->Parent();

    if (uIs(p, ::TYPES[13/*Fuse.Controls.Control*/]))
        uPtr(uCast< ::g::Fuse::Controls::Control*>(p, ::TYPES[13/*Fuse.Controls.Control*/]))->CompensateForScrollView(&transform);

    uPtr(viewHandle)->UpdateViewRect(transform, size, density);
}

// private void Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element e) :2500
void TreeRenderer__FuseElementsITreeRendererUnrooted_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.Unrooted(Fuse.Elements.Element)");
    bool ret13;
    ::g::Fuse::Controls::Native::ViewHandle* ret14;
    ::g::Fuse::Controls::Native::ViewHandle* ret15;
    ::g::Fuse::Controls::Native::ViewHandle* ret16;
    ::g::Fuse::Controls::Native::ViewHandle* ret17;
    bool ret18;

    if (uIs((::g::Fuse::Visual*)uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]) && (::g::Uno::Collections::Dictionary__ContainsKey_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]), &ret13), ret13))
        uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]), &ret14), ret14))->RemoveChild((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret15), ret15));
    else
        uPtr(__this->_clearRoot)->InvokeVoid((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret16), ret16));

    ::g::Fuse::Controls::Native::ViewHandle* v = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), e, &ret17), ret17);
    ::g::Uno::Collections::Dictionary__Remove_fn(uPtr(__this->_elements), e, &ret18);
    ::g::Fuse::Controls::Native::Android::InputDispatch::RemoveListener(v);

    if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]);

        if (uPtr(c)->ViewHandle() != NULL)
        {
            uPtr(uPtr(c)->ViewHandle())->Dispose();
            c->ViewHandle(NULL);
        }

        uPtr(c)->NativeView(NULL);
    }
}

// private void Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element e, Uno.Collections.List<Fuse.Visual> zorder) :2580
void TreeRenderer__FuseElementsITreeRendererZOrderChanged_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Uno::Collections::List* zorder)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "Fuse.Elements.ITreeRenderer.ZOrderChanged(Fuse.Elements.Element,Uno.Collections.List<Fuse.Visual>)");
    ::g::Fuse::Controls::Native::ViewHandle* ret19;
    int len = uPtr(zorder)->Count();

    for (int i = 0; i < len; i++)
    {
        ::g::Fuse::Elements::Element* child = uAs< ::g::Fuse::Elements::Element*>(uPtr(e)->GetZOrderChild(i), ::TYPES[10/*Fuse.Elements.Element*/]);

        if (child != NULL)
            uPtr((::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(__this->_elements), child, &ret19), ret19))->BringToFront();
    }
}

// private Fuse.Controls.Native.ViewHandle GetParentViewGroup(Fuse.Elements.Element e) :2476
void TreeRenderer__GetParentViewGroup_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Controls::Native::ViewHandle** __retval)
{
    *__retval = __this->GetParentViewGroup(e);
}

// private object InstantiateTemplate(Fuse.Elements.Element e) :2620
void TreeRenderer__InstantiateTemplate_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->InstantiateTemplate(e);
}

// private Fuse.Controls.Native.ViewHandle InstantiateView(Fuse.Elements.Element e) :2601
void TreeRenderer__InstantiateView_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, ::g::Fuse::Controls::Native::ViewHandle** __retval)
{
    *__retval = __this->InstantiateView(e);
}

// private object InstantiateViewOld(Fuse.Elements.Element e) :2627
void TreeRenderer__InstantiateViewOld_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e, uObject** __retval)
{
    *__retval = __this->InstantiateViewOld(e);
}

// public TreeRenderer New(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) :2450
void TreeRenderer__New1_fn(uDelegate* setRoot, uDelegate* clearRoot, TreeRenderer** __retval)
{
    *__retval = TreeRenderer::New1(setRoot, clearRoot);
}

// private void TransformIntoViewGroup(Fuse.Elements.Element e) :2485
void TreeRenderer__TransformIntoViewGroup_fn(TreeRenderer* __this, ::g::Fuse::Elements::Element* e)
{
    __this->TransformIntoViewGroup(e);
}

// public TreeRenderer(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) [instance] :2450
void TreeRenderer::ctor_(uDelegate* setRoot, uDelegate* clearRoot)
{
    _elements = ((::g::Uno::Collections::Dictionary*)::g::Uno::Collections::Dictionary::New1(::TYPES[147/*Uno.Collections.Dictionary<Fuse.Elements.Element, Fuse.Controls.Native.ViewHandle>*/]));
    _setRoot = setRoot;
    _clearRoot = clearRoot;
}

// private Fuse.Controls.Native.ViewHandle GetParentViewGroup(Fuse.Elements.Element e) [instance] :2476
::g::Fuse::Controls::Native::ViewHandle* TreeRenderer::GetParentViewGroup(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "GetParentViewGroup(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret20;
    ::g::Fuse::Controls::Native::ViewHandle* ret21;
    ::g::Fuse::Elements::Element* parent = uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]);
    ::g::Fuse::Controls::Native::ViewHandle* parentView = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), parent, &ret20), ret20);

    if (!uPtr(parentView)->IsViewGroup())
        TransformIntoViewGroup(parent);

    return (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), parent, &ret21), ret21);
}

// private object InstantiateTemplate(Fuse.Elements.Element e) [instance] :2620
uObject* TreeRenderer::InstantiateTemplate(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateTemplate(Fuse.Elements.Element)");
    ::g::Uno::UX::Template* t = uPtr(e)->FindTemplate(::STRINGS[0/*"AndroidAppe...*/]);
    return (t != NULL) ? (uObject*)uPtr(t)->New1() : NULL;
}

// private Fuse.Controls.Native.ViewHandle InstantiateView(Fuse.Elements.Element e) [instance] :2601
::g::Fuse::Controls::Native::ViewHandle* TreeRenderer::InstantiateView(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateView(Fuse.Elements.Element)");
    uObject* ind1;
    ::g::Fuse::Controls::Native::ViewHandle* appearance = uAs< ::g::Fuse::Controls::Native::ViewHandle*>((ind1 = InstantiateTemplate(e), (ind1 != NULL) ? ind1 : (uObject*)InstantiateViewOld(e)), ::TYPES[45/*Fuse.Controls.Native.ViewHandle*/]);

    if (appearance != NULL)
    {
        if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
        {
            uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]))->ViewHandle(appearance);

            if (uIs(appearance, ::TYPES[149/*Fuse.Controls.Native.IView*/]))
                uPtr(uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]))->NativeView((uObject*)appearance);
        }

        return appearance;
    }
    else
        return ::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup();
}

// private object InstantiateViewOld(Fuse.Elements.Element e) [instance] :2627
uObject* TreeRenderer::InstantiateViewOld(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "InstantiateViewOld(Fuse.Elements.Element)");

    if (uIs(e, ::TYPES[13/*Fuse.Controls.Control*/]))
    {
        ::g::Fuse::Controls::Control* c = uCast< ::g::Fuse::Controls::Control*>(e, ::TYPES[13/*Fuse.Controls.Control*/]);
        return uPtr(c)->InstantiateNativeView();
    }

    return NULL;
}

// private void TransformIntoViewGroup(Fuse.Elements.Element e) [instance] :2485
void TreeRenderer::TransformIntoViewGroup(::g::Fuse::Elements::Element* e)
{
    uStackFrame __("Fuse.Controls.TreeRenderer", "TransformIntoViewGroup(Fuse.Elements.Element)");
    ::g::Fuse::Controls::Native::ViewHandle* ret22;
    ::g::Fuse::Controls::Native::ViewHandle* ret23;
    ::g::Fuse::Controls::Native::ViewHandle* parentView = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), uCast< ::g::Fuse::Elements::Element*>(uPtr(e)->Parent(), ::TYPES[10/*Fuse.Elements.Element*/]), &ret22), ret22);
    ::g::Fuse::Controls::Native::ViewHandle* child = (::g::Uno::Collections::Dictionary__get_Item_fn(uPtr(_elements), e, &ret23), ret23);
    int index = uPtr(parentView)->IndexOfChild(child);
    parentView->RemoveChild(child);
    TreeRenderer__ViewGroup* viewGroup = TreeRenderer__ViewGroup::New3(child);
    ::g::Fuse::Controls::Native::ViewHandle::CopyState(child, viewGroup);
    uPtr(child)->ResetState();
    parentView->InsertChild1(viewGroup, index);
    ::g::Uno::Collections::Dictionary__set_Item_fn(uPtr(_elements), e, viewGroup);
}

// public TreeRenderer New(Uno.Action<Fuse.Controls.Native.ViewHandle> setRoot, Uno.Action<Fuse.Controls.Native.ViewHandle> clearRoot) [static] :2450
TreeRenderer* TreeRenderer::New1(uDelegate* setRoot, uDelegate* clearRoot)
{
    TreeRenderer* obj2 = (TreeRenderer*)uNew(TreeRenderer_typeof());
    obj2->ctor_(setRoot, clearRoot);
    return obj2;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// internal sealed extern class TreeRendererPanel :2881
// {
static void TreeRendererPanel_build(uType* type)
{
    ::TYPES[48] = ::g::Uno::Action1_typeof()->MakeType(::g::Fuse::Controls::Native::ViewHandle_typeof(), NULL);
    ::TYPES[150] = ::g::Fuse::Controls::INativeViewRoot_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::TYPES[150/*Fuse.Controls.INativeViewRoot*/], offsetof(::g::Fuse::Controls::TreeRendererPanel, _nativeViewHost), 0,
        ::g::Fuse::Controls::TreeRenderer_typeof(), offsetof(::g::Fuse::Controls::TreeRendererPanel, _treeRenderer), 0);
}

::g::Fuse::Controls::Control_type* TreeRendererPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 105;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(TreeRendererPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.TreeRendererPanel", options);
    type->fp_build_ = TreeRendererPanel_build;
    type->fp_get_TreeRenderer = (void(*)(::g::Fuse::Elements::Element*, uObject**))TreeRendererPanel__get_TreeRenderer_fn;
    type->fp_get_VisualContext = (void(*)(::g::Fuse::Visual*, int*))TreeRendererPanel__get_VisualContext_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public TreeRendererPanel(Fuse.Controls.INativeViewRoot nativeViewHost) :2893
void TreeRendererPanel__ctor_7_fn(TreeRendererPanel* __this, uObject* nativeViewHost)
{
    __this->ctor_7(nativeViewHost);
}

// private void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) :2904
void TreeRendererPanel__ClearRoot_fn(TreeRendererPanel* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->ClearRoot(viewHandle);
}

// public TreeRendererPanel New(Fuse.Controls.INativeViewRoot nativeViewHost) :2893
void TreeRendererPanel__New4_fn(uObject* nativeViewHost, TreeRendererPanel** __retval)
{
    *__retval = TreeRendererPanel::New4(nativeViewHost);
}

// private void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) :2899
void TreeRendererPanel__SetRoot_fn(TreeRendererPanel* __this, ::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    __this->SetRoot(viewHandle);
}

// public override sealed Fuse.Elements.ITreeRenderer get_TreeRenderer() :2888
void TreeRendererPanel__get_TreeRenderer_fn(TreeRendererPanel* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "get_TreeRenderer()");
    return *__retval = (uObject*)__this->_treeRenderer, void();
}

// public override sealed Fuse.VisualContext get_VisualContext() :2885
void TreeRendererPanel__get_VisualContext_fn(TreeRendererPanel* __this, int* __retval)
{
    return *__retval = 2, void();
}

// public TreeRendererPanel(Fuse.Controls.INativeViewRoot nativeViewHost) [instance] :2893
void TreeRendererPanel::ctor_7(uObject* nativeViewHost)
{
    ctor_6();
    _nativeViewHost = nativeViewHost;
    _treeRenderer = ::g::Fuse::Controls::TreeRenderer::New1(uDelegate::New(::TYPES[48/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)TreeRendererPanel__SetRoot_fn, this), uDelegate::New(::TYPES[48/*Uno.Action<Fuse.Controls.Native.ViewHandle>*/], (void*)TreeRendererPanel__ClearRoot_fn, this));
}

// private void ClearRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :2904
void TreeRendererPanel::ClearRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "ClearRoot(Fuse.Controls.Native.ViewHandle)");
    ::g::Fuse::Controls::INativeViewRoot::Remove(uInterface(uPtr(_nativeViewHost), ::TYPES[150/*Fuse.Controls.INativeViewRoot*/]), viewHandle);
}

// private void SetRoot(Fuse.Controls.Native.ViewHandle viewHandle) [instance] :2899
void TreeRendererPanel::SetRoot(::g::Fuse::Controls::Native::ViewHandle* viewHandle)
{
    uStackFrame __("Fuse.Controls.TreeRendererPanel", "SetRoot(Fuse.Controls.Native.ViewHandle)");
    ::g::Fuse::Controls::INativeViewRoot::Add(uInterface(uPtr(_nativeViewHost), ::TYPES[150/*Fuse.Controls.INativeViewRoot*/]), viewHandle);
}

// public TreeRendererPanel New(Fuse.Controls.INativeViewRoot nativeViewHost) [static] :2893
TreeRendererPanel* TreeRendererPanel::New4(uObject* nativeViewHost)
{
    TreeRendererPanel* obj1 = (TreeRendererPanel*)uNew(TreeRendererPanel_typeof());
    obj1->ctor_7(nativeViewHost);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// public sealed class URISchemeEventArgs :779
// {
static void URISchemeEventArgs_build(uType* type)
{
    ::STRINGS[167] = uString::Const("url");
    ::TYPES[87] = ::g::Fuse::Scripting::IEventSerializer_typeof();
    type->SetInterfaces(
        ::g::Fuse::Scripting::IScriptEvent_typeof(), offsetof(URISchemeEventArgs_type, interface0));
    type->SetFields(0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::URISchemeEventArgs, Url), 0);
    type->Reflection.SetFields(1,
        new uField("Url", 0));
    type->Reflection.SetFunctions(1,
        new uFunction(".ctor", NULL, (void*)URISchemeEventArgs__New2_fn, 0, true, type, 1, ::g::Uno::String_typeof()));
}

URISchemeEventArgs_type* URISchemeEventArgs_typeof()
{
    static uSStrong<URISchemeEventArgs_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Uno::EventArgs_typeof();
    options.FieldCount = 1;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(URISchemeEventArgs);
    options.TypeSize = sizeof(URISchemeEventArgs_type);
    type = (URISchemeEventArgs_type*)uClassType::New("Fuse.Controls.URISchemeEventArgs", options);
    type->fp_build_ = URISchemeEventArgs_build;
    type->interface0.fp_Serialize = (void(*)(uObject*, uObject*))URISchemeEventArgs__FuseScriptingIScriptEventSerialize_fn;
    return type;
}

// public URISchemeEventArgs(string url) :783
void URISchemeEventArgs__ctor_1_fn(URISchemeEventArgs* __this, uString* url)
{
    __this->ctor_1(url);
}

// private void Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer s) :788
void URISchemeEventArgs__FuseScriptingIScriptEventSerialize_fn(URISchemeEventArgs* __this, uObject* s)
{
    uStackFrame __("Fuse.Controls.URISchemeEventArgs", "Fuse.Scripting.IScriptEvent.Serialize(Fuse.Scripting.IEventSerializer)");
    ::g::Fuse::Scripting::IEventSerializer::AddString(uInterface(uPtr(s), ::TYPES[87/*Fuse.Scripting.IEventSerializer*/]), ::STRINGS[167/*"url"*/], __this->Url);
}

// public URISchemeEventArgs New(string url) :783
void URISchemeEventArgs__New2_fn(uString* url, URISchemeEventArgs** __retval)
{
    *__retval = URISchemeEventArgs::New2(url);
}

// public URISchemeEventArgs(string url) [instance] :783
void URISchemeEventArgs::ctor_1(uString* url)
{
    ctor_();
    Url = url;
}

// public URISchemeEventArgs New(string url) [static] :783
URISchemeEventArgs* URISchemeEventArgs::New2(uString* url)
{
    URISchemeEventArgs* obj1 = (URISchemeEventArgs*)uNew(URISchemeEventArgs_typeof());
    obj1->ctor_1(url);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Video/0.47.7/$.uno
// ----------------------------------------------------------------------------------------------

// public sealed class UrlVideoSource :109
// {
static void UrlVideoSource_build(uType* type)
{
    type->SetFields(1,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::UrlVideoSource, _url), 0);
    type->Reflection.SetFunctions(3,
        new uFunction(".ctor", NULL, (void*)UrlVideoSource__New1_fn, 0, true, type, 0),
        new uFunction("get_Url", NULL, (void*)UrlVideoSource__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)UrlVideoSource__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()));
}

uType* UrlVideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::VideoSource_typeof();
    options.FieldCount = 2;
    options.ObjectSize = sizeof(UrlVideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.UrlVideoSource", options);
    type->fp_build_ = UrlVideoSource_build;
    type->fp_ctor_ = (void*)UrlVideoSource__New1_fn;
    return type;
}

// public generated UrlVideoSource() :109
void UrlVideoSource__ctor_1_fn(UrlVideoSource* __this)
{
    __this->ctor_1();
}

// public generated UrlVideoSource New() :109
void UrlVideoSource__New1_fn(UrlVideoSource** __retval)
{
    *__retval = UrlVideoSource::New1();
}

// public string get_Url() :114
void UrlVideoSource__get_Url_fn(UrlVideoSource* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :115
void UrlVideoSource__set_Url_fn(UrlVideoSource* __this, uString* value)
{
    __this->Url(value);
}

// public generated UrlVideoSource() [instance] :109
void UrlVideoSource::ctor_1()
{
    ctor_();
}

// public string get_Url() [instance] :114
uString* UrlVideoSource::Url()
{
    return _url;
}

// public void set_Url(string value) [instance] :115
void UrlVideoSource::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.UrlVideoSource", "set_Url(string)");
    _url = value;
    OnSourceChanged();
}

// public generated UrlVideoSource New() [static] :109
UrlVideoSource* UrlVideoSource::New1()
{
    UrlVideoSource* obj1 = (UrlVideoSource*)uNew(UrlVideoSource_typeof());
    obj1->ctor_1();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Video/0.47.7/$.uno
// ----------------------------------------------------------------------------------------------

// public sealed class Video :197
// {
// static Video() :197
static void Video__cctor_4_fn(uType* __type)
{
    Video::_progressName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[92/*"Progress"*/]);
}

static void Video_build(uType* type)
{
    ::STRINGS[92] = uString::Const("Progress");
    ::TYPES[151] = ::g::Fuse::Controls::FileVideoSource_typeof();
    ::TYPES[152] = ::g::Fuse::Controls::UrlVideoSource_typeof();
    ::TYPES[153] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[1] = ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL);
    ::TYPES[154] = ::g::Fuse::Visual_typeof()->MakeMethod(9/*RemoveAllChildren<Fuse.Controls.VideoImpl.VideoVisual>*/, ::g::Fuse::Controls::VideoImpl::VideoVisual_typeof(), NULL);
    ::TYPES[155] = ::g::Fuse::Triggers::IPlayback_typeof();
    ::TYPES[156] = ::g::Fuse::Triggers::IMediaPlayback_typeof();
    ::TYPES[157] = ::g::Fuse::Triggers::IProgress_typeof();
    ::TYPES[32] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(Video_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(Video_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(Video_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(Video_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Video_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(Video_type, interface7),
        ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/], offsetof(Video_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(Video_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(Video_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(Video_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(Video_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(Video_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(Video_type, interface14),
        ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/], offsetof(Video_type, interface15),
        ::TYPES[155/*Fuse.Triggers.IPlayback*/], offsetof(Video_type, interface16),
        ::TYPES[157/*Fuse.Triggers.IProgress*/], offsetof(Video_type, interface17));
    type->SetFields(103,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Video, _autoPlay), 0,
        ::g::Fuse::Elements::Alignment_typeof(), offsetof(::g::Fuse::Controls::Video, _contentAlignment), 0,
        ::g::Uno::UX::FileSource_typeof(), offsetof(::g::Fuse::Controls::Video, _file), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Video, _hasScale9Margin), 0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Video, _isLooping), 0,
        ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/], offsetof(::g::Fuse::Controls::Video, _playback), 0,
        ::g::Uno::Float4_typeof(), offsetof(::g::Fuse::Controls::Video, _scale9Margin), 0,
        ::g::Fuse::Controls::VideoSource_typeof(), offsetof(::g::Fuse::Controls::Video, _source), 0,
        ::g::Fuse::Elements::StretchDirection_typeof(), offsetof(::g::Fuse::Controls::Video, _stretchDirection), 0,
        ::g::Fuse::Elements::StretchMode_typeof(), offsetof(::g::Fuse::Controls::Video, _stretchMode), 0,
        ::g::Fuse::Elements::StretchSizing_typeof(), offsetof(::g::Fuse::Controls::Video, _stretchSizing), 0,
        ::g::Uno::String_typeof(), offsetof(::g::Fuse::Controls::Video, _url), 0,
        ::g::Uno::Float_typeof(), offsetof(::g::Fuse::Controls::Video, _volume), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::Video, ParamChanged1), 0,
        ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], offsetof(::g::Fuse::Controls::Video, ProgressChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::Video, RenderParamChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::Video, SourceChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::Video::_progressName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(46,
        new uFunction("get_AutoPlay", NULL, (void*)Video__get_AutoPlay_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_AutoPlay", NULL, (void*)Video__set_AutoPlay_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction("get_CanPause", NULL, (void*)Video__get_CanPause_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanPlayTo", NULL, (void*)Video__get_CanPlayTo_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanResume", NULL, (void*)Video__get_CanResume_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanStop", NULL, (void*)Video__get_CanStop_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_ContentAlignment", NULL, (void*)Video__get_ContentAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_ContentAlignment", NULL, (void*)Video__set_ContentAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()),
        new uFunction("get_Duration", NULL, (void*)Video__get_Duration_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("get_File", NULL, (void*)Video__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)Video__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("get_IsLooping", NULL, (void*)Video__get_IsLooping_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_IsLooping", NULL, (void*)Video__set_IsLooping_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()),
        new uFunction(".ctor", NULL, (void*)Video__New4_fn, 0, true, type, 0),
        new uFunction("add_ParamChanged", NULL, (void*)Video__add_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_ParamChanged", NULL, (void*)Video__remove_ParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("Pause", NULL, (void*)Video__Pause_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("PlayTo", NULL, (void*)Video__PlayTo_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Position", NULL, (void*)Video__get_Position_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Position", NULL, (void*)Video__set_Position_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("get_Progress", NULL, (void*)Video__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("set_Progress", NULL, (void*)Video__set_Progress_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Double_typeof()),
        new uFunction("add_ProgressChanged", NULL, (void*)Video__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)Video__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("add_RenderParamChanged", NULL, (void*)Video__add_RenderParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_RenderParamChanged", NULL, (void*)Video__remove_RenderParamChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("Resume", NULL, (void*)Video__Resume_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_Scale9Margin", NULL, (void*)Video__get_Scale9Margin_fn, 0, false, ::g::Uno::Float4_typeof(), 0),
        new uFunction("set_Scale9Margin", NULL, (void*)Video__set_Scale9Margin_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float4_typeof()),
        new uFunction("SetPlayback", NULL, (void*)Video__SetPlayback_fn, 0, false, uVoid_typeof(), 1, ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/]),
        new uFunction("SetProgress", NULL, (void*)Video__SetProgress_fn, 0, false, uVoid_typeof(), 2, ::g::Uno::Double_typeof(), ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Source", NULL, (void*)Video__get_Source_fn, 0, false, ::g::Fuse::Controls::VideoSource_typeof(), 0),
        new uFunction("set_Source", NULL, (void*)Video__set_Source_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::VideoSource_typeof()),
        new uFunction("add_SourceChanged", NULL, (void*)Video__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)Video__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("Stop", NULL, (void*)Video__Stop_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("get_StretchDirection", NULL, (void*)Video__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Video__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Video__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Video__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()),
        new uFunction("get_StretchSizing", NULL, (void*)Video__get_StretchSizing_fn, 0, false, ::g::Fuse::Elements::StretchSizing_typeof(), 0),
        new uFunction("set_StretchSizing", NULL, (void*)Video__set_StretchSizing_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchSizing_typeof()),
        new uFunction("get_Url", NULL, (void*)Video__get_Url_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_Url", NULL, (void*)Video__set_Url_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_Volume", NULL, (void*)Video__get_Volume_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_Volume", NULL, (void*)Video__set_Volume_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()));
}

Video_type* Video_typeof()
{
    static uSStrong<Video_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 121;
    options.InterfaceCount = 18;
    options.ObjectSize = sizeof(Video);
    options.TypeSize = sizeof(Video_type);
    type = (Video_type*)uClassType::New("Fuse.Controls.Video", options);
    type->fp_build_ = Video_build;
    type->fp_ctor_ = (void*)Video__New4_fn;
    type->fp_cctor_ = Video__cctor_4_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))Video__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))Video__OnUnrooted_fn;
    type->interface15.fp_get_Volume = (void(*)(uObject*, float*))Video__get_Volume_fn;
    type->interface15.fp_set_Volume = (void(*)(uObject*, float*))Video__set_Volume_fn;
    type->interface15.fp_get_Position = (void(*)(uObject*, double*))Video__get_Position_fn;
    type->interface15.fp_set_Position = (void(*)(uObject*, double*))Video__set_Position_fn;
    type->interface15.fp_get_Duration = (void(*)(uObject*, double*))Video__get_Duration_fn;
    type->interface16.fp_Stop = (void(*)(uObject*))Video__Stop_fn;
    type->interface16.fp_Pause = (void(*)(uObject*))Video__Pause_fn;
    type->interface16.fp_Resume = (void(*)(uObject*))Video__Resume_fn;
    type->interface16.fp_PlayTo = (void(*)(uObject*, double*))Video__PlayTo_fn;
    type->interface16.fp_get_Progress = (void(*)(uObject*, double*))Video__get_Progress_fn;
    type->interface16.fp_set_Progress = (void(*)(uObject*, double*))Video__set_Progress_fn;
    type->interface16.fp_get_CanStop = (void(*)(uObject*, bool*))Video__get_CanStop_fn;
    type->interface16.fp_get_CanPause = (void(*)(uObject*, bool*))Video__get_CanPause_fn;
    type->interface16.fp_get_CanResume = (void(*)(uObject*, bool*))Video__get_CanResume_fn;
    type->interface16.fp_get_CanPlayTo = (void(*)(uObject*, bool*))Video__get_CanPlayTo_fn;
    type->interface17.fp_get_Progress = (void(*)(uObject*, double*))Video__get_Progress_fn;
    type->interface17.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))Video__add_ProgressChanged_fn;
    type->interface17.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))Video__remove_ProgressChanged_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Video() :197
void Video__ctor_7_fn(Video* __this)
{
    __this->ctor_7();
}

// public bool get_AutoPlay() :327
void Video__get_AutoPlay_fn(Video* __this, bool* __retval)
{
    *__retval = __this->AutoPlay();
}

// public void set_AutoPlay(bool value) :328
void Video__set_AutoPlay_fn(Video* __this, bool* value)
{
    __this->AutoPlay(*value);
}

// public bool get_CanPause() :492
void Video__get_CanPause_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanPause();
}

// public bool get_CanPlayTo() :482
void Video__get_CanPlayTo_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanPlayTo();
}

// public bool get_CanResume() :497
void Video__get_CanResume_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanResume();
}

// public bool get_CanStop() :487
void Video__get_CanStop_fn(Video* __this, bool* __retval)
{
    *__retval = __this->CanStop();
}

// private void ClearSource(Fuse.Controls.VideoSource source) :232
void Video__ClearSource_fn(Video* __this, ::g::Fuse::Controls::VideoSource* source)
{
    __this->ClearSource(source);
}

// public Fuse.Elements.Alignment get_ContentAlignment() :399
void Video__get_ContentAlignment_fn(Video* __this, int* __retval)
{
    *__retval = __this->ContentAlignment();
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) :400
void Video__set_ContentAlignment_fn(Video* __this, int* value)
{
    __this->ContentAlignment(*value);
}

// public double get_Duration() :530
void Video__get_Duration_fn(Video* __this, double* __retval)
{
    *__retval = __this->Duration();
}

// public Uno.UX.FileSource get_File() :258
void Video__get_File_fn(Video* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :259
void Video__set_File_fn(Video* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public bool get_IsLooping() :310
void Video__get_IsLooping_fn(Video* __this, bool* __retval)
{
    *__retval = __this->IsLooping();
}

// public void set_IsLooping(bool value) :311
void Video__set_IsLooping_fn(Video* __this, bool* value)
{
    __this->IsLooping(*value);
}

// public generated Video New() :197
void Video__New4_fn(Video** __retval)
{
    *__retval = Video::New4();
}

// private void OnParamChanged() :454
void Video__OnParamChanged_fn(Video* __this)
{
    __this->OnParamChanged();
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) :558
void Video__OnProgressChanged_fn(Video* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnProgressChanged(sender, args);
}

// private void OnRenderParamChanged() :448
void Video__OnRenderParamChanged_fn(Video* __this)
{
    __this->OnRenderParamChanged();
}

// protected override sealed void OnRooted() :427
void Video__OnRooted_fn(Video* __this)
{
    uStackFrame __("Fuse.Controls.Video", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
    ::g::Uno::Collections::ICollection::Add_ex(uInterface(uPtr(__this->Children()), ::TYPES[1/*Uno.Collections.ICollection<Fuse.Node>*/]), ::g::Fuse::Controls::VideoImpl::VideoVisual::New2());
}

// private void OnSourceChanged() :460
void Video__OnSourceChanged_fn(Video* __this)
{
    __this->OnSourceChanged();
}

// protected override sealed void OnUnrooted() :433
void Video__OnUnrooted_fn(Video* __this)
{
    uStackFrame __("Fuse.Controls.Video", "OnUnrooted()");
    __this->RemoveAllChildren(::TYPES[154/*Fuse.Visual.RemoveAllChildren<Fuse.Controls.VideoImpl.VideoVisual>*/]);
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// private void OnVideoSourceChanged(object sender, Uno.EventArgs args) :227
void Video__OnVideoSourceChanged_fn(Video* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnVideoSourceChanged(sender, args);
}

// public generated void add_ParamChanged(Uno.EventHandler value) :443
void Video__add_ParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_ParamChanged(value);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) :443
void Video__remove_ParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_ParamChanged(value);
}

// public void Pause() :501
void Video__Pause_fn(Video* __this)
{
    __this->Pause();
}

// private Fuse.Triggers.IMediaPlayback get_Playback() :538
void Video__get_Playback_fn(Video* __this, uObject** __retval)
{
    *__retval = __this->Playback();
}

// private void set_Playback(Fuse.Triggers.IMediaPlayback value) :539
void Video__set_Playback_fn(Video* __this, uObject* value)
{
    __this->Playback(value);
}

// public void PlayTo(double progress) :474
void Video__PlayTo_fn(Video* __this, double* progress)
{
    __this->PlayTo(*progress);
}

// public double get_Position() :524
void Video__get_Position_fn(Video* __this, double* __retval)
{
    *__retval = __this->Position();
}

// public void set_Position(double value) :525
void Video__set_Position_fn(Video* __this, double* value)
{
    __this->Position(*value);
}

// public double get_Progress() :517
void Video__get_Progress_fn(Video* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public void set_Progress(double value) :518
void Video__set_Progress_fn(Video* __this, double* value)
{
    __this->Progress(*value);
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :533
void Video__add_ProgressChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :533
void Video__remove_ProgressChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// public generated void add_RenderParamChanged(Uno.EventHandler value) :440
void Video__add_RenderParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_RenderParamChanged(value);
}

// public generated void remove_RenderParamChanged(Uno.EventHandler value) :440
void Video__remove_RenderParamChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_RenderParamChanged(value);
}

// public void Resume() :507
void Video__Resume_fn(Video* __this)
{
    __this->Resume();
}

// public float4 get_Scale9Margin() :292
void Video__get_Scale9Margin_fn(Video* __this, ::g::Uno::Float4* __retval)
{
    *__retval = __this->Scale9Margin();
}

// public void set_Scale9Margin(float4 value) :293
void Video__set_Scale9Margin_fn(Video* __this, ::g::Uno::Float4* value)
{
    __this->Scale9Margin(*value);
}

// public void SetPlayback(Fuse.Triggers.IMediaPlayback playback) :565
void Video__SetPlayback_fn(Video* __this, uObject* playback)
{
    __this->SetPlayback(playback);
}

// public void SetProgress(double value, Uno.UX.IPropertyListener origin) :570
void Video__SetProgress_fn(Video* __this, double* value, uObject* origin)
{
    __this->SetProgress(*value, origin);
}

// private void SetSource(Fuse.Controls.VideoSource source) :241
void Video__SetSource_fn(Video* __this, ::g::Fuse::Controls::VideoSource* source)
{
    __this->SetSource(source);
}

// public Fuse.Controls.VideoSource get_Source() :208
void Video__get_Source_fn(Video* __this, ::g::Fuse::Controls::VideoSource** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(Fuse.Controls.VideoSource value) :209
void Video__set_Source_fn(Video* __this, ::g::Fuse::Controls::VideoSource* value)
{
    __this->Source(value);
}

// public generated void add_SourceChanged(Uno.EventHandler value) :446
void Video__add_SourceChanged_fn(Video* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :446
void Video__remove_SourceChanged_fn(Video* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// public void Stop() :466
void Video__Stop_fn(Video* __this)
{
    __this->Stop();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :361
void Video__get_StretchDirection_fn(Video* __this, int* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :362
void Video__set_StretchDirection_fn(Video* __this, int* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :344
void Video__get_StretchMode_fn(Video* __this, int* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :345
void Video__set_StretchMode_fn(Video* __this, int* value)
{
    __this->StretchMode(*value);
}

// public Fuse.Elements.StretchSizing get_StretchSizing() :380
void Video__get_StretchSizing_fn(Video* __this, int* __retval)
{
    *__retval = __this->StretchSizing();
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) :381
void Video__set_StretchSizing_fn(Video* __this, int* value)
{
    __this->StretchSizing(*value);
}

// public string get_Url() :276
void Video__get_Url_fn(Video* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :277
void Video__set_Url_fn(Video* __this, uString* value)
{
    __this->Url(value);
}

// public float get_Volume() :416
void Video__get_Volume_fn(Video* __this, float* __retval)
{
    *__retval = __this->Volume();
}

// public void set_Volume(float value) :417
void Video__set_Volume_fn(Video* __this, float* value)
{
    __this->Volume(*value);
}

::g::Uno::UX::Selector Video::_progressName_;

// public generated Video() [instance] :197
void Video::ctor_7()
{
    _scale9Margin = ::g::Uno::Float4__New1(10.0f);
    _stretchMode = 5;
    _stretchSizing = 1;
    _contentAlignment = 10;
    _volume = 1.0f;
    ctor_6();
}

// public bool get_AutoPlay() [instance] :327
bool Video::AutoPlay()
{
    return _autoPlay;
}

// public void set_AutoPlay(bool value) [instance] :328
void Video::AutoPlay(bool value)
{
    uStackFrame __("Fuse.Controls.Video", "set_AutoPlay(bool)");

    if (_autoPlay != value)
    {
        _autoPlay = value;
        OnParamChanged();
    }
}

// public bool get_CanPause() [instance] :492
bool Video::CanPause()
{
    return true;
}

// public bool get_CanPlayTo() [instance] :482
bool Video::CanPlayTo()
{
    uStackFrame __("Fuse.Controls.Video", "get_CanPlayTo()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IPlayback::CanPlayTo(uInterface(uPtr(Playback()), ::TYPES[155/*Fuse.Triggers.IPlayback*/])) : false;
}

// public bool get_CanResume() [instance] :497
bool Video::CanResume()
{
    return true;
}

// public bool get_CanStop() [instance] :487
bool Video::CanStop()
{
    return true;
}

// private void ClearSource(Fuse.Controls.VideoSource source) [instance] :232
void Video::ClearSource(::g::Fuse::Controls::VideoSource* source)
{
    if (uIs(source, ::TYPES[151/*Fuse.Controls.FileVideoSource*/]))
        File(NULL);
    else if (uIs(source, ::TYPES[152/*Fuse.Controls.UrlVideoSource*/]))
        Url(NULL);
}

// public Fuse.Elements.Alignment get_ContentAlignment() [instance] :399
int Video::ContentAlignment()
{
    return _contentAlignment;
}

// public void set_ContentAlignment(Fuse.Elements.Alignment value) [instance] :400
void Video::ContentAlignment(int value)
{
    uStackFrame __("Fuse.Controls.Video", "set_ContentAlignment(Fuse.Elements.Alignment)");

    if (_contentAlignment != value)
    {
        _contentAlignment = value;
        OnRenderParamChanged();
    }
}

// public double get_Duration() [instance] :530
double Video::Duration()
{
    uStackFrame __("Fuse.Controls.Video", "get_Duration()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IMediaPlayback::Duration(uInterface(uPtr(Playback()), ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/])) : 0.0;
}

// public Uno.UX.FileSource get_File() [instance] :258
::g::Uno::UX::FileSource* Video::File()
{
    return _file;
}

// public void set_File(Uno.UX.FileSource value) [instance] :259
void Video::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_File(Uno.UX.FileSource)");

    if (_file != value)
    {
        _file = value;
        OnSourceChanged();
    }
}

// public bool get_IsLooping() [instance] :310
bool Video::IsLooping()
{
    return _isLooping;
}

// public void set_IsLooping(bool value) [instance] :311
void Video::IsLooping(bool value)
{
    uStackFrame __("Fuse.Controls.Video", "set_IsLooping(bool)");

    if (_isLooping != value)
    {
        _isLooping = value;
        OnParamChanged();
    }
}

// private void OnParamChanged() [instance] :454
void Video::OnParamChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(ParamChanged1, NULL))
        uPtr(ParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) [instance] :558
void Video::OnProgressChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.Video", "OnProgressChanged(object,Uno.EventArgs)");
    ::g::Uno::UX::ValueChangedArgs* ret2;
    OnPropertyChanged(Video::_progressName());

    if (::g::Uno::Delegate::op_Inequality(ProgressChanged1, NULL))
        uPtr(ProgressChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[153/*Uno.UX.ValueChangedArgs<double>*/], uCRef(Progress()), &ret2), ret2));
}

// private void OnRenderParamChanged() [instance] :448
void Video::OnRenderParamChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnRenderParamChanged()");

    if (::g::Uno::Delegate::op_Inequality(RenderParamChanged1, NULL))
        uPtr(RenderParamChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnSourceChanged() [instance] :460
void Video::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.Video", "OnSourceChanged()");

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnVideoSourceChanged(object sender, Uno.EventArgs args) [instance] :227
void Video::OnVideoSourceChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.Video", "OnVideoSourceChanged(object,Uno.EventArgs)");
    SetSource(_source);
}

// public generated void add_ParamChanged(Uno.EventHandler value) [instance] :443
void Video::add_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_ParamChanged(Uno.EventHandler value) [instance] :443
void Video::remove_ParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_ParamChanged(Uno.EventHandler)");
    ParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public void Pause() [instance] :501
void Video::Pause()
{
    uStackFrame __("Fuse.Controls.Video", "Pause()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Pause(uInterface(uPtr(Playback()), ::TYPES[155/*Fuse.Triggers.IPlayback*/]));
}

// private Fuse.Triggers.IMediaPlayback get_Playback() [instance] :538
uObject* Video::Playback()
{
    return _playback;
}

// private void set_Playback(Fuse.Triggers.IMediaPlayback value) [instance] :539
void Video::Playback(uObject* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Playback(Fuse.Triggers.IMediaPlayback)");

    if (_playback != NULL)
        ::g::Fuse::Triggers::IProgress::remove_ProgressChanged(uInterface(uPtr(_playback), ::TYPES[157/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], (void*)Video__OnProgressChanged_fn, this));

    _playback = value;

    if (_playback != NULL)
        ::g::Fuse::Triggers::IProgress::add_ProgressChanged(uInterface(uPtr(_playback), ::TYPES[157/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], (void*)Video__OnProgressChanged_fn, this));

    if (IsRootingCompleted())
        OnProgressChanged(NULL, NULL);
}

// public void PlayTo(double progress) [instance] :474
void Video::PlayTo(double progress)
{
    uStackFrame __("Fuse.Controls.Video", "PlayTo(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::PlayTo(uInterface(uPtr(Playback()), ::TYPES[155/*Fuse.Triggers.IPlayback*/]), progress);
}

// public double get_Position() [instance] :524
double Video::Position()
{
    uStackFrame __("Fuse.Controls.Video", "get_Position()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IMediaPlayback::Position(uInterface(uPtr(Playback()), ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/])) : 0.0;
}

// public void set_Position(double value) [instance] :525
void Video::Position(double value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Position(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IMediaPlayback::Position(uInterface(uPtr(Playback()), ::TYPES[156/*Fuse.Triggers.IMediaPlayback*/]), value);
}

// public double get_Progress() [instance] :517
double Video::Progress()
{
    uStackFrame __("Fuse.Controls.Video", "get_Progress()");
    return (Playback() != NULL) ? ::g::Fuse::Triggers::IPlayback::Progress(uInterface(uPtr(uAs<uObject*>(Playback(), ::TYPES[155/*Fuse.Triggers.IPlayback*/])), ::TYPES[155/*Fuse.Triggers.IPlayback*/])) : 0.0;
}

// public void set_Progress(double value) [instance] :518
void Video::Progress(double value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Progress(double)");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Progress(uInterface(uPtr(uAs<uObject*>(Playback(), ::TYPES[155/*Fuse.Triggers.IPlayback*/])), ::TYPES[155/*Fuse.Triggers.IPlayback*/]), value);
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :533
void Video::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :533
void Video::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void add_RenderParamChanged(Uno.EventHandler value) [instance] :440
void Video::add_RenderParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_RenderParamChanged(Uno.EventHandler)");
    RenderParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(RenderParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_RenderParamChanged(Uno.EventHandler value) [instance] :440
void Video::remove_RenderParamChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_RenderParamChanged(Uno.EventHandler)");
    RenderParamChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(RenderParamChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public void Resume() [instance] :507
void Video::Resume()
{
    uStackFrame __("Fuse.Controls.Video", "Resume()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Resume(uInterface(uPtr(Playback()), ::TYPES[155/*Fuse.Triggers.IPlayback*/]));
}

// public float4 get_Scale9Margin() [instance] :292
::g::Uno::Float4 Video::Scale9Margin()
{
    return _scale9Margin;
}

// public void set_Scale9Margin(float4 value) [instance] :293
void Video::Scale9Margin(::g::Uno::Float4 value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Scale9Margin(float4)");

    if (!_hasScale9Margin || ::g::Uno::Float4__op_Inequality(_scale9Margin, value))
    {
        _scale9Margin = value;
        _hasScale9Margin = true;
        OnParamChanged();
    }
}

// public void SetPlayback(Fuse.Triggers.IMediaPlayback playback) [instance] :565
void Video::SetPlayback(uObject* playback)
{
    uStackFrame __("Fuse.Controls.Video", "SetPlayback(Fuse.Triggers.IMediaPlayback)");
    Playback(playback);
}

// public void SetProgress(double value, Uno.UX.IPropertyListener origin) [instance] :570
void Video::SetProgress(double value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.Video", "SetProgress(double,Uno.UX.IPropertyListener)");

    if (origin != this)
        Progress(value);
}

// private void SetSource(Fuse.Controls.VideoSource source) [instance] :241
void Video::SetSource(::g::Fuse::Controls::VideoSource* source)
{
    uStackFrame __("Fuse.Controls.Video", "SetSource(Fuse.Controls.VideoSource)");

    if (uIs(source, ::TYPES[151/*Fuse.Controls.FileVideoSource*/]))
        File(uPtr(uCast< ::g::Fuse::Controls::FileVideoSource*>(source, ::TYPES[151/*Fuse.Controls.FileVideoSource*/]))->File());
    else if (uIs(source, ::TYPES[152/*Fuse.Controls.UrlVideoSource*/]))
        Url(uPtr(uCast< ::g::Fuse::Controls::UrlVideoSource*>(source, ::TYPES[152/*Fuse.Controls.UrlVideoSource*/]))->Url());
}

// public Fuse.Controls.VideoSource get_Source() [instance] :208
::g::Fuse::Controls::VideoSource* Video::Source()
{
    return _source;
}

// public void set_Source(Fuse.Controls.VideoSource value) [instance] :209
void Video::Source(::g::Fuse::Controls::VideoSource* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Source(Fuse.Controls.VideoSource)");

    if (_source != NULL)
    {
        uPtr(_source)->remove_SourceChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Video__OnVideoSourceChanged_fn, this));
        ClearSource(_source);
    }

    _source = value;

    if (_source != NULL)
    {
        uPtr(_source)->add_SourceChanged(uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)Video__OnVideoSourceChanged_fn, this));
        SetSource(_source);
    }
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :446
void Video::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :446
void Video::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.Video", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public void Stop() [instance] :466
void Video::Stop()
{
    uStackFrame __("Fuse.Controls.Video", "Stop()");

    if (Playback() != NULL)
        ::g::Fuse::Triggers::IPlayback::Stop(uInterface(uPtr(Playback()), ::TYPES[155/*Fuse.Triggers.IPlayback*/]));
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :361
int Video::StretchDirection()
{
    return _stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :362
void Video::StretchDirection(int value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (_stretchDirection != value)
    {
        _stretchDirection = value;
        OnRenderParamChanged();
    }
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :344
int Video::StretchMode()
{
    return _stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :345
void Video::StretchMode(int value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (_stretchMode != value)
    {
        _stretchMode = value;
        OnRenderParamChanged();
    }
}

// public Fuse.Elements.StretchSizing get_StretchSizing() [instance] :380
int Video::StretchSizing()
{
    return _stretchSizing;
}

// public void set_StretchSizing(Fuse.Elements.StretchSizing value) [instance] :381
void Video::StretchSizing(int value)
{
    uStackFrame __("Fuse.Controls.Video", "set_StretchSizing(Fuse.Elements.StretchSizing)");

    if (_stretchSizing != value)
    {
        _stretchSizing = value;
        OnRenderParamChanged();
    }
}

// public string get_Url() [instance] :276
uString* Video::Url()
{
    return _url;
}

// public void set_Url(string value) [instance] :277
void Video::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Url(string)");

    if (::g::Uno::String::op_Inequality(_url, value))
    {
        _url = value;
        OnSourceChanged();
    }
}

// public float get_Volume() [instance] :416
float Video::Volume()
{
    return _volume;
}

// public void set_Volume(float value) [instance] :417
void Video::Volume(float value)
{
    uStackFrame __("Fuse.Controls.Video", "set_Volume(float)");

    if (_volume != value)
    {
        _volume = value;
        OnParamChanged();
    }
}

// public generated Video New() [static] :197
Video* Video::New4()
{
    Video* obj1 = (Video*)uNew(Video_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Video/0.47.7/$.uno
// ----------------------------------------------------------------------------------------------

// public abstract class VideoSource :83
// {
static void VideoSource_build(uType* type)
{
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    type->SetFields(0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::VideoSource, SourceChanged1), 0);
    type->Reflection.SetFunctions(2,
        new uFunction("add_SourceChanged", NULL, (void*)VideoSource__add_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_SourceChanged", NULL, (void*)VideoSource__remove_SourceChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]));
}

uType* VideoSource_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.ObjectSize = sizeof(VideoSource);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.VideoSource", options);
    type->fp_build_ = VideoSource_build;
    return type;
}

// protected generated VideoSource() :83
void VideoSource__ctor__fn(VideoSource* __this)
{
    __this->ctor_();
}

// protected void OnSourceChanged() :87
void VideoSource__OnSourceChanged_fn(VideoSource* __this)
{
    __this->OnSourceChanged();
}

// public generated void add_SourceChanged(Uno.EventHandler value) :85
void VideoSource__add_SourceChanged_fn(VideoSource* __this, uDelegate* value)
{
    __this->add_SourceChanged(value);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) :85
void VideoSource__remove_SourceChanged_fn(VideoSource* __this, uDelegate* value)
{
    __this->remove_SourceChanged(value);
}

// protected generated VideoSource() [instance] :83
void VideoSource::ctor_()
{
}

// protected void OnSourceChanged() [instance] :87
void VideoSource::OnSourceChanged()
{
    uStackFrame __("Fuse.Controls.VideoSource", "OnSourceChanged()");

    if (::g::Uno::Delegate::op_Inequality(SourceChanged1, NULL))
        uPtr(SourceChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// public generated void add_SourceChanged(Uno.EventHandler value) [instance] :85
void VideoSource::add_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.VideoSource", "add_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_SourceChanged(Uno.EventHandler value) [instance] :85
void VideoSource::remove_SourceChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.VideoSource", "remove_SourceChanged(Uno.EventHandler)");
    SourceChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(SourceChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls/0.47.7/$.uno
// ----------------------------------------------------------------------------------------

// public sealed class Viewbox :419
// {
static void Viewbox_build(uType* type)
{
    ::TYPES[10] = ::g::Fuse::Elements::Element_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::ContentControl_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::ContentControl_type, interface14));
    type->SetFields(95,
        ::g::Uno::Float2_typeof(), offsetof(::g::Fuse::Controls::Viewbox, _scale), 0,
        ::g::Fuse::Internal::SizingContainer_typeof(), offsetof(::g::Fuse::Controls::Viewbox, sizing), 0);
    type->Reflection.SetFunctions(7,
        new uFunction("get_Content", NULL, (void*)Viewbox__get_Content1_fn, 0, false, ::TYPES[10/*Fuse.Elements.Element*/], 0),
        new uFunction("set_Content", NULL, (void*)Viewbox__set_Content1_fn, 0, false, uVoid_typeof(), 1, ::TYPES[10/*Fuse.Elements.Element*/]),
        new uFunction(".ctor", NULL, (void*)Viewbox__New3_fn, 0, true, type, 0),
        new uFunction("get_StretchDirection", NULL, (void*)Viewbox__get_StretchDirection_fn, 0, false, ::g::Fuse::Elements::StretchDirection_typeof(), 0),
        new uFunction("set_StretchDirection", NULL, (void*)Viewbox__set_StretchDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchDirection_typeof()),
        new uFunction("get_StretchMode", NULL, (void*)Viewbox__get_StretchMode_fn, 0, false, ::g::Fuse::Elements::StretchMode_typeof(), 0),
        new uFunction("set_StretchMode", NULL, (void*)Viewbox__set_StretchMode_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::StretchMode_typeof()));
}

::g::Fuse::Controls::ContentControl_type* Viewbox_typeof()
{
    static uSStrong< ::g::Fuse::Controls::ContentControl_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::ContentControl_typeof();
    options.FieldCount = 97;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(Viewbox);
    options.TypeSize = sizeof(::g::Fuse::Controls::ContentControl_type);
    type = (::g::Fuse::Controls::ContentControl_type*)uClassType::New("Fuse.Controls.Viewbox", options);
    type->fp_build_ = Viewbox_build;
    type->fp_ctor_ = (void*)Viewbox__New3_fn;
    type->fp_ArrangePaddingBox = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*))Viewbox__ArrangePaddingBox_fn;
    type->fp_GetContentSize = (void(*)(::g::Fuse::Elements::Element*, ::g::Fuse::LayoutParams*, ::g::Uno::Float2*))Viewbox__GetContentSize_fn;
    type->fp_IsMarginBoxDependent = (void(*)(::g::Fuse::Visual*, ::g::Fuse::Visual*, int*))Viewbox__IsMarginBoxDependent_fn;
    type->fp_PrependImplicitTransform = (void(*)(::g::Fuse::Visual*, ::g::Fuse::FastMatrix*))Viewbox__PrependImplicitTransform_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public generated Viewbox() :419
void Viewbox__ctor_6_fn(Viewbox* __this)
{
    __this->ctor_6();
}

// protected override sealed void ArrangePaddingBox(Fuse.LayoutParams lp) :472
void Viewbox__ArrangePaddingBox_fn(Viewbox* __this, ::g::Fuse::LayoutParams* lp)
{
    uStackFrame __("Fuse.Controls.Viewbox", "ArrangePaddingBox(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    uPtr(__this->sizing)->padding = __this->Padding();

    if (__this->Content1() != NULL)
        uPtr(__this->sizing)->align = uPtr(__this->Content1())->Alignment();

    ::g::Uno::Float2 contentDesiredSize = __this->GetNaturalContentSize();
    __this->_scale = uPtr(__this->sizing)->CalcScale(lp_.Size(), contentDesiredSize);
    __this->InvalidateLocalTransform();
    ::g::Uno::Float2 origin = uPtr(__this->sizing)->CalcOrigin(lp_.Size(), ::g::Uno::Float2__op_Multiply2(contentDesiredSize, __this->_scale));

    if ((__this->_scale.X > 1e-05f) && (__this->_scale.Y > 1e-05f))
        origin = ::g::Uno::Float2__op_Division2(origin, __this->_scale);

    if (__this->Content1() != NULL)
    {
        ::g::Fuse::LayoutParams nlp = lp_.CloneAndDerive();
        nlp.SetSize(contentDesiredSize, true, true);
        uPtr(__this->Content1())->ArrangeMarginBox(origin, nlp);
    }
}

// public new Fuse.Elements.Element get_Content() :424
void Viewbox__get_Content1_fn(Viewbox* __this, ::g::Fuse::Elements::Element** __retval)
{
    *__retval = __this->Content1();
}

// public new void set_Content(Fuse.Elements.Element value) :425
void Viewbox__set_Content1_fn(Viewbox* __this, ::g::Fuse::Elements::Element* value)
{
    __this->Content1(value);
}

// protected override sealed float2 GetContentSize(Fuse.LayoutParams lp) :464
void Viewbox__GetContentSize_fn(Viewbox* __this, ::g::Fuse::LayoutParams* lp, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.Viewbox", "GetContentSize(Fuse.LayoutParams)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    ::g::Uno::Float2 natural = __this->GetNaturalContentSize();
    uPtr(__this->sizing)->padding = ::g::Uno::Float4__New1(0.0f);
    ::g::Uno::Float2 r = uPtr(__this->sizing)->ExpandFillSize(natural, lp_);
    return *__retval = r, void();
}

// protected float2 GetNaturalContentSize() :459
void Viewbox__GetNaturalContentSize_fn(Viewbox* __this, ::g::Uno::Float2* __retval)
{
    *__retval = __this->GetNaturalContentSize();
}

// protected override sealed Fuse.LayoutDependent IsMarginBoxDependent(Fuse.Visual child) :507
void Viewbox__IsMarginBoxDependent_fn(Viewbox* __this, ::g::Fuse::Visual* child, int* __retval)
{
    return *__retval = 4, void();
}

// public generated Viewbox New() :419
void Viewbox__New3_fn(Viewbox** __retval)
{
    *__retval = Viewbox::New3();
}

// private void OnSizingChanged() :450
void Viewbox__OnSizingChanged_fn(Viewbox* __this)
{
    __this->OnSizingChanged();
}

// protected override sealed void PrependImplicitTransform(Fuse.FastMatrix m) :499
void Viewbox__PrependImplicitTransform_fn(Viewbox* __this, ::g::Fuse::FastMatrix* m)
{
    uStackFrame __("Fuse.Controls.Viewbox", "PrependImplicitTransform(Fuse.FastMatrix)");
    ::g::Fuse::Elements::Element__PrependImplicitTransform_fn(__this, m);

    if (::g::Uno::Vector::Length(__this->_scale) > 1e-05f)
        uPtr(m)->PrependScale1(::g::Uno::Float3__New2(__this->_scale.X, __this->_scale.Y, 1.0f));
}

// public Fuse.Elements.StretchDirection get_StretchDirection() :442
void Viewbox__get_StretchDirection_fn(Viewbox* __this, int* __retval)
{
    *__retval = __this->StretchDirection();
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) :443
void Viewbox__set_StretchDirection_fn(Viewbox* __this, int* value)
{
    __this->StretchDirection(*value);
}

// public Fuse.Elements.StretchMode get_StretchMode() :432
void Viewbox__get_StretchMode_fn(Viewbox* __this, int* __retval)
{
    *__retval = __this->StretchMode();
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) :433
void Viewbox__set_StretchMode_fn(Viewbox* __this, int* value)
{
    __this->StretchMode(*value);
}

// public generated Viewbox() [instance] :419
void Viewbox::ctor_6()
{
    sizing = ::g::Fuse::Internal::SizingContainer::New1();
    _scale = ::g::Uno::Float2__New1(1.0f);
    ctor_5();
}

// public new Fuse.Elements.Element get_Content() [instance] :424
::g::Fuse::Elements::Element* Viewbox::Content1()
{
    return uAs< ::g::Fuse::Elements::Element*>(Content(), ::TYPES[10/*Fuse.Elements.Element*/]);
}

// public new void set_Content(Fuse.Elements.Element value) [instance] :425
void Viewbox::Content1(::g::Fuse::Elements::Element* value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_Content(Fuse.Elements.Element)");
    Content(value);
}

// protected float2 GetNaturalContentSize() [instance] :459
::g::Uno::Float2 Viewbox::GetNaturalContentSize()
{
    uStackFrame __("Fuse.Controls.Viewbox", "GetNaturalContentSize()");
    return (Content1() == NULL) ? ::g::Uno::Float2__New1(0.0f) : uPtr(Content1())->GetMarginSize(::g::Fuse::LayoutParams__CreateEmpty());
}

// private void OnSizingChanged() [instance] :450
void Viewbox::OnSizingChanged()
{
    uStackFrame __("Fuse.Controls.Viewbox", "OnSizingChanged()");
    InvalidateLayout(2);
    InvalidateVisualComposition();
}

// public Fuse.Elements.StretchDirection get_StretchDirection() [instance] :442
int Viewbox::StretchDirection()
{
    uStackFrame __("Fuse.Controls.Viewbox", "get_StretchDirection()");
    return uPtr(sizing)->stretchDirection;
}

// public void set_StretchDirection(Fuse.Elements.StretchDirection value) [instance] :443
void Viewbox::StretchDirection(int value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_StretchDirection(Fuse.Elements.StretchDirection)");

    if (uPtr(sizing)->SetStretchDirection(value))
        OnSizingChanged();
}

// public Fuse.Elements.StretchMode get_StretchMode() [instance] :432
int Viewbox::StretchMode()
{
    uStackFrame __("Fuse.Controls.Viewbox", "get_StretchMode()");
    return uPtr(sizing)->stretchMode;
}

// public void set_StretchMode(Fuse.Elements.StretchMode value) [instance] :433
void Viewbox::StretchMode(int value)
{
    uStackFrame __("Fuse.Controls.Viewbox", "set_StretchMode(Fuse.Elements.StretchMode)");

    if (uPtr(sizing)->SetStretchMode(value))
        OnSizingChanged();
}

// public generated Viewbox New() [static] :419
Viewbox* Viewbox::New3()
{
    Viewbox* obj1 = (Viewbox*)uNew(Viewbox_typeof());
    obj1->ctor_6();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// private sealed class TreeRenderer.ViewGroup :2425
// {
static void TreeRenderer__ViewGroup_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::IDisposable_typeof(), offsetof(::g::Fuse::Controls::Native::ViewHandle_type, interface0));
    type->SetFields(3,
        ::g::Fuse::Controls::Native::ViewHandle_typeof(), offsetof(::g::Fuse::Controls::TreeRenderer__ViewGroup, _content), 0);
}

::g::Fuse::Controls::Native::ViewHandle_type* TreeRenderer__ViewGroup_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Native::ViewHandle_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Native::ViewHandle_typeof();
    options.FieldCount = 4;
    options.InterfaceCount = 1;
    options.ObjectSize = sizeof(TreeRenderer__ViewGroup);
    options.TypeSize = sizeof(::g::Fuse::Controls::Native::ViewHandle_type);
    type = (::g::Fuse::Controls::Native::ViewHandle_type*)uClassType::New("Fuse.Controls.TreeRenderer.ViewGroup", options);
    type->fp_build_ = TreeRenderer__ViewGroup_build;
    type->fp_Dispose = (void(*)(::g::Fuse::Controls::Native::ViewHandle*))TreeRenderer__ViewGroup__Dispose_fn;
    type->fp_Measure = (void(*)(::g::Fuse::Controls::Native::ViewHandle*, ::g::Fuse::LayoutParams*, float*, ::g::Uno::Float2*))TreeRenderer__ViewGroup__Measure_fn;
    type->interface0.fp_Dispose = (void(*)(uObject*))TreeRenderer__ViewGroup__Dispose_fn;
    return type;
}

// public ViewGroup(Fuse.Controls.Native.ViewHandle content) :2429
void TreeRenderer__ViewGroup__ctor_2_fn(TreeRenderer__ViewGroup* __this, ::g::Fuse::Controls::Native::ViewHandle* content)
{
    __this->ctor_2(content);
}

// public override sealed void Dispose() :2440
void TreeRenderer__ViewGroup__Dispose_fn(TreeRenderer__ViewGroup* __this)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", "Dispose()");
    ::g::Fuse::Controls::Native::ViewHandle__Dispose_fn(__this);
    uPtr(__this->_content)->Dispose();
    __this->_content = NULL;
}

// public override sealed float2 Measure(Fuse.LayoutParams lp, float density) :2435
void TreeRenderer__ViewGroup__Measure_fn(TreeRenderer__ViewGroup* __this, ::g::Fuse::LayoutParams* lp, float* density, ::g::Uno::Float2* __retval)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", "Measure(Fuse.LayoutParams,float)");
    ::g::Fuse::LayoutParams lp_ = *lp;
    float density_ = *density;
    return *__retval = uPtr(__this->_content)->Measure(lp_, density_), void();
}

// public ViewGroup New(Fuse.Controls.Native.ViewHandle content) :2429
void TreeRenderer__ViewGroup__New3_fn(::g::Fuse::Controls::Native::ViewHandle* content, TreeRenderer__ViewGroup** __retval)
{
    *__retval = TreeRenderer__ViewGroup::New3(content);
}

// public ViewGroup(Fuse.Controls.Native.ViewHandle content) [instance] :2429
void TreeRenderer__ViewGroup::ctor_2(::g::Fuse::Controls::Native::ViewHandle* content)
{
    uStackFrame __("Fuse.Controls.TreeRenderer.ViewGroup", ".ctor(Fuse.Controls.Native.ViewHandle)");
    ctor_(uPtr(::g::Fuse::Controls::Native::ViewFactory::InstantiateViewGroup())->NativeHandle);
    _content = content;
    InsertChild(content);
}

// public ViewGroup New(Fuse.Controls.Native.ViewHandle content) [static] :2429
TreeRenderer__ViewGroup* TreeRenderer__ViewGroup::New3(::g::Fuse::Controls::Native::ViewHandle* content)
{
    TreeRenderer__ViewGroup* obj1 = (TreeRenderer__ViewGroup*)uNew(TreeRenderer__ViewGroup_typeof());
    obj1->ctor_2(content);
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Primitives/0.47.7/shapes/$.uno
// ----------------------------------------------------------------------------------------------------------

// private sealed class Shape.Watcher :1002
// {
static void Shape__Watcher_build(uType* type)
{
    type->SetFields(0,
        ::g::Uno::Bool_typeof(), offsetof(::g::Fuse::Controls::Shape__Watcher, IsWatching), 0);
}

uType* Shape__Watcher_typeof()
{
    static uSStrong<uType*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.FieldCount = 1;
    options.ObjectSize = sizeof(Shape__Watcher);
    options.TypeSize = sizeof(uType);
    type = uClassType::New("Fuse.Controls.Shape.Watcher", options);
    type->fp_build_ = Shape__Watcher_build;
    type->fp_ctor_ = (void*)Shape__Watcher__New1_fn;
    return type;
}

// public generated Watcher() :1002
void Shape__Watcher__ctor__fn(Shape__Watcher* __this)
{
    __this->ctor_();
}

// public generated Watcher New() :1002
void Shape__Watcher__New1_fn(Shape__Watcher** __retval)
{
    *__retval = Shape__Watcher::New1();
}

// public generated Watcher() [instance] :1002
void Shape__Watcher::ctor_()
{
}

// public generated Watcher New() [static] :1002
Shape__Watcher* Shape__Watcher::New1()
{
    Shape__Watcher* obj1 = (Shape__Watcher*)uNew(Shape__Watcher_typeof());
    obj1->ctor_();
    return obj1;
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno
// ------------------------------------------------------------------------------------------------

// public partial sealed class WebView :126
// {
// static WebView() :551
static void WebView__cctor_4_fn(uType* __type)
{
    WebView::_urlName_ = ::g::Uno::UX::Selector__op_Implicit(::STRINGS[168/*"Url"*/]);
    ::g::Fuse::Scripting::ScriptClass::Register(__type, uArray::Init< ::g::Fuse::Scripting::ScriptMember*>(::TYPES[16/*Fuse.Scripting.ScriptMember[]*/], 3, (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[158/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[75/*"goto"*/], uDelegate::New(::TYPES[159/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.WebView, object[]>*/], (void*)WebView__setUrl_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[158/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[169/*"loadHtml"*/], uDelegate::New(::TYPES[159/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.WebView, object[]>*/], (void*)WebView__loadHtml_fn), 2), (::g::Fuse::Scripting::ScriptMethod1*)::g::Fuse::Scripting::ScriptMethod1::New1(::TYPES[158/*Fuse.Scripting.ScriptMethod<Fuse.Controls.WebView>*/], ::STRINGS[170/*"setBaseUrl"*/], uDelegate::New(::TYPES[159/*Uno.Action<Fuse.Scripting.Context, Fuse.Controls.WebView, object[]>*/], (void*)WebView__setBaseUrl_fn), 2)));
}

static void WebView_build(uType* type)
{
    ::STRINGS[168] = uString::Const("Url");
    ::STRINGS[75] = uString::Const("goto");
    ::STRINGS[169] = uString::Const("loadHtml");
    ::STRINGS[170] = uString::Const("setBaseUrl");
    ::STRINGS[23] = uString::Const("");
    ::STRINGS[171] = uString::Const("WebView.loadHtml takes either one url argument, or an url and a baseUrl argument");
    ::STRINGS[172] = uString::Const("/Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.WebView/0.47.7/$.uno");
    ::STRINGS[173] = uString::Const("about:blank");
    ::STRINGS[174] = uString::Const("WebView.setBaseUrl requires 1 string argument");
    ::STRINGS[175] = uString::Const("WebView.setUrl requires 1 string argument");
    ::STRINGS[176] = uString::Const("setUrl");
    ::STRINGS[177] = uString::Const("ZoomEnabled cannot be changed once rooted");
    ::TYPES[15] = ::g::Uno::Type_typeof();
    ::TYPES[16] = ::g::Fuse::Scripting::ScriptMember_typeof()->Array();
    ::TYPES[158] = ::g::Fuse::Scripting::ScriptMethod1_typeof()->MakeType(type, NULL);
    ::TYPES[159] = ::g::Uno::Action3_typeof()->MakeType(::g::Fuse::Scripting::Context_typeof(), type, uObject_typeof()->Array(), NULL);
    ::TYPES[160] = ::g::Fuse::Controls::FallbackWebViewClient_typeof();
    ::TYPES[0] = ::g::Uno::String_typeof()->Array();
    ::TYPES[43] = ::g::Fuse::Controls::IWebView_typeof();
    ::TYPES[161] = ::g::Fuse::Navigation::IBaseNavigation_typeof();
    ::TYPES[68] = ::g::Uno::String_typeof();
    ::TYPES[153] = ::g::Uno::UX::ValueChangedArgs_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[157] = ::g::Fuse::Triggers::IProgress_typeof();
    ::TYPES[39] = ::g::Fuse::Controls::ISourceReceiver_typeof();
    ::TYPES[32] = ::g::Uno::UX::ValueChangedHandler_typeof()->MakeType(::g::Uno::Double_typeof(), NULL);
    ::TYPES[30] = ::g::Uno::EventHandler_typeof();
    ::TYPES[31] = ::g::Fuse::Navigation::HistoryChangedHandler_typeof();
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(WebView_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(WebView_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(WebView_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(WebView_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(WebView_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(WebView_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(WebView_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(WebView_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(WebView_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(WebView_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(WebView_type, interface14),
        ::TYPES[43/*Fuse.Controls.IWebView*/], offsetof(WebView_type, interface15),
        ::TYPES[157/*Fuse.Triggers.IProgress*/], offsetof(WebView_type, interface16),
        ::TYPES[161/*Fuse.Navigation.IBaseNavigation*/], offsetof(WebView_type, interface17),
        ::TYPES[39/*Fuse.Controls.ISourceReceiver*/], offsetof(WebView_type, interface18));
    type->SetFields(103,
        ::TYPES[43/*Fuse.Controls.IWebView*/], offsetof(::g::Fuse::Controls::WebView, _fallbackClient), 0,
        ::g::Fuse::Controls::HTML_typeof(), offsetof(::g::Fuse::Controls::WebView, _html), 0,
        ::TYPES[43/*Fuse.Controls.IWebView*/], offsetof(::g::Fuse::Controls::WebView, _webViewClient), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::WebView, BeginLoading1), 0,
        ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/], offsetof(::g::Fuse::Controls::WebView, HistoryChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::WebView, PageLoaded1), 0,
        ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], offsetof(::g::Fuse::Controls::WebView, ProgressChanged1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::WebView, URISchemeHandler1), 0,
        ::TYPES[30/*Uno.EventHandler*/], offsetof(::g::Fuse::Controls::WebView, UrlChanged1), 0,
        ::g::Uno::UX::Selector_typeof(), (uintptr_t)&::g::Fuse::Controls::WebView::_urlName_, uFieldFlagsStatic);
    type->Reflection.SetFunctions(41,
        new uFunction("get_BaseUrl", NULL, (void*)WebView__get_BaseUrl_fn, 0, false, ::TYPES[68/*string*/], 0),
        new uFunction("set_BaseUrl", NULL, (void*)WebView__set_BaseUrl_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction("add_BeginLoading", NULL, (void*)WebView__add_BeginLoading_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_BeginLoading", NULL, (void*)WebView__remove_BeginLoading_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_CanGoBack", NULL, (void*)WebView__get_CanGoBack_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_CanGoForward", NULL, (void*)WebView__get_CanGoForward_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("get_DocumentTitle", NULL, (void*)WebView__get_DocumentTitle_fn, 0, false, ::TYPES[68/*string*/], 0),
        new uFunction("Eval", NULL, (void*)WebView__Eval_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction("Eval", NULL, (void*)WebView__Eval1_fn, 0, false, uVoid_typeof(), 2, ::TYPES[68/*string*/], ::g::Uno::Action1_typeof()->MakeType(::TYPES[68/*string*/], NULL)),
        new uFunction("get_File", NULL, (void*)WebView__get_File_fn, 0, false, ::g::Uno::UX::FileSource_typeof(), 0),
        new uFunction("set_File", NULL, (void*)WebView__set_File_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::UX::FileSource_typeof()),
        new uFunction("GoBack", NULL, (void*)WebView__GoBack_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("GoForward", NULL, (void*)WebView__GoForward_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("add_HistoryChanged", NULL, (void*)WebView__add_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]),
        new uFunction("remove_HistoryChanged", NULL, (void*)WebView__remove_HistoryChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]),
        new uFunction("get_HTMLSource", NULL, (void*)WebView__get_HTMLSource_fn, 0, false, ::g::Fuse::Controls::HTML_typeof(), 0),
        new uFunction("set_HTMLSource", NULL, (void*)WebView__set_HTMLSource_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Controls::HTML_typeof()),
        new uFunction("LoadHtml", NULL, (void*)WebView__LoadHtml_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction("LoadHtml", NULL, (void*)WebView__LoadHtml1_fn, 0, false, uVoid_typeof(), 2, ::TYPES[68/*string*/], ::TYPES[68/*string*/]),
        new uFunction("LoadUrl", NULL, (void*)WebView__LoadUrl_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction(".ctor", NULL, (void*)WebView__New4_fn, 0, true, type, 0),
        new uFunction("add_PageLoaded", NULL, (void*)WebView__add_PageLoaded_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_PageLoaded", NULL, (void*)WebView__remove_PageLoaded_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_Progress", NULL, (void*)WebView__get_Progress_fn, 0, false, ::g::Uno::Double_typeof(), 0),
        new uFunction("add_ProgressChanged", NULL, (void*)WebView__add_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("remove_ProgressChanged", NULL, (void*)WebView__remove_ProgressChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]),
        new uFunction("Reload", NULL, (void*)WebView__Reload_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("SetUrl", NULL, (void*)WebView__SetUrl_fn, 0, false, uVoid_typeof(), 2, ::TYPES[68/*string*/], ::g::Uno::UX::IPropertyListener_typeof()),
        new uFunction("get_Source", NULL, (void*)WebView__get_Source_fn, 0, false, ::TYPES[68/*string*/], 0),
        new uFunction("set_Source", NULL, (void*)WebView__set_Source_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction("Stop", NULL, (void*)WebView__Stop_fn, 0, false, uVoid_typeof(), 0),
        new uFunction("add_URISchemeHandler", NULL, (void*)WebView__add_URISchemeHandler_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_URISchemeHandler", NULL, (void*)WebView__remove_URISchemeHandler_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_Url", NULL, (void*)WebView__get_Url_fn, 0, false, ::TYPES[68/*string*/], 0),
        new uFunction("set_Url", NULL, (void*)WebView__set_Url_fn, 0, false, uVoid_typeof(), 1, ::TYPES[68/*string*/]),
        new uFunction("add_UrlChanged", NULL, (void*)WebView__add_UrlChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("remove_UrlChanged", NULL, (void*)WebView__remove_UrlChanged_fn, 0, false, uVoid_typeof(), 1, ::TYPES[30/*Uno.EventHandler*/]),
        new uFunction("get_WebViewClient", NULL, (void*)WebView__get_WebViewClient_fn, 0, false, ::TYPES[43/*Fuse.Controls.IWebView*/], 0),
        new uFunction("set_WebViewClient", NULL, (void*)WebView__set_WebViewClient_fn, 0, false, uVoid_typeof(), 1, ::TYPES[43/*Fuse.Controls.IWebView*/]),
        new uFunction("get_ZoomEnabled", NULL, (void*)WebView__get_ZoomEnabled_fn, 0, false, ::g::Uno::Bool_typeof(), 0),
        new uFunction("set_ZoomEnabled", NULL, (void*)WebView__set_ZoomEnabled_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Bool_typeof()));
}

WebView_type* WebView_typeof()
{
    static uSStrong<WebView_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 113;
    options.InterfaceCount = 19;
    options.ObjectSize = sizeof(WebView);
    options.TypeSize = sizeof(WebView_type);
    type = (WebView_type*)uClassType::New("Fuse.Controls.WebView", options);
    type->fp_build_ = WebView_build;
    type->fp_ctor_ = (void*)WebView__New4_fn;
    type->fp_cctor_ = WebView__cctor_4_fn;
    type->fp_CreateNativeView = (void(*)(::g::Fuse::Controls::Control*, uObject**))WebView__CreateNativeView_fn;
    type->fp_OnRooted = (void(*)(::g::Fuse::Node*))WebView__OnRooted_fn;
    type->fp_OnUnrooted = (void(*)(::g::Fuse::Node*))WebView__OnUnrooted_fn;
    type->interface15.fp_Eval1 = (void(*)(uObject*, uString*, uDelegate*))WebView__Eval1_fn;
    type->interface15.fp_Eval = (void(*)(uObject*, uString*))WebView__Eval_fn;
    type->interface15.fp_LoadHtml = (void(*)(uObject*, uString*))WebView__LoadHtml_fn;
    type->interface15.fp_LoadHtml1 = (void(*)(uObject*, uString*, uString*))WebView__LoadHtml1_fn;
    type->interface15.fp_LoadUrl = (void(*)(uObject*, uString*))WebView__LoadUrl_fn;
    type->interface15.fp_Stop = (void(*)(uObject*))WebView__Stop_fn;
    type->interface15.fp_Reload = (void(*)(uObject*))WebView__Reload_fn;
    type->interface15.fp_get_BaseUrl = (void(*)(uObject*, uString**))WebView__get_BaseUrl_fn;
    type->interface15.fp_set_BaseUrl = (void(*)(uObject*, uString*))WebView__set_BaseUrl_fn;
    type->interface15.fp_get_Url = (void(*)(uObject*, uString**))WebView__get_Url_fn;
    type->interface15.fp_set_Url = (void(*)(uObject*, uString*))WebView__set_Url_fn;
    type->interface15.fp_get_DocumentTitle = (void(*)(uObject*, uString**))WebView__get_DocumentTitle_fn;
    type->interface15.fp_get_File = (void(*)(uObject*, ::g::Uno::UX::FileSource**))WebView__get_File_fn;
    type->interface15.fp_set_File = (void(*)(uObject*, ::g::Uno::UX::FileSource*))WebView__set_File_fn;
    type->interface15.fp_get_ZoomEnabled = (void(*)(uObject*, bool*))WebView__get_ZoomEnabled_fn;
    type->interface15.fp_set_ZoomEnabled = (void(*)(uObject*, bool*))WebView__set_ZoomEnabled_fn;
    type->interface15.fp_add_PageLoaded = (void(*)(uObject*, uDelegate*))WebView__add_PageLoaded_fn;
    type->interface15.fp_remove_PageLoaded = (void(*)(uObject*, uDelegate*))WebView__remove_PageLoaded_fn;
    type->interface15.fp_add_BeginLoading = (void(*)(uObject*, uDelegate*))WebView__add_BeginLoading_fn;
    type->interface15.fp_remove_BeginLoading = (void(*)(uObject*, uDelegate*))WebView__remove_BeginLoading_fn;
    type->interface15.fp_add_UrlChanged = (void(*)(uObject*, uDelegate*))WebView__add_UrlChanged_fn;
    type->interface15.fp_remove_UrlChanged = (void(*)(uObject*, uDelegate*))WebView__remove_UrlChanged_fn;
    type->interface15.fp_add_URISchemeHandler = (void(*)(uObject*, uDelegate*))WebView__add_URISchemeHandler_fn;
    type->interface15.fp_remove_URISchemeHandler = (void(*)(uObject*, uDelegate*))WebView__remove_URISchemeHandler_fn;
    type->interface16.fp_get_Progress = (void(*)(uObject*, double*))WebView__get_Progress_fn;
    type->interface16.fp_add_ProgressChanged = (void(*)(uObject*, uDelegate*))WebView__add_ProgressChanged_fn;
    type->interface16.fp_remove_ProgressChanged = (void(*)(uObject*, uDelegate*))WebView__remove_ProgressChanged_fn;
    type->interface17.fp_GoForward = (void(*)(uObject*))WebView__GoForward_fn;
    type->interface17.fp_GoBack = (void(*)(uObject*))WebView__GoBack_fn;
    type->interface17.fp_get_CanGoBack = (void(*)(uObject*, bool*))WebView__get_CanGoBack_fn;
    type->interface17.fp_get_CanGoForward = (void(*)(uObject*, bool*))WebView__get_CanGoForward_fn;
    type->interface17.fp_add_HistoryChanged = (void(*)(uObject*, uDelegate*))WebView__add_HistoryChanged_fn;
    type->interface17.fp_remove_HistoryChanged = (void(*)(uObject*, uDelegate*))WebView__remove_HistoryChanged_fn;
    type->interface18.fp_get_Source = (void(*)(uObject*, uString**))WebView__get_Source_fn;
    type->interface18.fp_set_Source = (void(*)(uObject*, uString*))WebView__set_Source_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public WebView() :182
void WebView__ctor_7_fn(WebView* __this)
{
    __this->ctor_7();
}

// private void applyFallbackCalls(Fuse.Controls.IWebView client) :277
void WebView__applyFallbackCalls_fn(WebView* __this, uObject* client)
{
    __this->applyFallbackCalls(client);
}

// public string get_BaseUrl() :327
void WebView__get_BaseUrl_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->BaseUrl();
}

// public void set_BaseUrl(string value) :328
void WebView__set_BaseUrl_fn(WebView* __this, uString* value)
{
    __this->BaseUrl(value);
}

// public generated void add_BeginLoading(Uno.EventHandler value) :156
void WebView__add_BeginLoading_fn(WebView* __this, uDelegate* value)
{
    __this->add_BeginLoading(value);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) :156
void WebView__remove_BeginLoading_fn(WebView* __this, uDelegate* value)
{
    __this->remove_BeginLoading(value);
}

// public bool get_CanGoBack() :376
void WebView__get_CanGoBack_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->CanGoBack();
}

// public bool get_CanGoForward() :381
void WebView__get_CanGoForward_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->CanGoForward();
}

// protected override sealed Fuse.Controls.Native.IView CreateNativeView() :129
void WebView__CreateNativeView_fn(WebView* __this, uObject** __retval)
{
    uStackFrame __("Fuse.Controls.WebView", "CreateNativeView()");
    uString* scheme = ::STRINGS[23/*""*/];
    uArray* schemes = ::g::Uno::String::op_Inequality(scheme, ::STRINGS[23/*""*/]) ? uArray::Init<uString*>(::TYPES[0/*string[]*/], 1, scheme) : uArray::Init<uString*>(::TYPES[0/*string[]*/], 0);
    return *__retval = (uObject*)::g::Fuse::Android::Controls::WebView::Create(__this, schemes), void();
}

// public string get_DocumentTitle() :310
void WebView__get_DocumentTitle_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->DocumentTitle();
}

// public void Eval(string js) :384
void WebView__Eval_fn(WebView* __this, uString* js)
{
    __this->Eval(js);
}

// public void Eval(string js, Uno.Action<string> resultHandler) :389
void WebView__Eval1_fn(WebView* __this, uString* js, uDelegate* resultHandler)
{
    __this->Eval1(js, resultHandler);
}

// public Uno.UX.FileSource get_File() :370
void WebView__get_File_fn(WebView* __this, ::g::Uno::UX::FileSource** __retval)
{
    *__retval = __this->File();
}

// public void set_File(Uno.UX.FileSource value) :371
void WebView__set_File_fn(WebView* __this, ::g::Uno::UX::FileSource* value)
{
    __this->File(value);
}

// public void GoBack() :394
void WebView__GoBack_fn(WebView* __this)
{
    __this->GoBack();
}

// public void GoForward() :399
void WebView__GoForward_fn(WebView* __this)
{
    __this->GoForward();
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :419
void WebView__add_HistoryChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_HistoryChanged(value);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) :419
void WebView__remove_HistoryChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_HistoryChanged(value);
}

// public Fuse.Controls.HTML get_HTMLSource() :172
void WebView__get_HTMLSource_fn(WebView* __this, ::g::Fuse::Controls::HTML** __retval)
{
    *__retval = __this->HTMLSource();
}

// public void set_HTMLSource(Fuse.Controls.HTML value) :176
void WebView__set_HTMLSource_fn(WebView* __this, ::g::Fuse::Controls::HTML* value)
{
    __this->HTMLSource(value);
}

// private static void loadHtml(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) :567
void WebView__loadHtml_fn(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    WebView::loadHtml(c, view, args);
}

// public void LoadHtml(string html) :317
void WebView__LoadHtml_fn(WebView* __this, uString* html)
{
    __this->LoadHtml(html);
}

// public void LoadHtml(string html, string baseUrl) :313
void WebView__LoadHtml1_fn(WebView* __this, uString* html, uString* baseUrl)
{
    __this->LoadHtml1(html, baseUrl);
}

// public void LoadUrl(string url) :414
void WebView__LoadUrl_fn(WebView* __this, uString* url)
{
    __this->LoadUrl(url);
}

// public WebView New() :182
void WebView__New4_fn(WebView** __retval)
{
    *__retval = WebView::New4();
}

// private void OnBeginLoading(object sender, Uno.EventArgs args) :290
void WebView__OnBeginLoading_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnBeginLoading(sender, args);
}

// protected void OnHistoryChanged() :421
void WebView__OnHistoryChanged_fn(WebView* __this)
{
    __this->OnHistoryChanged();
}

// private void OnPageChanged(object sender, Uno.EventArgs args) :283
void WebView__OnPageChanged_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnPageChanged(sender, args);
}

// private void OnPageLoaded(object sender, Uno.EventArgs args) :302
void WebView__OnPageLoaded_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnPageLoaded(sender, args);
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) :296
void WebView__OnProgressChanged_fn(WebView* __this, uObject* sender, ::g::Uno::EventArgs* args)
{
    __this->OnProgressChanged(sender, args);
}

// protected override sealed void OnRooted() :198
void WebView__OnRooted_fn(WebView* __this)
{
    uStackFrame __("Fuse.Controls.WebView", "OnRooted()");
    ::g::Fuse::Controls::Panel__OnRooted_fn(__this);
}

// protected override sealed void OnUnrooted() :203
void WebView__OnUnrooted_fn(WebView* __this)
{
    uStackFrame __("Fuse.Controls.WebView", "OnUnrooted()");
    ::g::Fuse::Controls::Panel__OnUnrooted_fn(__this);
}

// public generated void add_PageLoaded(Uno.EventHandler value) :152
void WebView__add_PageLoaded_fn(WebView* __this, uDelegate* value)
{
    __this->add_PageLoaded(value);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) :152
void WebView__remove_PageLoaded_fn(WebView* __this, uDelegate* value)
{
    __this->remove_PageLoaded(value);
}

// public double get_Progress() :145
void WebView__get_Progress_fn(WebView* __this, double* __retval)
{
    *__retval = __this->Progress();
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :148
void WebView__add_ProgressChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_ProgressChanged(value);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) :148
void WebView__remove_ProgressChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_ProgressChanged(value);
}

// public void Reload() :404
void WebView__Reload_fn(WebView* __this)
{
    __this->Reload();
}

// private static void setBaseUrl(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) :610
void WebView__setBaseUrl_fn(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    WebView::setBaseUrl(c, view, args);
}

// private static void setUrl(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) :591
void WebView__setUrl_fn(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    WebView::setUrl(c, view, args);
}

// public void SetUrl(string value, Uno.UX.IPropertyListener origin) :348
void WebView__SetUrl_fn(WebView* __this, uString* value, uObject* origin)
{
    __this->SetUrl(value, origin);
}

// public string get_Source() :336
void WebView__get_Source_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->Source();
}

// public void set_Source(string value) :337
void WebView__set_Source_fn(WebView* __this, uString* value)
{
    __this->Source(value);
}

// public void Stop() :409
void WebView__Stop_fn(WebView* __this)
{
    __this->Stop();
}

// internal void UpdateRestState() :340
void WebView__UpdateRestState_fn(WebView* __this)
{
    __this->UpdateRestState();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) :164
void WebView__add_URISchemeHandler_fn(WebView* __this, uDelegate* value)
{
    __this->add_URISchemeHandler(value);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) :164
void WebView__remove_URISchemeHandler_fn(WebView* __this, uDelegate* value)
{
    __this->remove_URISchemeHandler(value);
}

// public string get_Url() :361
void WebView__get_Url_fn(WebView* __this, uString** __retval)
{
    *__retval = __this->Url();
}

// public void set_Url(string value) :362
void WebView__set_Url_fn(WebView* __this, uString* value)
{
    __this->Url(value);
}

// public generated void add_UrlChanged(Uno.EventHandler value) :160
void WebView__add_UrlChanged_fn(WebView* __this, uDelegate* value)
{
    __this->add_UrlChanged(value);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) :160
void WebView__remove_UrlChanged_fn(WebView* __this, uDelegate* value)
{
    __this->remove_UrlChanged(value);
}

// public Fuse.Controls.IWebView get_WebViewClient() :213
void WebView__get_WebViewClient_fn(WebView* __this, uObject** __retval)
{
    *__retval = __this->WebViewClient();
}

// public void set_WebViewClient(Fuse.Controls.IWebView value) :214
void WebView__set_WebViewClient_fn(WebView* __this, uObject* value)
{
    __this->WebViewClient(value);
}

// public bool get_ZoomEnabled() :274
void WebView__get_ZoomEnabled_fn(WebView* __this, bool* __retval)
{
    *__retval = __this->ZoomEnabled();
}

// public void set_ZoomEnabled(bool value) :267
void WebView__set_ZoomEnabled_fn(WebView* __this, bool* value)
{
    __this->ZoomEnabled(*value);
}

::g::Uno::UX::Selector WebView::_urlName_;

// public WebView() [instance] :182
void WebView::ctor_7()
{
    uStackFrame __("Fuse.Controls.WebView", ".ctor()");
    _fallbackClient = (uObject*)::g::Fuse::Controls::FallbackWebViewClient::New1();
    ctor_6();
    ClipToBounds(true);
    WebViewClient(_fallbackClient);
}

// private void applyFallbackCalls(Fuse.Controls.IWebView client) [instance] :277
void WebView::applyFallbackCalls(uObject* client)
{
    uStackFrame __("Fuse.Controls.WebView", "applyFallbackCalls(Fuse.Controls.IWebView)");
    ::g::Fuse::Controls::FallbackWebViewClient* fbc = uAs< ::g::Fuse::Controls::FallbackWebViewClient*>(_fallbackClient, ::TYPES[160/*Fuse.Controls.FallbackWebViewClient*/]);
    uPtr(fbc)->ApplyBufferedCalls(client);
}

// public string get_BaseUrl() [instance] :327
uString* WebView::BaseUrl()
{
    uStackFrame __("Fuse.Controls.WebView", "get_BaseUrl()");
    return ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void set_BaseUrl(string value) [instance] :328
void WebView::BaseUrl(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_BaseUrl(string)");
    ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (value != NULL) ? value : ::STRINGS[23/*""*/]);
}

// public generated void add_BeginLoading(Uno.EventHandler value) [instance] :156
void WebView::add_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(BeginLoading1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_BeginLoading(Uno.EventHandler value) [instance] :156
void WebView::remove_BeginLoading(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_BeginLoading(Uno.EventHandler)");
    BeginLoading1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(BeginLoading1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public bool get_CanGoBack() [instance] :376
bool WebView::CanGoBack()
{
    uStackFrame __("Fuse.Controls.WebView", "get_CanGoBack()");
    return ::g::Fuse::Navigation::IBaseNavigation::CanGoBack(uInterface(uPtr(WebViewClient()), ::TYPES[161/*Fuse.Navigation.IBaseNavigation*/]));
}

// public bool get_CanGoForward() [instance] :381
bool WebView::CanGoForward()
{
    uStackFrame __("Fuse.Controls.WebView", "get_CanGoForward()");
    return ::g::Fuse::Navigation::IBaseNavigation::CanGoForward(uInterface(uPtr(WebViewClient()), ::TYPES[161/*Fuse.Navigation.IBaseNavigation*/]));
}

// public string get_DocumentTitle() [instance] :310
uString* WebView::DocumentTitle()
{
    uStackFrame __("Fuse.Controls.WebView", "get_DocumentTitle()");
    return ::g::Fuse::Controls::IWebView::DocumentTitle(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void Eval(string js) [instance] :384
void WebView::Eval(uString* js)
{
    uStackFrame __("Fuse.Controls.WebView", "Eval(string)");
    ::g::Fuse::Controls::IWebView::Eval(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (js != NULL) ? js : ::STRINGS[23/*""*/]);
}

// public void Eval(string js, Uno.Action<string> resultHandler) [instance] :389
void WebView::Eval1(uString* js, uDelegate* resultHandler)
{
    uStackFrame __("Fuse.Controls.WebView", "Eval(string,Uno.Action<string>)");
    ::g::Fuse::Controls::IWebView::Eval1(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (js != NULL) ? js : ::STRINGS[23/*""*/], resultHandler);
}

// public Uno.UX.FileSource get_File() [instance] :370
::g::Uno::UX::FileSource* WebView::File()
{
    uStackFrame __("Fuse.Controls.WebView", "get_File()");
    return ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void set_File(Uno.UX.FileSource value) [instance] :371
void WebView::File(::g::Uno::UX::FileSource* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_File(Uno.UX.FileSource)");
    ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), value);
}

// public void GoBack() [instance] :394
void WebView::GoBack()
{
    uStackFrame __("Fuse.Controls.WebView", "GoBack()");
    ::g::Fuse::Navigation::IBaseNavigation::GoBack(uInterface(uPtr(WebViewClient()), ::TYPES[161/*Fuse.Navigation.IBaseNavigation*/]));
}

// public void GoForward() [instance] :399
void WebView::GoForward()
{
    uStackFrame __("Fuse.Controls.WebView", "GoForward()");
    ::g::Fuse::Navigation::IBaseNavigation::GoForward(uInterface(uPtr(WebViewClient()), ::TYPES[161/*Fuse.Navigation.IBaseNavigation*/]));
}

// public generated void add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :419
void WebView::add_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(HistoryChanged1, value), ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public generated void remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler value) [instance] :419
void WebView::remove_HistoryChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_HistoryChanged(Fuse.Navigation.HistoryChangedHandler)");
    HistoryChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(HistoryChanged1, value), ::TYPES[31/*Fuse.Navigation.HistoryChangedHandler*/]);
}

// public Fuse.Controls.HTML get_HTMLSource() [instance] :172
::g::Fuse::Controls::HTML* WebView::HTMLSource()
{
    return _html;
}

// public void set_HTMLSource(Fuse.Controls.HTML value) [instance] :176
void WebView::HTMLSource(::g::Fuse::Controls::HTML* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_HTMLSource(Fuse.Controls.HTML)");
    _html = value;
    uPtr(_html)->Receiver = (uObject*)this;
}

// public void LoadHtml(string html) [instance] :317
void WebView::LoadHtml(uString* html)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadHtml(string)");
    ::g::Fuse::Controls::IWebView::LoadHtml(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (html != NULL) ? html : ::STRINGS[23/*""*/]);
}

// public void LoadHtml(string html, string baseUrl) [instance] :313
void WebView::LoadHtml1(uString* html, uString* baseUrl)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadHtml(string,string)");
    ::g::Fuse::Controls::IWebView::LoadHtml1(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (html != NULL) ? html : ::STRINGS[23/*""*/], baseUrl);
}

// public void LoadUrl(string url) [instance] :414
void WebView::LoadUrl(uString* url)
{
    uStackFrame __("Fuse.Controls.WebView", "LoadUrl(string)");
    ::g::Fuse::Controls::IWebView::LoadUrl(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), (url != NULL) ? url : ::STRINGS[173/*"about:blank"*/]);
}

// private void OnBeginLoading(object sender, Uno.EventArgs args) [instance] :290
void WebView::OnBeginLoading(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnBeginLoading(object,Uno.EventArgs)");

    if (::g::Uno::Delegate::op_Inequality(BeginLoading1, NULL))
        uPtr(BeginLoading1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// protected void OnHistoryChanged() [instance] :421
void WebView::OnHistoryChanged()
{
    uStackFrame __("Fuse.Controls.WebView", "OnHistoryChanged()");

    if (::g::Uno::Delegate::op_Inequality(HistoryChanged1, NULL))
        uPtr(HistoryChanged1)->InvokeVoid(this);
}

// private void OnPageChanged(object sender, Uno.EventArgs args) [instance] :283
void WebView::OnPageChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnPageChanged(object,Uno.EventArgs)");
    UpdateRestState();

    if (::g::Uno::Delegate::op_Inequality(UrlChanged1, NULL))
        uPtr(UrlChanged1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnPageLoaded(object sender, Uno.EventArgs args) [instance] :302
void WebView::OnPageLoaded(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnPageLoaded(object,Uno.EventArgs)");

    if (::g::Uno::Delegate::op_Inequality(PageLoaded1, NULL))
        uPtr(PageLoaded1)->Invoke(2, this, (::g::Uno::EventArgs*)::g::Uno::EventArgs::Empty());
}

// private void OnProgressChanged(object sender, Uno.EventArgs args) [instance] :296
void WebView::OnProgressChanged(uObject* sender, ::g::Uno::EventArgs* args)
{
    uStackFrame __("Fuse.Controls.WebView", "OnProgressChanged(object,Uno.EventArgs)");
    ::g::Uno::UX::ValueChangedArgs* ret4;

    if (::g::Uno::Delegate::op_Inequality(ProgressChanged1, NULL))
        uPtr(ProgressChanged1)->Invoke(2, this, (::g::Uno::UX::ValueChangedArgs__New2_fn(::TYPES[153/*Uno.UX.ValueChangedArgs<double>*/], uCRef(Progress()), &ret4), ret4));
}

// public generated void add_PageLoaded(Uno.EventHandler value) [instance] :152
void WebView::add_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(PageLoaded1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_PageLoaded(Uno.EventHandler value) [instance] :152
void WebView::remove_PageLoaded(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_PageLoaded(Uno.EventHandler)");
    PageLoaded1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(PageLoaded1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public double get_Progress() [instance] :145
double WebView::Progress()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Progress()");
    return ::g::Fuse::Triggers::IProgress::Progress(uInterface(uPtr(WebViewClient()), ::TYPES[157/*Fuse.Triggers.IProgress*/]));
}

// public generated void add_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :148
void WebView::add_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public generated void remove_ProgressChanged(Uno.UX.ValueChangedHandler<double> value) [instance] :148
void WebView::remove_ProgressChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_ProgressChanged(Uno.UX.ValueChangedHandler<double>)");
    ProgressChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(ProgressChanged1, value), ::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/]);
}

// public void Reload() [instance] :404
void WebView::Reload()
{
    uStackFrame __("Fuse.Controls.WebView", "Reload()");
    ::g::Fuse::Controls::IWebView::Reload(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void SetUrl(string value, Uno.UX.IPropertyListener origin) [instance] :348
void WebView::SetUrl(uString* value, uObject* origin)
{
    uStackFrame __("Fuse.Controls.WebView", "SetUrl(string,Uno.UX.IPropertyListener)");
    OnPropertyChanged1(WebView::_urlName(), origin);
    ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), value);
    UpdateRestState();
}

// public string get_Source() [instance] :336
uString* WebView::Source()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Source()");
    return ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(WebViewClient()), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/]));
}

// public void set_Source(string value) [instance] :337
void WebView::Source(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_Source(string)");
    ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(WebViewClient()), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/]), (value != NULL) ? value : ::STRINGS[23/*""*/]);
}

// public void Stop() [instance] :409
void WebView::Stop()
{
    uStackFrame __("Fuse.Controls.WebView", "Stop()");
    ::g::Fuse::Controls::IWebView::Stop(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// internal void UpdateRestState() [instance] :340
void WebView::UpdateRestState()
{
    uStackFrame __("Fuse.Controls.WebView", "UpdateRestState()");
    OnPropertyChanged1(WebView::_urlName(), (uObject*)this);
    OnHistoryChanged();
}

// public generated void add_URISchemeHandler(Uno.EventHandler value) [instance] :164
void WebView::add_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(URISchemeHandler1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_URISchemeHandler(Uno.EventHandler value) [instance] :164
void WebView::remove_URISchemeHandler(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_URISchemeHandler(Uno.EventHandler)");
    URISchemeHandler1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(URISchemeHandler1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public string get_Url() [instance] :361
uString* WebView::Url()
{
    uStackFrame __("Fuse.Controls.WebView", "get_Url()");
    return ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void set_Url(string value) [instance] :362
void WebView::Url(uString* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_Url(string)");
    SetUrl((value != NULL) ? value : ::STRINGS[173/*"about:blank"*/], (uObject*)this);
}

// public generated void add_UrlChanged(Uno.EventHandler value) [instance] :160
void WebView::add_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "add_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Combine(UrlChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public generated void remove_UrlChanged(Uno.EventHandler value) [instance] :160
void WebView::remove_UrlChanged(uDelegate* value)
{
    uStackFrame __("Fuse.Controls.WebView", "remove_UrlChanged(Uno.EventHandler)");
    UrlChanged1 = uCast<uDelegate*>(::g::Uno::Delegate::Remove(UrlChanged1, value), ::TYPES[30/*Uno.EventHandler*/]);
}

// public Fuse.Controls.IWebView get_WebViewClient() [instance] :213
uObject* WebView::WebViewClient()
{
    uObject* ind1 = _webViewClient;
    return (ind1 != NULL) ? ind1 : (uObject*)_fallbackClient;
}

// public void set_WebViewClient(Fuse.Controls.IWebView value) [instance] :214
void WebView::WebViewClient(uObject* value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_WebViewClient(Fuse.Controls.IWebView)");
    uString* ind2;
    uString* url = ::STRINGS[173/*"about:blank"*/];
    uString* source = ::STRINGS[23/*""*/];
    uString* baseUrl = NULL;
    bool zoomEnabled = true;
    ::g::Uno::UX::FileSource* file = NULL;

    if (_webViewClient != NULL)
    {
        ::g::Fuse::Triggers::IProgress::remove_ProgressChanged(uInterface(uPtr(_webViewClient), ::TYPES[157/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], (void*)WebView__OnProgressChanged_fn, this));
        ::g::Fuse::Controls::IWebView::remove_PageLoaded(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnPageLoaded_fn, this));
        ::g::Fuse::Controls::IWebView::remove_BeginLoading(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnBeginLoading_fn, this));
        ::g::Fuse::Controls::IWebView::remove_UrlChanged(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnPageChanged_fn, this));
        ::g::Fuse::Controls::IWebView::remove_URISchemeHandler(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), URISchemeHandler1);
        url = ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]));
        source = (ind2 = ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(_webViewClient), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/])), (ind2 != NULL) ? ind2 : ::STRINGS[23/*""*/]);
        baseUrl = ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]));
        file = ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]));
        zoomEnabled = ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]));
    }

    _webViewClient = ((value != NULL) ? value : (uObject*)_fallbackClient);

    if (_webViewClient != NULL)
    {
        ::g::Fuse::Triggers::IProgress::add_ProgressChanged(uInterface(uPtr(_webViewClient), ::TYPES[157/*Fuse.Triggers.IProgress*/]), uDelegate::New(::TYPES[32/*Uno.UX.ValueChangedHandler<double>*/], (void*)WebView__OnProgressChanged_fn, this));
        ::g::Fuse::Controls::IWebView::add_PageLoaded(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnPageLoaded_fn, this));
        ::g::Fuse::Controls::IWebView::add_BeginLoading(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnBeginLoading_fn, this));
        ::g::Fuse::Controls::IWebView::add_UrlChanged(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), uDelegate::New(::TYPES[30/*Uno.EventHandler*/], (void*)WebView__OnPageChanged_fn, this));
        ::g::Fuse::Controls::IWebView::add_URISchemeHandler(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), URISchemeHandler1);
        ::g::Fuse::Controls::IWebView::BaseUrl(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), baseUrl);
        ::g::Fuse::Controls::ISourceReceiver::Source(uInterface(uPtr(_webViewClient), ::TYPES[39/*Fuse.Controls.ISourceReceiver*/]), source);
        ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), zoomEnabled);

        if (::g::Uno::String::op_Equality(source, ::STRINGS[23/*""*/]))
            ::g::Fuse::Controls::IWebView::Url(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), url);

        ::g::Fuse::Controls::IWebView::File(uInterface(uPtr(_webViewClient), ::TYPES[43/*Fuse.Controls.IWebView*/]), file);
        applyFallbackCalls(_webViewClient);
    }
}

// public bool get_ZoomEnabled() [instance] :274
bool WebView::ZoomEnabled()
{
    uStackFrame __("Fuse.Controls.WebView", "get_ZoomEnabled()");
    return ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]));
}

// public void set_ZoomEnabled(bool value) [instance] :267
void WebView::ZoomEnabled(bool value)
{
    uStackFrame __("Fuse.Controls.WebView", "set_ZoomEnabled(bool)");

    if (WebViewClient() != _fallbackClient)
    {
        ::g::Uno::Diagnostics::Debug::Log5(::STRINGS[177/*"ZoomEnabled...*/], 1, ::STRINGS[172/*"/Users/medb...*/], 269);
        return;
    }

    ::g::Fuse::Controls::IWebView::ZoomEnabled(uInterface(uPtr(WebViewClient()), ::TYPES[43/*Fuse.Controls.IWebView*/]), value);
}

// private static void loadHtml(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) [static] :567
void WebView::loadHtml(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "loadHtml(Fuse.Scripting.Context,Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->LoadHtml(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[68/*string*/]));
            return;
        }
        case 2:
        {
            uPtr(view)->LoadHtml1(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[68/*string*/]), uAs<uString*>(uPtr(args)->Strong<uObject*>(1), ::TYPES[68/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[171/*"WebView.loa...*/], view, ::STRINGS[172/*"/Users/medb...*/], 579, ::STRINGS[169/*"loadHtml"*/], NULL);
            return;
        }
    }
}

// public WebView New() [static] :182
WebView* WebView::New4()
{
    WebView* obj3 = (WebView*)uNew(WebView_typeof());
    obj3->ctor_7();
    return obj3;
}

// private static void setBaseUrl(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) [static] :610
void WebView::setBaseUrl(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "setBaseUrl(Fuse.Scripting.Context,Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->BaseUrl(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[68/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[174/*"WebView.set...*/], view, ::STRINGS[172/*"/Users/medb...*/], 618, ::STRINGS[170/*"setBaseUrl"*/], NULL);
            return;
        }
    }
}

// private static void setUrl(Fuse.Scripting.Context c, Fuse.Controls.WebView view, object[] args) [static] :591
void WebView::setUrl(::g::Fuse::Scripting::Context* c, WebView* view, uArray* args)
{
    uStackFrame __("Fuse.Controls.WebView", "setUrl(Fuse.Scripting.Context,Fuse.Controls.WebView,object[])");
    WebView_typeof()->Init();

    switch (uPtr(args)->Length())
    {
        case 1:
        {
            uPtr(view)->Url(uAs<uString*>(uPtr(args)->Strong<uObject*>(0), ::TYPES[68/*string*/]));
            return;
        }
        default:
        {
            ::g::Fuse::Diagnostics::UserError(::STRINGS[175/*"WebView.set...*/], view, ::STRINGS[172/*"/Users/medb...*/], 599, ::STRINGS[176/*"setUrl"*/], NULL);
            return;
        }
    }
}
// }

// /Users/medbeji/Library/Application Support/Fusetools/Packages/Fuse.Controls.Panels/0.47.7/$.uno
// -----------------------------------------------------------------------------------------------

// public sealed class WrapPanel :2947
// {
static void WrapPanel_build(uType* type)
{
    type->SetInterfaces(
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface0),
        ::g::Fuse::Scripting::IScriptObject_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface1),
        ::g::Fuse::IProperties_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface2),
        ::g::Fuse::INotifyUnrooted_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface3),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface4),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Binding_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface5),
        ::g::Uno::Collections::IList_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface6),
        ::g::Uno::UX::IPropertyListener_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface7),
        ::g::Uno::Collections::ICollection_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface8),
        ::g::Uno::Collections::IEnumerable_typeof()->MakeType(::g::Fuse::Node_typeof(), NULL), offsetof(::g::Fuse::Controls::Control_type, interface9),
        ::g::Fuse::Triggers::Actions::IShow_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface10),
        ::g::Fuse::Triggers::Actions::IHide_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface11),
        ::g::Fuse::Triggers::Actions::ICollapse_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface12),
        ::g::Fuse::IActualPlacement_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface13),
        ::g::Fuse::Animations::IResize_typeof(), offsetof(::g::Fuse::Controls::Control_type, interface14));
    type->SetFields(103,
        ::g::Fuse::Layouts::WrapLayout_typeof(), offsetof(::g::Fuse::Controls::WrapPanel, _wrapLayout), 0);
    type->Reflection.SetFunctions(13,
        new uFunction("get_FlowDirection", NULL, (void*)WrapPanel__get_FlowDirection_fn, 0, false, ::g::Fuse::Layouts::FlowDirection_typeof(), 0),
        new uFunction("set_FlowDirection", NULL, (void*)WrapPanel__set_FlowDirection_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::FlowDirection_typeof()),
        new uFunction("get_ID", NULL, (void*)WrapPanel__get_ID_fn, 0, false, ::g::Uno::String_typeof(), 0),
        new uFunction("set_ID", NULL, (void*)WrapPanel__set_ID_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::String_typeof()),
        new uFunction("get_ItemHeight", NULL, (void*)WrapPanel__get_ItemHeight_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemHeight", NULL, (void*)WrapPanel__set_ItemHeight_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction("get_ItemWidth", NULL, (void*)WrapPanel__get_ItemWidth_fn, 0, false, ::g::Uno::Float_typeof(), 0),
        new uFunction("set_ItemWidth", NULL, (void*)WrapPanel__set_ItemWidth_fn, 0, false, uVoid_typeof(), 1, ::g::Uno::Float_typeof()),
        new uFunction(".ctor", NULL, (void*)WrapPanel__New4_fn, 0, true, type, 0),
        new uFunction("get_Orientation", NULL, (void*)WrapPanel__get_Orientation_fn, 0, false, ::g::Fuse::Layouts::Orientation_typeof(), 0),
        new uFunction("set_Orientation", NULL, (void*)WrapPanel__set_Orientation_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Layouts::Orientation_typeof()),
        new uFunction("get_RowAlignment", NULL, (void*)WrapPanel__get_RowAlignment_fn, 0, false, ::g::Fuse::Elements::Alignment_typeof(), 0),
        new uFunction("set_RowAlignment", NULL, (void*)WrapPanel__set_RowAlignment_fn, 0, false, uVoid_typeof(), 1, ::g::Fuse::Elements::Alignment_typeof()));
}

::g::Fuse::Controls::Control_type* WrapPanel_typeof()
{
    static uSStrong< ::g::Fuse::Controls::Control_type*> type;
    if (type != NULL) return type;

    uTypeOptions options;
    options.BaseDefinition = ::g::Fuse::Controls::Panel_typeof();
    options.FieldCount = 104;
    options.InterfaceCount = 15;
    options.ObjectSize = sizeof(WrapPanel);
    options.TypeSize = sizeof(::g::Fuse::Controls::Control_type);
    type = (::g::Fuse::Controls::Control_type*)uClassType::New("Fuse.Controls.WrapPanel", options);
    type->fp_build_ = WrapPanel_build;
    type->fp_ctor_ = (void*)WrapPanel__New4_fn;
    type->interface10.fp_Show = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIShowShow_fn;
    type->interface12.fp_Collapse = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsICollapseCollapse_fn;
    type->interface11.fp_Hide = (void(*)(uObject*))::g::Fuse::Elements::Element__FuseTriggersActionsIHideHide_fn;
    type->interface14.fp_SetSize = (void(*)(uObject*, ::g::Uno::Float2*))::g::Fuse::Elements::Element__FuseAnimationsIResizeSetSize_fn;
    type->interface13.fp_get_ActualSize = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualSize_fn;
    type->interface13.fp_get_ActualPosition = (void(*)(uObject*, ::g::Uno::Float3*))::g::Fuse::Elements::Element__FuseIActualPlacementget_ActualPosition_fn;
    type->interface13.fp_add_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__add_Placed_fn;
    type->interface13.fp_remove_Placed = (void(*)(uObject*, uDelegate*))::g::Fuse::Elements::Element__remove_Placed_fn;
    type->interface8.fp_Clear = (void(*)(uObject*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeClear_fn;
    type->interface8.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeContains_fn;
    type->interface6.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsIListFuseNodeRemoveAt_fn;
    type->interface9.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Visual__UnoCollectionsIEnumerableFuseNodeGetEnumerator_fn;
    type->interface8.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Visual__UnoCollectionsICollectionFuseNodeget_Count_fn;
    type->interface6.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Visual__UnoCollectionsIListFuseNodeget_Item_fn;
    type->interface6.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Visual__Insert1_fn;
    type->interface7.fp_OnPropertyChanged = (void(*)(uObject*, ::g::Uno::UX::PropertyObject*, ::g::Uno::UX::Selector*))::g::Fuse::Controls::Control__OnPropertyChanged2_fn;
    type->interface8.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Visual__Add1_fn;
    type->interface8.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Visual__Remove1_fn;
    type->interface4.fp_Clear = (void(*)(uObject*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingClear_fn;
    type->interface4.fp_Contains = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingContains_fn;
    type->interface0.fp_RemoveAt = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsIListFuseBindingRemoveAt_fn;
    type->interface5.fp_GetEnumerator = (void(*)(uObject*, uObject**))::g::Fuse::Node__UnoCollectionsIEnumerableFuseBindingGetEnumerator_fn;
    type->interface1.fp_SetScriptObject = (void(*)(uObject*, uObject*, ::g::Fuse::Scripting::Context*))::g::Fuse::Node__FuseScriptingIScriptObjectSetScriptObject_fn;
    type->interface4.fp_get_Count = (void(*)(uObject*, int*))::g::Fuse::Node__UnoCollectionsICollectionFuseBindingget_Count_fn;
    type->interface0.fp_get_Item = (void(*)(uObject*, int*, uTRef))::g::Fuse::Node__UnoCollectionsIListFuseBindingget_Item_fn;
    type->interface1.fp_get_ScriptObject = (void(*)(uObject*, uObject**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptObject_fn;
    type->interface1.fp_get_ScriptContext = (void(*)(uObject*, ::g::Fuse::Scripting::Context**))::g::Fuse::Node__FuseScriptingIScriptObjectget_ScriptContext_fn;
    type->interface3.fp_add_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedadd_Unrooted_fn;
    type->interface3.fp_remove_Unrooted = (void(*)(uObject*, uDelegate*))::g::Fuse::Node__FuseINotifyUnrootedremove_Unrooted_fn;
    type->interface0.fp_Insert = (void(*)(uObject*, int*, void*))::g::Fuse::Node__Insert_fn;
    type->interface2.fp_get_Properties = (void(*)(uObject*, ::g::Fuse::Properties**))::g::Fuse::Node__get_Properties_fn;
    type->interface4.fp_Add = (void(*)(uObject*, void*))::g::Fuse::Node__Add_fn;
    type->interface4.fp_Remove = (void(*)(uObject*, void*, bool*))::g::Fuse::Node__Remove_fn;
    return type;
}

// public WrapPanel() :3007
void WrapPanel__ctor_7_fn(WrapPanel* __this)
{
    __this->ctor_7();
}

// public Fuse.Layouts.FlowDirection get_FlowDirection() :2994
void WrapPanel__get_FlowDirection_fn(WrapPanel* __this, int* __retval)
{
    *__retval = __this->FlowDirection();
}

// public void set_FlowDirection(Fuse.Layouts.FlowDirection value) :2995
void WrapPanel__set_FlowDirection_fn(WrapPanel* __this, int* value)
{
    __this->FlowDirection(*value);
}

// public string get_ID() :3014
void WrapPanel__get_ID_fn(WrapPanel* __this, uString** __retval)
{
    *__retval = __this->ID();
}

// public void set_ID(string value) :3015
void WrapPanel__set_ID_fn(WrapPanel* __this, uString* value)
{
    __this->ID(value);
}

// public float get_ItemHeight() :2959
void WrapPanel__get_ItemHeight_fn(WrapPanel* __this, float* __retval)
{
    *__retval = __this->ItemHeight();
}

// public void set_ItemHeight(float value) :2960
void WrapPanel__set_ItemHeight_fn(WrapPanel* __this, float* value)
{
    __this->ItemHeight(*value);
}

// public float get_ItemWidth() :2952
void WrapPanel__get_ItemWidth_fn(WrapPanel* __this, float* __retval)
{
    *__retval = __this->ItemWidth();
}

// public void set_ItemWidth(float value) :2953
void WrapPanel__set_ItemWidth_fn(WrapPanel* __this, float* value)
{
    __this->ItemWidth(*value);
}

// public WrapPanel New() :3007
void WrapPanel__New4_fn(WrapPanel** __retval)
{
    *__retval = WrapPanel::New4();
}

// public Fuse.Layouts.Orientation get_Orientation() :2977
void WrapPanel__get_Orientation_fn(WrapPanel* __this, int* __retval)
{
    *__retval = __this->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) :2978
void WrapPanel__set_Orientation_fn(WrapPanel* __this, int* value)
{
    __this->Orientation(*value);
}

// public Fuse.Elements.Alignment get_RowAlignment() :3001
void WrapPanel__get_RowAlignment_fn(WrapPanel* __this, int* __retval)
{
    *__retval = __this->RowAlignment();
}

// public void set_RowAlignment(Fuse.Elements.Alignment value) :3002
void WrapPanel__set_RowAlignment_fn(WrapPanel* __this, int* value)
{
    __this->RowAlignment(*value);
}

// public WrapPanel() [instance] :3007
void WrapPanel::ctor_7()
{
    uStackFrame __("Fuse.Controls.WrapPanel", ".ctor()");
    ctor_6();
    Layout(_wrapLayout = ::g::Fuse::Layouts::WrapLayout::New2());
}

// public Fuse.Layouts.FlowDirection get_FlowDirection() [instance] :2994
int WrapPanel::FlowDirection()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_FlowDirection()");
    return uPtr(_wrapLayout)->FlowDirection();
}

// public void set_FlowDirection(Fuse.Layouts.FlowDirection value) [instance] :2995
void WrapPanel::FlowDirection(int value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_FlowDirection(Fuse.Layouts.FlowDirection)");
    uPtr(_wrapLayout)->FlowDirection(value);
}

// public string get_ID() [instance] :3014
uString* WrapPanel::ID()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ID()");
    return uPtr(_wrapLayout)->ID();
}

// public void set_ID(string value) [instance] :3015
void WrapPanel::ID(uString* value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ID(string)");
    uPtr(_wrapLayout)->ID(value);
}

// public float get_ItemHeight() [instance] :2959
float WrapPanel::ItemHeight()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ItemHeight()");
    return uPtr(_wrapLayout)->ItemHeight();
}

// public void set_ItemHeight(float value) [instance] :2960
void WrapPanel::ItemHeight(float value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ItemHeight(float)");
    uPtr(_wrapLayout)->ItemHeight(value);
}

// public float get_ItemWidth() [instance] :2952
float WrapPanel::ItemWidth()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_ItemWidth()");
    return uPtr(_wrapLayout)->ItemWidth();
}

// public void set_ItemWidth(float value) [instance] :2953
void WrapPanel::ItemWidth(float value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_ItemWidth(float)");
    uPtr(_wrapLayout)->ItemWidth(value);
}

// public Fuse.Layouts.Orientation get_Orientation() [instance] :2977
int WrapPanel::Orientation()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_Orientation()");
    return uPtr(_wrapLayout)->Orientation();
}

// public void set_Orientation(Fuse.Layouts.Orientation value) [instance] :2978
void WrapPanel::Orientation(int value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_Orientation(Fuse.Layouts.Orientation)");
    uPtr(_wrapLayout)->Orientation(value);
}

// public Fuse.Elements.Alignment get_RowAlignment() [instance] :3001
int WrapPanel::RowAlignment()
{
    uStackFrame __("Fuse.Controls.WrapPanel", "get_RowAlignment()");
    return uPtr(_wrapLayout)->RowAlignment();
}

// public void set_RowAlignment(Fuse.Elements.Alignment value) [instance] :3002
void WrapPanel::RowAlignment(int value)
{
    uStackFrame __("Fuse.Controls.WrapPanel", "set_RowAlignment(Fuse.Elements.Alignment)");
    uPtr(_wrapLayout)->RowAlignment(value);
}

// public WrapPanel New() [static] :3007
WrapPanel* WrapPanel::New4()
{
    WrapPanel* obj1 = (WrapPanel*)uNew(WrapPanel_typeof());
    obj1->ctor_7();
    return obj1;
}
// }

}}} // ::g::Fuse::Controls
